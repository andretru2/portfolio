---
import { AuroraBackground } from "@/components/ui/aurora-background";
import { SphereCanvas } from "./hero/canvas/sphere";
import { Swapper } from "./hero/swapper";
import Background from "@/components/ui/section-background.astro";

// import Test from "./hero/test.astro";
---

<section
  class="bg-bgColorHero relative min-h-[115svh] grid place-content-center gap-xl justify-center w-full min-w-7xl [perspective:1000px] overflow-hidden [&>*]:-translate-y-8"
>
  <Background backgroundType="hero" />
  <!--
    <AuroraBackground
    className="absolute mix-blend-exclusion h-svh w-svw p-xl  "
  >
    <div
      class="absolute inset-0 bg-gradient-to-r from-transparent via-white/10 to-transparent"
    >
    </div>
    <div
      class="absolute inset-0 bg-radial-gradient-1 opacity-30"
    >
    </div>
  </Background> -->
  <h6
    class="font-light opacity-90 tracking-widest text-center"
  >
    ANDRES TRUJILLO
  </h6>
  <p
    class="flex font-semibold fluid:text-7xl font-heading tracking-tighter flex-wrap gap-[0.3ch] xs:max-w-[20ch] md:min-w-[40ch] m-0 text-center resize overflow-hidden items-center justify-center py-4 px-0"
  >
    <span class="swapper-first">Creative </span>
    <!-- <Swapper> -->
    <Swapper client:load>
      <span id="swapper" class="">Frontend Dev</span>
    </Swapper>

    <span class="swapper-last">Empowering</span>

    <span class="block w-full font-white">
      Change Through Design</span
    >
    <span class="block w-full"> and Engineering</span>
  </p>
  <div class="absolute inset-0 h-full w-full -z-10">
    <!-- <Scene client:load /> -->
    <SphereCanvas client:load />
  </div>
</section>
<!-- <section class="mt-20">
  <Test />
</section> -->

<script>
  const WORDS = [
    "Frontend Dev",
    "Architect",
    "Prototyper",
    "Animator",
    "Fullstack Dev",
    "Visual Designer",
    "Web Engineer",
    "Illustrator",
    // "AI Engineer",
  ];
  let count = 0;
  const SWAPPER = document.querySelector("#swapper");

  const SWAP = () => {
    if (count < 10) {
      if (!document.startViewTransition) {
        SWAPPER.innerText =
          WORDS[(count += 1) % WORDS.length];
      } else {
        document.startViewTransition(() => {
          SWAPPER.innerText =
            WORDS[(count += 1) % WORDS.length];
        });
      }
    } else {
      clearInterval(interval);
    }
  };

  const interval = setInterval(SWAP, 2000);
</script>

---
import { SphereCanvas } from "./hero/canvas/sphere";
// import { Swapper } from "@/components/ui/zzzzswapper";
import { Section } from "@/components/ui/section";
import { Meteors } from "@/components/ui/meteors";
// import { fade, slide } from "astro:transitions";
---

<Section
  client:visible
  backgroundColor="hero"
  idName="home"
  padding="none"
  margin="none"
  minHeight="100svh"
  skipRoundCorners
  parallax
  className="  relative bg-bgColorHero  h-full grid place-content-center gap-xl justify-center w-full min-w-7xl [perspective:1000px] overflow-hidden "
>
  <div class="bg-hero absolute -z-20"></div>
  <div
    class="absolute inset-0 h-full w-full -z-10 hidden sm:flex"
  >
    <!-- <Scene client:load /> -->
    <SphereCanvas client:visible />
  </div>
  <!-- <Meteors number={20} client:visible /> -->
  <h6
    class="font-light opacity-90 tracking-widest text-center fluid:text-sm md:fluid:text-xl"
  >
    ANDRES TRUJILLO
  </h6>
  <p
    class="w-full mx-auto flex font-semibold fluid:text-6xl md:fluid:text-7xl font-heading tracking-tighter flex-wrap gap-[0.3ch] xs:max-w-[20ch] md:min-w-[40ch] m-0 text-center resize overflow-hidden items-center justify-center py-4 px-0 max-w-[80%] md:max-w-max"
  >
    <span transition:name="swapper-first">Creative </span>
    <span
      id="swapper"
      transition:name="swapper"
      class="text-accent fluid:text-6xl block md:inline md:fluid:text-7xl font-black rounded-md py-0 px-xs
    mix-blend-lighten animate-slideIn"
      >Frontend Dev</span
    >

    <span
      transition:name="swapper-last"
      class="block md:inline">Empowering</span
    >

    <span class="w-full font-white block md:inline">
      Change Through Design</span
    >
    <span class="block w-full"> and Engineering</span>
  </p>
</Section>

<script>
  const WORDS = [
    "Front End Dev",
    "Architect",
    "Prototyper",
    "Animator",
    "Full Stack Dev",
    "Visual Designer",
    "Web Engineer",
    "Illustrator",
    // "AI Engineer",
  ];
  let count = 0;
  const SWAPPER = document.querySelector(
    "#swapper"
  ) as HTMLElement;

  let interval: NodeJS.Timeout;

  const SWAP = () => {
    if (!document.startViewTransition) {
      SWAPPER.innerText =
        WORDS[(count += 1) % WORDS.length];
    } else {
      document.startViewTransition(() => {
        SWAPPER.innerText =
          WORDS[(count += 1) % WORDS.length];
      });
    }
  };

  const startSwapper = () => {
    interval = setInterval(SWAP, 2000);
  };

  const stopSwapper = () => {
    clearInterval(interval);
  };

  const observeSwapper = () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        entry.isIntersecting
          ? startSwapper()
          : stopSwapper();
      });
    });

    observer.observe(SWAPPER);
  };

  observeSwapper();
</script>

<style>
  ::view-transition-new(swapper),
  ::view-transition-old(swapper) {
    height: 100%;
    object-fit: none;
    object-position: top left;
  }

  ::view-transition-old(swapper) {
    animation-name: slide-out;
    animation-duration: 0.75s;
    animation-timing-function: var(--linearAnimation);
  }

  ::view-transition-new(swapper) {
    animation-name: slide-in;
    animation-duration: 0.75s;
    animation-timing-function: var(--linearAnimation);
  }

  ::view-transition-group(swapper-last),
  ::view-transition-group(swapper-first) {
    animation-duration: 0.75s;
    animation-timing-function: var(--linearAnimation);
  }

  @keyframes slide-out {
    100% {
      opacity: 0;
      translate: 0 100%;
    }
  }

  @keyframes slide-in {
    0% {
      opacity: 0;
      translate: 0 -100%;
    }
  }
</style>

---
import type { ToolKey, Tool } from "@/types";
import { Tools } from "@/config/validations/project-schema";
import InfiniteLoopSlider from "@/components/ui/InfiniteLoopSlider.astro";

const ROWS: number = 2;
const TOOLS_PER_ROW: number = 5;

interface Props {
  toolKeys: ToolKey[];
}

const { toolKeys } = Astro.props as Props;

const tools: Tool[] = toolKeys.map((toolKey) => {
  return Tools.find((tool) => tool.key === toolKey);
});
const random = (min: number, max: number) =>
  Math.floor(Math.random() * (max - min)) + min;
---

<div
  class="relative h-full flex shrink-0 flex-col items-center justify-center overflow-hidden"
>
  {
    [...new Array(ROWS)].map((row, i) => {
      return (
        <InfiniteLoopSlider
          duration={random(43000, 45000)}
          reverse={i % 2 == 0}
        >
          {tools.slice(0, TOOLS_PER_ROW).map((tool) => (
            <img
              class="p-m rounded-xl size-20 bg-neutral-800  ring-accent/30 ring-2  m-xs"
              src={tool.icon.src}
            />
          ))}
        </InfiniteLoopSlider>
      );
    })
  }

  <!-- <div class="fade"></div> -->
</div>

<style>
  .fade {
    pointer-events: none;
    background: linear-gradient(
      90deg,
      white,
      transparent 10%,
      transparent 90%,
      white
    );
    position: absolute;
    inset: 0;
  }
</style>

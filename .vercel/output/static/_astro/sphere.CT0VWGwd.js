import{j as vt}from"./jsx-runtime.B6N9iRLn.js";import{r as he,g as D0,R as od}from"./index.DNi1g-pO.js";import{c as ES}from"./client.Dv8xD9ZA.js";import{h as wS,j as TS,k as Ag,l as AS,n as bS,i as Ea,r as CS,V as RS,o as PS,q as IS,s as LS,t as US}from"./VisualElement.xl9K9bcv.js";import"./index.DDEQXXIH.js";/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Cs="163",DS={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},NS={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},N0=0,ld=1,F0=2,FS=3,O0=0,Su=1,Ro=2,Ri=3,ji=0,fn=1,kn=2,pn=0,ys=1,cd=2,ud=3,hd=4,B0=5,Fr=100,z0=101,k0=102,H0=103,V0=104,G0=200,W0=201,X0=202,q0=203,vu=204,_u=205,Y0=206,Z0=207,j0=208,J0=209,K0=210,Q0=211,$0=212,e_=213,t_=214,n_=0,i_=1,r_=2,Do=3,s_=4,a_=5,o_=6,l_=7,il=0,c_=1,u_=2,Li=0,h_=1,f_=2,d_=3,ep=4,p_=5,m_=6,g_=7,fd="attached",v_="detached",Mu=300,dr=301,Br=302,No=303,Fo=304,Ba=306,Oo=1e3,Mi=1001,Bo=1002,en=1003,tp=1004,OS=1004,wa=1005,BS=1005,qt=1006,Po=1007,zS=1007,Xi=1008,kS=1008,un=1009,__=1010,x_=1011,np=1012,ip=1013,zr=1014,hi=1015,Ia=1016,rp=1017,sp=1018,Rs=1020,y_=35902,S_=1021,M_=1022,jn=1023,E_=1024,w_=1025,Ss=1026,Ts=1027,ap=1028,op=1029,T_=1030,lp=1031,cp=1033,cu=33776,uu=33777,hu=33778,fu=33779,dd=35840,pd=35841,md=35842,gd=35843,up=36196,vd=37492,_d=37496,xd=37808,yd=37809,Sd=37810,Md=37811,Ed=37812,wd=37813,Td=37814,Ad=37815,bd=37816,Cd=37817,Rd=37818,Pd=37819,Id=37820,Ld=37821,du=36492,Ud=36494,Dd=36495,A_=36283,Nd=36284,Fd=36285,Od=36286,b_=2200,C_=2201,R_=2202,zo=2300,ko=2301,pu=2302,ms=2400,gs=2401,Ho=2402,Eu=2500,hp=2501,HS=0,VS=1,GS=2,Ji=3200,P_=3201,Hr=0,I_=1,Ii="",yt="srgb",Ui="srgb-linear",wu="display-p3",rl="display-p3-linear",Vo="linear",Ht="srgb",Go="rec709",Wo="p3",WS=0,fs=7680,XS=7681,qS=7682,YS=7683,ZS=34055,jS=34056,JS=5386,KS=512,QS=513,$S=514,eM=515,tM=516,nM=517,iM=518,Bd=519,L_=512,U_=513,D_=514,fp=515,N_=516,F_=517,O_=518,B_=519,Xo=35044,rM=35048,sM=35040,aM=35045,oM=35049,lM=35041,cM=35046,uM=35050,hM=35042,fM="100",zd="300 es",qi=2e3,qo=2001;class Ei{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const r=n.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}}const Pn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let bg=1234567;const Ms=Math.PI/180,La=180/Math.PI;function fi(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Pn[i&255]+Pn[i>>8&255]+Pn[i>>16&255]+Pn[i>>24&255]+"-"+Pn[e&255]+Pn[e>>8&255]+"-"+Pn[e>>16&15|64]+Pn[e>>24&255]+"-"+Pn[t&63|128]+Pn[t>>8&255]+"-"+Pn[t>>16&255]+Pn[t>>24&255]+Pn[n&255]+Pn[n>>8&255]+Pn[n>>16&255]+Pn[n>>24&255]).toLowerCase()}function Qt(i,e,t){return Math.max(e,Math.min(t,i))}function dp(i,e){return(i%e+e)%e}function dM(i,e,t,n,r){return n+(i-e)*(r-n)/(t-e)}function pM(i,e,t){return i!==e?(t-i)/(e-i):0}function Io(i,e,t){return(1-t)*i+t*e}function mM(i,e,t,n){return Io(i,e,1-Math.exp(-t*n))}function gM(i,e=1){return e-Math.abs(dp(i,e*2)-e)}function vM(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*(3-2*i))}function _M(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*i*(i*(i*6-15)+10))}function xM(i,e){return i+Math.floor(Math.random()*(e-i+1))}function yM(i,e){return i+Math.random()*(e-i)}function SM(i){return i*(.5-Math.random())}function MM(i){i!==void 0&&(bg=i);let e=bg+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function EM(i){return i*Ms}function wM(i){return i*La}function TM(i){return(i&i-1)===0&&i!==0}function AM(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function bM(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function CM(i,e,t,n,r){const s=Math.cos,o=Math.sin,c=s(t/2),u=o(t/2),h=s((e+n)/2),f=o((e+n)/2),p=s((e-n)/2),m=o((e-n)/2),g=s((n-e)/2),x=o((n-e)/2);switch(r){case"XYX":i.set(c*f,u*p,u*m,c*h);break;case"YZY":i.set(u*m,c*f,u*p,c*h);break;case"ZXZ":i.set(u*p,u*m,c*f,c*h);break;case"XZX":i.set(c*f,u*x,u*g,c*h);break;case"YXY":i.set(u*g,c*f,u*x,c*h);break;case"ZYZ":i.set(u*x,u*g,c*f,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function Hn(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return i/4294967295;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int32Array:return Math.max(i/2147483647,-1);case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function ct(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return Math.round(i*4294967295);case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int32Array:return Math.round(i*2147483647);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}const ya={DEG2RAD:Ms,RAD2DEG:La,generateUUID:fi,clamp:Qt,euclideanModulo:dp,mapLinear:dM,inverseLerp:pM,lerp:Io,damp:mM,pingpong:gM,smoothstep:vM,smootherstep:_M,randInt:xM,randFloat:yM,randFloatSpread:SM,seededRandom:MM,degToRad:EM,radToDeg:wM,isPowerOfTwo:TM,ceilPowerOfTwo:AM,floorPowerOfTwo:bM,setQuaternionFromProperEuler:CM,normalize:ct,denormalize:Hn};class oe{constructor(e=0,t=0){oe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Qt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*r+e.x,this.y=s*r+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class lt{constructor(e,t,n,r,s,o,c,u,h){lt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,r,s,o,c,u,h)}set(e,t,n,r,s,o,c,u,h){const f=this.elements;return f[0]=e,f[1]=r,f[2]=c,f[3]=t,f[4]=s,f[5]=u,f[6]=n,f[7]=o,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],c=n[3],u=n[6],h=n[1],f=n[4],p=n[7],m=n[2],g=n[5],x=n[8],M=r[0],y=r[3],_=r[6],w=r[1],E=r[4],A=r[7],N=r[2],P=r[5],I=r[8];return s[0]=o*M+c*w+u*N,s[3]=o*y+c*E+u*P,s[6]=o*_+c*A+u*I,s[1]=h*M+f*w+p*N,s[4]=h*y+f*E+p*P,s[7]=h*_+f*A+p*I,s[2]=m*M+g*w+x*N,s[5]=m*y+g*E+x*P,s[8]=m*_+g*A+x*I,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],c=e[5],u=e[6],h=e[7],f=e[8];return t*o*f-t*c*h-n*s*f+n*c*u+r*s*h-r*o*u}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=f*o-c*h,m=c*u-f*s,g=h*s-o*u,x=t*p+n*m+r*g;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/x;return e[0]=p*M,e[1]=(r*h-f*n)*M,e[2]=(c*n-r*o)*M,e[3]=m*M,e[4]=(f*t-r*u)*M,e[5]=(r*s-c*t)*M,e[6]=g*M,e[7]=(n*u-h*t)*M,e[8]=(o*t-n*s)*M,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,s,o,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*o+h*c)+o+e,-r*h,r*u,-r*(-h*o+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(sf.makeScale(e,t)),this}rotate(e){return this.premultiply(sf.makeRotation(-e)),this}translate(e,t){return this.premultiply(sf.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const sf=new lt;function z_(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}const RM={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Ta(i,e){return new RM[i](e)}function Yo(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function k_(){const i=Yo("canvas");return i.style.display="block",i}const Cg={};function H_(i){i in Cg||(Cg[i]=!0,console.warn(i))}const Rg=new lt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Pg=new lt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),pc={[Ui]:{transfer:Vo,primaries:Go,toReference:i=>i,fromReference:i=>i},[yt]:{transfer:Ht,primaries:Go,toReference:i=>i.convertSRGBToLinear(),fromReference:i=>i.convertLinearToSRGB()},[rl]:{transfer:Vo,primaries:Wo,toReference:i=>i.applyMatrix3(Pg),fromReference:i=>i.applyMatrix3(Rg)},[wu]:{transfer:Ht,primaries:Wo,toReference:i=>i.convertSRGBToLinear().applyMatrix3(Pg),fromReference:i=>i.applyMatrix3(Rg).convertLinearToSRGB()}},PM=new Set([Ui,rl]),Ut={enabled:!0,_workingColorSpace:Ui,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(i){if(!PM.has(i))throw new Error(`Unsupported working color space, "${i}".`);this._workingColorSpace=i},convert:function(i,e,t){if(this.enabled===!1||e===t||!e||!t)return i;const n=pc[e].toReference,r=pc[t].fromReference;return r(n(i))},fromWorkingColorSpace:function(i,e){return this.convert(i,this._workingColorSpace,e)},toWorkingColorSpace:function(i,e){return this.convert(i,e,this._workingColorSpace)},getPrimaries:function(i){return pc[i].primaries},getTransfer:function(i){return i===Ii?Vo:pc[i].transfer}};function Pa(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function af(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}let js;class V_{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{js===void 0&&(js=Yo("canvas")),js.width=e.width,js.height=e.height;const n=js.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=js}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Yo("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),s=r.data;for(let o=0;o<s.length;o++)s[o]=Pa(s[o]/255)*255;return n.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Pa(t[n]/255)*255):t[n]=Pa(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let IM=0;class vs{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:IM++}),this.uuid=fi(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let o=0,c=r.length;o<c;o++)r[o].isDataTexture?s.push(of(r[o].image)):s.push(of(r[o]))}else s=of(r);n.url=s}return t||(e.images[this.uuid]=n),n}}function of(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?V_.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let LM=0;class Bt extends Ei{constructor(e=Bt.DEFAULT_IMAGE,t=Bt.DEFAULT_MAPPING,n=Mi,r=Mi,s=qt,o=Xi,c=jn,u=un,h=Bt.DEFAULT_ANISOTROPY,f=Ii){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:LM++}),this.uuid=fi(),this.name="",this.source=new vs(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new oe(0,0),this.repeat=new oe(1,1),this.center=new oe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new lt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=f,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Mu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Oo:e.x=e.x-Math.floor(e.x);break;case Mi:e.x=e.x<0?0:1;break;case Bo:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Oo:e.y=e.y-Math.floor(e.y);break;case Mi:e.y=e.y<0?0:1;break;case Bo:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Bt.DEFAULT_IMAGE=null;Bt.DEFAULT_MAPPING=Mu;Bt.DEFAULT_ANISOTROPY=1;class It{constructor(e=0,t=0,n=0,r=1){It.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*r+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,s;const u=e.elements,h=u[0],f=u[4],p=u[8],m=u[1],g=u[5],x=u[9],M=u[2],y=u[6],_=u[10];if(Math.abs(f-m)<.01&&Math.abs(p-M)<.01&&Math.abs(x-y)<.01){if(Math.abs(f+m)<.1&&Math.abs(p+M)<.1&&Math.abs(x+y)<.1&&Math.abs(h+g+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const E=(h+1)/2,A=(g+1)/2,N=(_+1)/2,P=(f+m)/4,I=(p+M)/4,B=(x+y)/4;return E>A&&E>N?E<.01?(n=0,r=.707106781,s=.707106781):(n=Math.sqrt(E),r=P/n,s=I/n):A>N?A<.01?(n=.707106781,r=0,s=.707106781):(r=Math.sqrt(A),n=P/r,s=B/r):N<.01?(n=.707106781,r=.707106781,s=0):(s=Math.sqrt(N),n=I/s,r=B/s),this.set(n,r,s,t),this}let w=Math.sqrt((y-x)*(y-x)+(p-M)*(p-M)+(m-f)*(m-f));return Math.abs(w)<.001&&(w=1),this.x=(y-x)/w,this.y=(p-M)/w,this.z=(m-f)/w,this.w=Math.acos((h+g+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class G_ extends Ei{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new It(0,0,e,t),this.scissorTest=!1,this.viewport=new It(0,0,e,t);const r={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:qt,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0,count:1},n);const s=new Bt(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const o=n.count;for(let c=0;c<o;c++)this.textures[c]=s.clone(),this.textures[c].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let r=0,s=this.textures.length;r<s;r++)this.textures[r].image.width=e,this.textures[r].image.height=t,this.textures[r].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,r=e.textures.length;n<r;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new vs(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class tn extends G_{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Tu extends Bt{constructor(e=null,t=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=en,this.minFilter=en,this.wrapR=Mi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class UM extends tn{constructor(e=1,t=1,n=1,r={}){super(e,t,r),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Tu(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class pp extends Bt{constructor(e=null,t=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=en,this.minFilter=en,this.wrapR=Mi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class DM extends tn{constructor(e=1,t=1,n=1,r={}){super(e,t,r),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new pp(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Jn{constructor(e=0,t=0,n=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=r}static slerpFlat(e,t,n,r,s,o,c){let u=n[r+0],h=n[r+1],f=n[r+2],p=n[r+3];const m=s[o+0],g=s[o+1],x=s[o+2],M=s[o+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=g,e[t+2]=x,e[t+3]=M;return}if(p!==M||u!==m||h!==g||f!==x){let y=1-c;const _=u*m+h*g+f*x+p*M,w=_>=0?1:-1,E=1-_*_;if(E>Number.EPSILON){const N=Math.sqrt(E),P=Math.atan2(N,_*w);y=Math.sin(y*P)/N,c=Math.sin(c*P)/N}const A=c*w;if(u=u*y+m*A,h=h*y+g*A,f=f*y+x*A,p=p*y+M*A,y===1-c){const N=1/Math.sqrt(u*u+h*h+f*f+p*p);u*=N,h*=N,f*=N,p*=N}}e[t]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,r,s,o){const c=n[r],u=n[r+1],h=n[r+2],f=n[r+3],p=s[o],m=s[o+1],g=s[o+2],x=s[o+3];return e[t]=c*x+f*p+u*g-h*m,e[t+1]=u*x+f*m+h*p-c*g,e[t+2]=h*x+f*g+c*m-u*p,e[t+3]=f*x-c*p-u*m-h*g,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,r=e._y,s=e._z,o=e._order,c=Math.cos,u=Math.sin,h=c(n/2),f=c(r/2),p=c(s/2),m=u(n/2),g=u(r/2),x=u(s/2);switch(o){case"XYZ":this._x=m*f*p+h*g*x,this._y=h*g*p-m*f*x,this._z=h*f*x+m*g*p,this._w=h*f*p-m*g*x;break;case"YXZ":this._x=m*f*p+h*g*x,this._y=h*g*p-m*f*x,this._z=h*f*x-m*g*p,this._w=h*f*p+m*g*x;break;case"ZXY":this._x=m*f*p-h*g*x,this._y=h*g*p+m*f*x,this._z=h*f*x+m*g*p,this._w=h*f*p-m*g*x;break;case"ZYX":this._x=m*f*p-h*g*x,this._y=h*g*p+m*f*x,this._z=h*f*x-m*g*p,this._w=h*f*p+m*g*x;break;case"YZX":this._x=m*f*p+h*g*x,this._y=h*g*p+m*f*x,this._z=h*f*x-m*g*p,this._w=h*f*p-m*g*x;break;case"XZY":this._x=m*f*p-h*g*x,this._y=h*g*p-m*f*x,this._z=h*f*x+m*g*p,this._w=h*f*p+m*g*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],s=t[8],o=t[1],c=t[5],u=t[9],h=t[2],f=t[6],p=t[10],m=n+c+p;if(m>0){const g=.5/Math.sqrt(m+1);this._w=.25/g,this._x=(f-u)*g,this._y=(s-h)*g,this._z=(o-r)*g}else if(n>c&&n>p){const g=2*Math.sqrt(1+n-c-p);this._w=(f-u)/g,this._x=.25*g,this._y=(r+o)/g,this._z=(s+h)/g}else if(c>p){const g=2*Math.sqrt(1+c-n-p);this._w=(s-h)/g,this._x=(r+o)/g,this._y=.25*g,this._z=(u+f)/g}else{const g=2*Math.sqrt(1+p-n-c);this._w=(o-r)/g,this._x=(s+h)/g,this._y=(u+f)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Qt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,s=e._z,o=e._w,c=t._x,u=t._y,h=t._z,f=t._w;return this._x=n*f+o*c+r*h-s*u,this._y=r*f+o*u+s*c-n*h,this._z=s*f+o*h+n*u-r*c,this._w=o*f-n*c-r*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,r=this._y,s=this._z,o=this._w;let c=o*e._w+n*e._x+r*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=o,this._x=n,this._y=r,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const g=1-t;return this._w=g*o+t*this._w,this._x=g*n+t*this._x,this._y=g*r+t*this._y,this._z=g*s+t*this._z,this.normalize(),this}const h=Math.sqrt(u),f=Math.atan2(h,c),p=Math.sin((1-t)*f)/h,m=Math.sin(t*f)/h;return this._w=o*p+this._w*m,this._x=n*p+this._x*m,this._y=r*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),r=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(r*Math.sin(e),r*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class D{constructor(e=0,t=0,n=0){D.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Ig.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Ig.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*r,this.y=s[1]*t+s[4]*n+s[7]*r,this.z=s[2]*t+s[5]*n+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,s=e.x,o=e.y,c=e.z,u=e.w,h=2*(o*r-c*n),f=2*(c*t-s*r),p=2*(s*n-o*t);return this.x=t+u*h+o*p-c*f,this.y=n+u*f+c*h-s*p,this.z=r+u*p+s*f-o*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r,this.y=s[1]*t+s[5]*n+s[9]*r,this.z=s[2]*t+s[6]*n+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,s=e.z,o=t.x,c=t.y,u=t.z;return this.x=r*u-s*c,this.y=s*o-n*u,this.z=n*c-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return lf.copy(this).projectOnVector(e),this.sub(lf)}reflect(e){return this.sub(lf.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Qt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const lf=new D,Ig=new Jn;class Vn{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Ai.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Ai.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ai.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let o=0,c=s.count;o<c;o++)e.isMesh===!0?e.getVertexPosition(o,Ai):Ai.fromBufferAttribute(s,o),Ai.applyMatrix4(e.matrixWorld),this.expandByPoint(Ai);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),mc.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),mc.copy(n.boundingBox)),mc.applyMatrix4(e.matrixWorld),this.union(mc)}const r=e.children;for(let s=0,o=r.length;s<o;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ai),Ai.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ho),gc.subVectors(this.max,ho),Js.subVectors(e.a,ho),Ks.subVectors(e.b,ho),Qs.subVectors(e.c,ho),Tr.subVectors(Ks,Js),Ar.subVectors(Qs,Ks),es.subVectors(Js,Qs);let t=[0,-Tr.z,Tr.y,0,-Ar.z,Ar.y,0,-es.z,es.y,Tr.z,0,-Tr.x,Ar.z,0,-Ar.x,es.z,0,-es.x,-Tr.y,Tr.x,0,-Ar.y,Ar.x,0,-es.y,es.x,0];return!cf(t,Js,Ks,Qs,gc)||(t=[1,0,0,0,1,0,0,0,1],!cf(t,Js,Ks,Qs,gc))?!1:(vc.crossVectors(Tr,Ar),t=[vc.x,vc.y,vc.z],cf(t,Js,Ks,Qs,gc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ai).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Ai).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(sr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),sr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),sr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),sr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),sr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),sr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),sr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),sr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(sr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const sr=[new D,new D,new D,new D,new D,new D,new D,new D],Ai=new D,mc=new Vn,Js=new D,Ks=new D,Qs=new D,Tr=new D,Ar=new D,es=new D,ho=new D,gc=new D,vc=new D,ts=new D;function cf(i,e,t,n,r){for(let s=0,o=i.length-3;s<=o;s+=3){ts.fromArray(i,s);const c=r.x*Math.abs(ts.x)+r.y*Math.abs(ts.y)+r.z*Math.abs(ts.z),u=e.dot(ts),h=t.dot(ts),f=n.dot(ts);if(Math.max(-Math.max(u,h,f),Math.min(u,h,f))>c)return!1}return!0}const NM=new Vn,fo=new D,uf=new D;class Un{constructor(e=new D,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):NM.setFromPoints(e).getCenter(n);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;fo.subVectors(e,this.center);const t=fo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),r=(n-this.radius)*.5;this.center.addScaledVector(fo,r/n),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(uf.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(fo.copy(e.center).add(uf)),this.expandByPoint(fo.copy(e.center).sub(uf))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const ar=new D,hf=new D,_c=new D,br=new D,ff=new D,xc=new D,df=new D;class za{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ar)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=ar.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ar.copy(this.origin).addScaledVector(this.direction,t),ar.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){hf.copy(e).add(t).multiplyScalar(.5),_c.copy(t).sub(e).normalize(),br.copy(this.origin).sub(hf);const s=e.distanceTo(t)*.5,o=-this.direction.dot(_c),c=br.dot(this.direction),u=-br.dot(_c),h=br.lengthSq(),f=Math.abs(1-o*o);let p,m,g,x;if(f>0)if(p=o*u-c,m=o*c-u,x=s*f,p>=0)if(m>=-x)if(m<=x){const M=1/f;p*=M,m*=M,g=p*(p+o*m+2*c)+m*(o*p+m+2*u)+h}else m=s,p=Math.max(0,-(o*m+c)),g=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(o*m+c)),g=-p*p+m*(m+2*u)+h;else m<=-x?(p=Math.max(0,-(-o*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),g=-p*p+m*(m+2*u)+h):m<=x?(p=0,m=Math.min(Math.max(-s,-u),s),g=m*(m+2*u)+h):(p=Math.max(0,-(o*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),g=-p*p+m*(m+2*u)+h);else m=o>0?-s:s,p=Math.max(0,-(o*m+c)),g=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),r&&r.copy(hf).addScaledVector(_c,m),g}intersectSphere(e,t){ar.subVectors(e.center,this.origin);const n=ar.dot(this.direction),r=ar.dot(ar)-n*n,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),c=n-o,u=n+o;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,s,o,c,u;const h=1/this.direction.x,f=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,r=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,r=(e.min.x-m.x)*h),f>=0?(s=(e.min.y-m.y)*f,o=(e.max.y-m.y)*f):(s=(e.max.y-m.y)*f,o=(e.min.y-m.y)*f),n>o||s>r||((s>n||isNaN(n))&&(n=s),(o<r||isNaN(r))&&(r=o),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>r)||((c>n||n!==n)&&(n=c),(u<r||r!==r)&&(r=u),r<0)?null:this.at(n>=0?n:r,t)}intersectsBox(e){return this.intersectBox(e,ar)!==null}intersectTriangle(e,t,n,r,s){ff.subVectors(t,e),xc.subVectors(n,e),df.crossVectors(ff,xc);let o=this.direction.dot(df),c;if(o>0){if(r)return null;c=1}else if(o<0)c=-1,o=-o;else return null;br.subVectors(this.origin,e);const u=c*this.direction.dot(xc.crossVectors(br,xc));if(u<0)return null;const h=c*this.direction.dot(ff.cross(br));if(h<0||u+h>o)return null;const f=-c*br.dot(df);return f<0?null:this.at(f/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class $e{constructor(e,t,n,r,s,o,c,u,h,f,p,m,g,x,M,y){$e.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,r,s,o,c,u,h,f,p,m,g,x,M,y)}set(e,t,n,r,s,o,c,u,h,f,p,m,g,x,M,y){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=r,_[1]=s,_[5]=o,_[9]=c,_[13]=u,_[2]=h,_[6]=f,_[10]=p,_[14]=m,_[3]=g,_[7]=x,_[11]=M,_[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new $e().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/$s.setFromMatrixColumn(e,0).length(),s=1/$s.setFromMatrixColumn(e,1).length(),o=1/$s.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,r=e.y,s=e.z,o=Math.cos(n),c=Math.sin(n),u=Math.cos(r),h=Math.sin(r),f=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=o*f,g=o*p,x=c*f,M=c*p;t[0]=u*f,t[4]=-u*p,t[8]=h,t[1]=g+x*h,t[5]=m-M*h,t[9]=-c*u,t[2]=M-m*h,t[6]=x+g*h,t[10]=o*u}else if(e.order==="YXZ"){const m=u*f,g=u*p,x=h*f,M=h*p;t[0]=m+M*c,t[4]=x*c-g,t[8]=o*h,t[1]=o*p,t[5]=o*f,t[9]=-c,t[2]=g*c-x,t[6]=M+m*c,t[10]=o*u}else if(e.order==="ZXY"){const m=u*f,g=u*p,x=h*f,M=h*p;t[0]=m-M*c,t[4]=-o*p,t[8]=x+g*c,t[1]=g+x*c,t[5]=o*f,t[9]=M-m*c,t[2]=-o*h,t[6]=c,t[10]=o*u}else if(e.order==="ZYX"){const m=o*f,g=o*p,x=c*f,M=c*p;t[0]=u*f,t[4]=x*h-g,t[8]=m*h+M,t[1]=u*p,t[5]=M*h+m,t[9]=g*h-x,t[2]=-h,t[6]=c*u,t[10]=o*u}else if(e.order==="YZX"){const m=o*u,g=o*h,x=c*u,M=c*h;t[0]=u*f,t[4]=M-m*p,t[8]=x*p+g,t[1]=p,t[5]=o*f,t[9]=-c*f,t[2]=-h*f,t[6]=g*p+x,t[10]=m-M*p}else if(e.order==="XZY"){const m=o*u,g=o*h,x=c*u,M=c*h;t[0]=u*f,t[4]=-p,t[8]=h*f,t[1]=m*p+M,t[5]=o*f,t[9]=g*p-x,t[2]=x*p-g,t[6]=c*f,t[10]=M*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(FM,e,OM)}lookAt(e,t,n){const r=this.elements;return li.subVectors(e,t),li.lengthSq()===0&&(li.z=1),li.normalize(),Cr.crossVectors(n,li),Cr.lengthSq()===0&&(Math.abs(n.z)===1?li.x+=1e-4:li.z+=1e-4,li.normalize(),Cr.crossVectors(n,li)),Cr.normalize(),yc.crossVectors(li,Cr),r[0]=Cr.x,r[4]=yc.x,r[8]=li.x,r[1]=Cr.y,r[5]=yc.y,r[9]=li.y,r[2]=Cr.z,r[6]=yc.z,r[10]=li.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],c=n[4],u=n[8],h=n[12],f=n[1],p=n[5],m=n[9],g=n[13],x=n[2],M=n[6],y=n[10],_=n[14],w=n[3],E=n[7],A=n[11],N=n[15],P=r[0],I=r[4],B=r[8],C=r[12],b=r[1],F=r[5],W=r[9],k=r[13],j=r[2],K=r[6],le=r[10],ge=r[14],H=r[3],Q=r[7],Z=r[11],fe=r[15];return s[0]=o*P+c*b+u*j+h*H,s[4]=o*I+c*F+u*K+h*Q,s[8]=o*B+c*W+u*le+h*Z,s[12]=o*C+c*k+u*ge+h*fe,s[1]=f*P+p*b+m*j+g*H,s[5]=f*I+p*F+m*K+g*Q,s[9]=f*B+p*W+m*le+g*Z,s[13]=f*C+p*k+m*ge+g*fe,s[2]=x*P+M*b+y*j+_*H,s[6]=x*I+M*F+y*K+_*Q,s[10]=x*B+M*W+y*le+_*Z,s[14]=x*C+M*k+y*ge+_*fe,s[3]=w*P+E*b+A*j+N*H,s[7]=w*I+E*F+A*K+N*Q,s[11]=w*B+E*W+A*le+N*Z,s[15]=w*C+E*k+A*ge+N*fe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],s=e[12],o=e[1],c=e[5],u=e[9],h=e[13],f=e[2],p=e[6],m=e[10],g=e[14],x=e[3],M=e[7],y=e[11],_=e[15];return x*(+s*u*p-r*h*p-s*c*m+n*h*m+r*c*g-n*u*g)+M*(+t*u*g-t*h*m+s*o*m-r*o*g+r*h*f-s*u*f)+y*(+t*h*p-t*c*g-s*o*p+n*o*g+s*c*f-n*h*f)+_*(-r*c*f-t*u*p+t*c*m+r*o*p-n*o*m+n*u*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=e[9],m=e[10],g=e[11],x=e[12],M=e[13],y=e[14],_=e[15],w=p*y*h-M*m*h+M*u*g-c*y*g-p*u*_+c*m*_,E=x*m*h-f*y*h-x*u*g+o*y*g+f*u*_-o*m*_,A=f*M*h-x*p*h+x*c*g-o*M*g-f*c*_+o*p*_,N=x*p*u-f*M*u-x*c*m+o*M*m+f*c*y-o*p*y,P=t*w+n*E+r*A+s*N;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const I=1/P;return e[0]=w*I,e[1]=(M*m*s-p*y*s-M*r*g+n*y*g+p*r*_-n*m*_)*I,e[2]=(c*y*s-M*u*s+M*r*h-n*y*h-c*r*_+n*u*_)*I,e[3]=(p*u*s-c*m*s-p*r*h+n*m*h+c*r*g-n*u*g)*I,e[4]=E*I,e[5]=(f*y*s-x*m*s+x*r*g-t*y*g-f*r*_+t*m*_)*I,e[6]=(x*u*s-o*y*s-x*r*h+t*y*h+o*r*_-t*u*_)*I,e[7]=(o*m*s-f*u*s+f*r*h-t*m*h-o*r*g+t*u*g)*I,e[8]=A*I,e[9]=(x*p*s-f*M*s-x*n*g+t*M*g+f*n*_-t*p*_)*I,e[10]=(o*M*s-x*c*s+x*n*h-t*M*h-o*n*_+t*c*_)*I,e[11]=(f*c*s-o*p*s-f*n*h+t*p*h+o*n*g-t*c*g)*I,e[12]=N*I,e[13]=(f*M*r-x*p*r+x*n*m-t*M*m-f*n*y+t*p*y)*I,e[14]=(x*c*r-o*M*r-x*n*u+t*M*u+o*n*y-t*c*y)*I,e[15]=(o*p*r-f*c*r+f*n*u-t*p*u-o*n*m+t*c*m)*I,this}scale(e){const t=this.elements,n=e.x,r=e.y,s=e.z;return t[0]*=n,t[4]*=r,t[8]*=s,t[1]*=n,t[5]*=r,t[9]*=s,t[2]*=n,t[6]*=r,t[10]*=s,t[3]*=n,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),s=1-n,o=e.x,c=e.y,u=e.z,h=s*o,f=s*c;return this.set(h*o+n,h*c-r*u,h*u+r*c,0,h*c+r*u,f*c+n,f*u-r*o,0,h*u-r*c,f*u+r*o,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,s,o){return this.set(1,n,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,s=t._x,o=t._y,c=t._z,u=t._w,h=s+s,f=o+o,p=c+c,m=s*h,g=s*f,x=s*p,M=o*f,y=o*p,_=c*p,w=u*h,E=u*f,A=u*p,N=n.x,P=n.y,I=n.z;return r[0]=(1-(M+_))*N,r[1]=(g+A)*N,r[2]=(x-E)*N,r[3]=0,r[4]=(g-A)*P,r[5]=(1-(m+_))*P,r[6]=(y+w)*P,r[7]=0,r[8]=(x+E)*I,r[9]=(y-w)*I,r[10]=(1-(m+M))*I,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let s=$s.set(r[0],r[1],r[2]).length();const o=$s.set(r[4],r[5],r[6]).length(),c=$s.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],bi.copy(this);const h=1/s,f=1/o,p=1/c;return bi.elements[0]*=h,bi.elements[1]*=h,bi.elements[2]*=h,bi.elements[4]*=f,bi.elements[5]*=f,bi.elements[6]*=f,bi.elements[8]*=p,bi.elements[9]*=p,bi.elements[10]*=p,t.setFromRotationMatrix(bi),n.x=s,n.y=o,n.z=c,this}makePerspective(e,t,n,r,s,o,c=qi){const u=this.elements,h=2*s/(t-e),f=2*s/(n-r),p=(t+e)/(t-e),m=(n+r)/(n-r);let g,x;if(c===qi)g=-(o+s)/(o-s),x=-2*o*s/(o-s);else if(c===qo)g=-o/(o-s),x=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=f,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=g,u[14]=x,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,r,s,o,c=qi){const u=this.elements,h=1/(t-e),f=1/(n-r),p=1/(o-s),m=(t+e)*h,g=(n+r)*f;let x,M;if(c===qi)x=(o+s)*p,M=-2*p;else if(c===qo)x=s*p,M=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*f,u[9]=0,u[13]=-g,u[2]=0,u[6]=0,u[10]=M,u[14]=-x,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const $s=new D,bi=new $e,FM=new D(0,0,0),OM=new D(1,1,1),Cr=new D,yc=new D,li=new D,Lg=new $e,Ug=new Jn;class Kn{constructor(e=0,t=0,n=0,r=Kn.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,s=r[0],o=r[4],c=r[8],u=r[1],h=r[5],f=r[9],p=r[2],m=r[6],g=r[10];switch(t){case"XYZ":this._y=Math.asin(Qt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,g),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Qt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(c,g),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(Qt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,g),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-Qt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,g),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-o,h));break;case"YZX":this._z=Math.asin(Qt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-f,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,g));break;case"XZY":this._z=Math.asin(-Qt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-f,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Lg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Lg,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Ug.setFromEuler(this),this.setFromQuaternion(Ug,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Kn.DEFAULT_ORDER="XYZ";class Es{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let BM=0;const Dg=new D,ea=new Jn,or=new $e,Sc=new D,po=new D,zM=new D,kM=new Jn,Ng=new D(1,0,0),Fg=new D(0,1,0),Og=new D(0,0,1),Bg={type:"added"},HM={type:"removed"},ta={type:"childadded",child:null},pf={type:"childremoved",child:null};class Ct extends Ei{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:BM++}),this.uuid=fi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ct.DEFAULT_UP.clone();const e=new D,t=new Kn,n=new Jn,r=new D(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new $e},normalMatrix:{value:new lt}}),this.matrix=new $e,this.matrixWorld=new $e,this.matrixAutoUpdate=Ct.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Ct.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Es,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ea.setFromAxisAngle(e,t),this.quaternion.multiply(ea),this}rotateOnWorldAxis(e,t){return ea.setFromAxisAngle(e,t),this.quaternion.premultiply(ea),this}rotateX(e){return this.rotateOnAxis(Ng,e)}rotateY(e){return this.rotateOnAxis(Fg,e)}rotateZ(e){return this.rotateOnAxis(Og,e)}translateOnAxis(e,t){return Dg.copy(e).applyQuaternion(this.quaternion),this.position.add(Dg.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Ng,e)}translateY(e){return this.translateOnAxis(Fg,e)}translateZ(e){return this.translateOnAxis(Og,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(or.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Sc.copy(e):Sc.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),po.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?or.lookAt(po,Sc,this.up):or.lookAt(Sc,po,this.up),this.quaternion.setFromRotationMatrix(or),r&&(or.extractRotation(r.matrixWorld),ea.setFromRotationMatrix(or),this.quaternion.premultiply(ea.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(Bg),ta.child=e,this.dispatchEvent(ta),ta.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(HM),pf.child=e,this.dispatchEvent(pf),pf.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),or.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),or.multiply(e.parent.matrixWorld)),e.applyMatrix4(or),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(Bg),ta.child=e,this.dispatchEvent(ta),ta.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(po,e,zM),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(po,kM,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++){const c=r[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.visibility=this._visibility,r.active=this._active,r.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),r.maxGeometryCount=this._maxGeometryCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.geometryCount=this._geometryCount,r.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(r.boundingSphere={center:r.boundingSphere.center.toArray(),radius:r.boundingSphere.radius}),this.boundingBox!==null&&(r.boundingBox={min:r.boundingBox.min.toArray(),max:r.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,f=u.length;h<f;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));r.material=c}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let c=0;c<this.children.length;c++)r.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];r.animations.push(s(e.animations,u))}}if(t){const c=o(e.geometries),u=o(e.materials),h=o(e.textures),f=o(e.images),p=o(e.shapes),m=o(e.skeletons),g=o(e.animations),x=o(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),f.length>0&&(n.images=f),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),g.length>0&&(n.animations=g),x.length>0&&(n.nodes=x)}return n.object=r,n;function o(c){const u=[];for(const h in c){const f=c[h];delete f.metadata,u.push(f)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const r=e.children[n];this.add(r.clone())}return this}}Ct.DEFAULT_UP=new D(0,1,0);Ct.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ct.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Ci=new D,lr=new D,mf=new D,cr=new D,na=new D,ia=new D,zg=new D,gf=new D,vf=new D,_f=new D;class ui{constructor(e=new D,t=new D,n=new D){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),Ci.subVectors(e,t),r.cross(Ci);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,n,r,s){Ci.subVectors(r,t),lr.subVectors(n,t),mf.subVectors(e,t);const o=Ci.dot(Ci),c=Ci.dot(lr),u=Ci.dot(mf),h=lr.dot(lr),f=lr.dot(mf),p=o*h-c*c;if(p===0)return s.set(0,0,0),null;const m=1/p,g=(h*u-c*f)*m,x=(o*f-c*u)*m;return s.set(1-g-x,x,g)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,cr)===null?!1:cr.x>=0&&cr.y>=0&&cr.x+cr.y<=1}static getInterpolation(e,t,n,r,s,o,c,u){return this.getBarycoord(e,t,n,r,cr)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,cr.x),u.addScaledVector(o,cr.y),u.addScaledVector(c,cr.z),u)}static isFrontFacing(e,t,n,r){return Ci.subVectors(n,t),lr.subVectors(e,t),Ci.cross(lr).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Ci.subVectors(this.c,this.b),lr.subVectors(this.a,this.b),Ci.cross(lr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ui.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ui.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,r,s){return ui.getInterpolation(e,this.a,this.b,this.c,t,n,r,s)}containsPoint(e){return ui.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ui.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,s=this.c;let o,c;na.subVectors(r,n),ia.subVectors(s,n),gf.subVectors(e,n);const u=na.dot(gf),h=ia.dot(gf);if(u<=0&&h<=0)return t.copy(n);vf.subVectors(e,r);const f=na.dot(vf),p=ia.dot(vf);if(f>=0&&p<=f)return t.copy(r);const m=u*p-f*h;if(m<=0&&u>=0&&f<=0)return o=u/(u-f),t.copy(n).addScaledVector(na,o);_f.subVectors(e,s);const g=na.dot(_f),x=ia.dot(_f);if(x>=0&&g<=x)return t.copy(s);const M=g*h-u*x;if(M<=0&&h>=0&&x<=0)return c=h/(h-x),t.copy(n).addScaledVector(ia,c);const y=f*x-g*p;if(y<=0&&p-f>=0&&g-x>=0)return zg.subVectors(s,r),c=(p-f)/(p-f+(g-x)),t.copy(r).addScaledVector(zg,c);const _=1/(y+M+m);return o=M*_,c=m*_,t.copy(n).addScaledVector(na,o).addScaledVector(ia,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const W_={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Rr={h:0,s:0,l:0},Mc={h:0,s:0,l:0};function xf(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}class Pe{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=yt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Ut.toWorkingColorSpace(this,t),this}setRGB(e,t,n,r=Ut.workingColorSpace){return this.r=e,this.g=t,this.b=n,Ut.toWorkingColorSpace(this,r),this}setHSL(e,t,n,r=Ut.workingColorSpace){if(e=dp(e,1),t=Qt(t,0,1),n=Qt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=xf(o,s,e+1/3),this.g=xf(o,s,e),this.b=xf(o,s,e-1/3)}return Ut.toWorkingColorSpace(this,r),this}setStyle(e,t=yt){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=r[1],c=r[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=yt){const n=W_[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Pa(e.r),this.g=Pa(e.g),this.b=Pa(e.b),this}copyLinearToSRGB(e){return this.r=af(e.r),this.g=af(e.g),this.b=af(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=yt){return Ut.fromWorkingColorSpace(In.copy(this),e),Math.round(Qt(In.r*255,0,255))*65536+Math.round(Qt(In.g*255,0,255))*256+Math.round(Qt(In.b*255,0,255))}getHexString(e=yt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Ut.workingColorSpace){Ut.fromWorkingColorSpace(In.copy(this),t);const n=In.r,r=In.g,s=In.b,o=Math.max(n,r,s),c=Math.min(n,r,s);let u,h;const f=(c+o)/2;if(c===o)u=0,h=0;else{const p=o-c;switch(h=f<=.5?p/(o+c):p/(2-o-c),o){case n:u=(r-s)/p+(r<s?6:0);break;case r:u=(s-n)/p+2;break;case s:u=(n-r)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=f,e}getRGB(e,t=Ut.workingColorSpace){return Ut.fromWorkingColorSpace(In.copy(this),t),e.r=In.r,e.g=In.g,e.b=In.b,e}getStyle(e=yt){Ut.fromWorkingColorSpace(In.copy(this),e);const t=In.r,n=In.g,r=In.b;return e!==yt?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(r*255)})`}offsetHSL(e,t,n){return this.getHSL(Rr),this.setHSL(Rr.h+e,Rr.s+t,Rr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Rr),e.getHSL(Mc);const n=Io(Rr.h,Mc.h,t),r=Io(Rr.s,Mc.s,t),s=Io(Rr.l,Mc.l,t);return this.setHSL(n,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*r,this.g=s[1]*t+s[4]*n+s[7]*r,this.b=s[2]*t+s[5]*n+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const In=new Pe;Pe.NAMES=W_;let VM=0;class vn extends Ei{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:VM++}),this.uuid=fi(),this.name="",this.type="Material",this.blending=ys,this.side=ji,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=vu,this.blendDst=_u,this.blendEquation=Fr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Pe(0,0,0),this.blendAlpha=0,this.depthFunc=Do,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Bd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=fs,this.stencilZFail=fs,this.stencilZPass=fs,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ys&&(n.blending=this.blending),this.side!==ji&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==vu&&(n.blendSrc=this.blendSrc),this.blendDst!==_u&&(n.blendDst=this.blendDst),this.blendEquation!==Fr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Do&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Bd&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==fs&&(n.stencilFail=this.stencilFail),this.stencilZFail!==fs&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==fs&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function r(s){const o=[];for(const c in s){const u=s[c];delete u.metadata,o.push(u)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const r=t.length;n=new Array(r);for(let s=0;s!==r;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Vr extends vn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Pe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Kn,this.combine=il,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const hr=GM();function GM(){const i=new ArrayBuffer(4),e=new Float32Array(i),t=new Uint32Array(i),n=new Uint32Array(512),r=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,r[u]=24,r[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,r[u]=-h-1,r[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,r[u]=13,r[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,r[u]=24,r[u|256]=24):(n[u]=31744,n[u|256]=64512,r[u]=13,r[u|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,f=0;for(;!(h&8388608);)h<<=1,f-=8388608;h&=-8388609,f+=947912704,s[u]=h|f}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)o[u]=u<<23;o[31]=1199570944,o[32]=2147483648;for(let u=33;u<63;++u)o[u]=2147483648+(u-32<<23);o[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:r,mantissaTable:s,exponentTable:o,offsetTable:c}}function Zn(i){Math.abs(i)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),i=Qt(i,-65504,65504),hr.floatView[0]=i;const e=hr.uint32View[0],t=e>>23&511;return hr.baseTable[t]+((e&8388607)>>hr.shiftTable[t])}function bo(i){const e=i>>10;return hr.uint32View[0]=hr.mantissaTable[hr.offsetTable[e]+(i&1023)]+hr.exponentTable[e],hr.floatView[0]}const WM={toHalfFloat:Zn,fromHalfFloat:bo},cn=new D,Ec=new oe;class St{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Xo,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=hi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return H_("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Ec.fromBufferAttribute(this,t),Ec.applyMatrix3(e),this.setXY(t,Ec.x,Ec.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)cn.fromBufferAttribute(this,t),cn.applyMatrix3(e),this.setXYZ(t,cn.x,cn.y,cn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)cn.fromBufferAttribute(this,t),cn.applyMatrix4(e),this.setXYZ(t,cn.x,cn.y,cn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)cn.fromBufferAttribute(this,t),cn.applyNormalMatrix(e),this.setXYZ(t,cn.x,cn.y,cn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)cn.fromBufferAttribute(this,t),cn.transformDirection(e),this.setXYZ(t,cn.x,cn.y,cn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Hn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ct(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Hn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Hn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Hn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Hn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),r=ct(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),r=ct(r,this.array),s=ct(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Xo&&(e.usage=this.usage),e}}class XM extends St{constructor(e,t,n){super(new Int8Array(e),t,n)}}class qM extends St{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class YM extends St{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class ZM extends St{constructor(e,t,n){super(new Int16Array(e),t,n)}}class mp extends St{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class jM extends St{constructor(e,t,n){super(new Int32Array(e),t,n)}}class gp extends St{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class JM extends St{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=bo(this.array[e*this.itemSize]);return this.normalized&&(t=Hn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize]=Zn(t),this}getY(e){let t=bo(this.array[e*this.itemSize+1]);return this.normalized&&(t=Hn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+1]=Zn(t),this}getZ(e){let t=bo(this.array[e*this.itemSize+2]);return this.normalized&&(t=Hn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+2]=Zn(t),this}getW(e){let t=bo(this.array[e*this.itemSize+3]);return this.normalized&&(t=Hn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ct(t,this.array)),this.array[e*this.itemSize+3]=Zn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array)),this.array[e+0]=Zn(t),this.array[e+1]=Zn(n),this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),r=ct(r,this.array)),this.array[e+0]=Zn(t),this.array[e+1]=Zn(n),this.array[e+2]=Zn(r),this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),r=ct(r,this.array),s=ct(s,this.array)),this.array[e+0]=Zn(t),this.array[e+1]=Zn(n),this.array[e+2]=Zn(r),this.array[e+3]=Zn(s),this}}class ze extends St{constructor(e,t,n){super(new Float32Array(e),t,n)}}let KM=0;const Si=new $e,yf=new Ct,ra=new D,ci=new Vn,mo=new Vn,Mn=new D;class ut extends Ei{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:KM++}),this.uuid=fi(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(z_(e)?gp:mp)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new lt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Si.makeRotationFromQuaternion(e),this.applyMatrix4(Si),this}rotateX(e){return Si.makeRotationX(e),this.applyMatrix4(Si),this}rotateY(e){return Si.makeRotationY(e),this.applyMatrix4(Si),this}rotateZ(e){return Si.makeRotationZ(e),this.applyMatrix4(Si),this}translate(e,t,n){return Si.makeTranslation(e,t,n),this.applyMatrix4(Si),this}scale(e,t,n){return Si.makeScale(e,t,n),this.applyMatrix4(Si),this}lookAt(e){return yf.lookAt(e),yf.updateMatrix(),this.applyMatrix4(yf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ra).negate(),this.translate(ra.x,ra.y,ra.z),this}setFromPoints(e){const t=[];for(let n=0,r=e.length;n<r;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ze(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Vn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){const s=t[n];ci.setFromBufferAttribute(s),this.morphTargetsRelative?(Mn.addVectors(this.boundingBox.min,ci.min),this.boundingBox.expandByPoint(Mn),Mn.addVectors(this.boundingBox.max,ci.max),this.boundingBox.expandByPoint(Mn)):(this.boundingBox.expandByPoint(ci.min),this.boundingBox.expandByPoint(ci.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Un);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new D,1/0);return}if(e){const n=this.boundingSphere.center;if(ci.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const c=t[s];mo.setFromBufferAttribute(c),this.morphTargetsRelative?(Mn.addVectors(ci.min,mo.min),ci.expandByPoint(Mn),Mn.addVectors(ci.max,mo.max),ci.expandByPoint(Mn)):(ci.expandByPoint(mo.min),ci.expandByPoint(mo.max))}ci.getCenter(n);let r=0;for(let s=0,o=e.count;s<o;s++)Mn.fromBufferAttribute(e,s),r=Math.max(r,n.distanceToSquared(Mn));if(t)for(let s=0,o=t.length;s<o;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,f=c.count;h<f;h++)Mn.fromBufferAttribute(c,h),u&&(ra.fromBufferAttribute(e,h),Mn.add(ra)),r=Math.max(r,n.distanceToSquared(Mn))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,r=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new St(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),c=[],u=[];for(let B=0;B<n.count;B++)c[B]=new D,u[B]=new D;const h=new D,f=new D,p=new D,m=new oe,g=new oe,x=new oe,M=new D,y=new D;function _(B,C,b){h.fromBufferAttribute(n,B),f.fromBufferAttribute(n,C),p.fromBufferAttribute(n,b),m.fromBufferAttribute(s,B),g.fromBufferAttribute(s,C),x.fromBufferAttribute(s,b),f.sub(h),p.sub(h),g.sub(m),x.sub(m);const F=1/(g.x*x.y-x.x*g.y);isFinite(F)&&(M.copy(f).multiplyScalar(x.y).addScaledVector(p,-g.y).multiplyScalar(F),y.copy(p).multiplyScalar(g.x).addScaledVector(f,-x.x).multiplyScalar(F),c[B].add(M),c[C].add(M),c[b].add(M),u[B].add(y),u[C].add(y),u[b].add(y))}let w=this.groups;w.length===0&&(w=[{start:0,count:e.count}]);for(let B=0,C=w.length;B<C;++B){const b=w[B],F=b.start,W=b.count;for(let k=F,j=F+W;k<j;k+=3)_(e.getX(k+0),e.getX(k+1),e.getX(k+2))}const E=new D,A=new D,N=new D,P=new D;function I(B){N.fromBufferAttribute(r,B),P.copy(N);const C=c[B];E.copy(C),E.sub(N.multiplyScalar(N.dot(C))).normalize(),A.crossVectors(P,C);const F=A.dot(u[B])<0?-1:1;o.setXYZW(B,E.x,E.y,E.z,F)}for(let B=0,C=w.length;B<C;++B){const b=w[B],F=b.start,W=b.count;for(let k=F,j=F+W;k<j;k+=3)I(e.getX(k+0)),I(e.getX(k+1)),I(e.getX(k+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new St(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,g=n.count;m<g;m++)n.setXYZ(m,0,0,0);const r=new D,s=new D,o=new D,c=new D,u=new D,h=new D,f=new D,p=new D;if(e)for(let m=0,g=e.count;m<g;m+=3){const x=e.getX(m+0),M=e.getX(m+1),y=e.getX(m+2);r.fromBufferAttribute(t,x),s.fromBufferAttribute(t,M),o.fromBufferAttribute(t,y),f.subVectors(o,s),p.subVectors(r,s),f.cross(p),c.fromBufferAttribute(n,x),u.fromBufferAttribute(n,M),h.fromBufferAttribute(n,y),c.add(f),u.add(f),h.add(f),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(M,u.x,u.y,u.z),n.setXYZ(y,h.x,h.y,h.z)}else for(let m=0,g=t.count;m<g;m+=3)r.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),o.fromBufferAttribute(t,m+2),f.subVectors(o,s),p.subVectors(r,s),f.cross(p),n.setXYZ(m+0,f.x,f.y,f.z),n.setXYZ(m+1,f.x,f.y,f.z),n.setXYZ(m+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Mn.fromBufferAttribute(e,t),Mn.normalize(),e.setXYZ(t,Mn.x,Mn.y,Mn.z)}toNonIndexed(){function e(c,u){const h=c.array,f=c.itemSize,p=c.normalized,m=new h.constructor(u.length*f);let g=0,x=0;for(let M=0,y=u.length;M<y;M++){c.isInterleavedBufferAttribute?g=u[M]*c.data.stride+c.offset:g=u[M]*f;for(let _=0;_<f;_++)m[x++]=h[g++]}return new St(m,f,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ut,n=this.index.array,r=this.attributes;for(const c in r){const u=r[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,p=h.length;f<p;f++){const m=h[f],g=e(m,n);u.push(g)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const r={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p];f.push(g.toJSON(e.data))}f.length>0&&(r[u]=f,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const r=e.attributes;for(const h in r){const f=r[h];this.setAttribute(h,f.clone(t))}const s=e.morphAttributes;for(const h in s){const f=[],p=s[h];for(let m=0,g=p.length;m<g;m++)f.push(p[m].clone(t));this.morphAttributes[h]=f}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let h=0,f=o.length;h<f;h++){const p=o[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const kg=new $e,ns=new za,wc=new Un,Hg=new D,sa=new D,aa=new D,oa=new D,Sf=new D,Tc=new D,Ac=new oe,bc=new oe,Cc=new oe,Vg=new D,Gg=new D,Wg=new D,Rc=new D,Pc=new D;class an extends Ct{constructor(e=new ut,t=new Vr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const c=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,r=n.attributes.position,s=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(r,e);const c=this.morphTargetInfluences;if(s&&c){Tc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const f=c[u],p=s[u];f!==0&&(Sf.fromBufferAttribute(p,e),o?Tc.addScaledVector(Sf,f):Tc.addScaledVector(Sf.sub(t),f))}t.add(Tc)}return t}raycast(e,t){const n=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),wc.copy(n.boundingSphere),wc.applyMatrix4(s),ns.copy(e.ray).recast(e.near),!(wc.containsPoint(ns.origin)===!1&&(ns.intersectSphere(wc,Hg)===null||ns.origin.distanceToSquared(Hg)>(e.far-e.near)**2))&&(kg.copy(s).invert(),ns.copy(e.ray).applyMatrix4(kg),!(n.boundingBox!==null&&ns.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,ns)))}_computeIntersections(e,t,n){let r;const s=this.geometry,o=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,f=s.attributes.uv1,p=s.attributes.normal,m=s.groups,g=s.drawRange;if(c!==null)if(Array.isArray(o))for(let x=0,M=m.length;x<M;x++){const y=m[x],_=o[y.materialIndex],w=Math.max(y.start,g.start),E=Math.min(c.count,Math.min(y.start+y.count,g.start+g.count));for(let A=w,N=E;A<N;A+=3){const P=c.getX(A),I=c.getX(A+1),B=c.getX(A+2);r=Ic(this,_,e,n,h,f,p,P,I,B),r&&(r.faceIndex=Math.floor(A/3),r.face.materialIndex=y.materialIndex,t.push(r))}}else{const x=Math.max(0,g.start),M=Math.min(c.count,g.start+g.count);for(let y=x,_=M;y<_;y+=3){const w=c.getX(y),E=c.getX(y+1),A=c.getX(y+2);r=Ic(this,o,e,n,h,f,p,w,E,A),r&&(r.faceIndex=Math.floor(y/3),t.push(r))}}else if(u!==void 0)if(Array.isArray(o))for(let x=0,M=m.length;x<M;x++){const y=m[x],_=o[y.materialIndex],w=Math.max(y.start,g.start),E=Math.min(u.count,Math.min(y.start+y.count,g.start+g.count));for(let A=w,N=E;A<N;A+=3){const P=A,I=A+1,B=A+2;r=Ic(this,_,e,n,h,f,p,P,I,B),r&&(r.faceIndex=Math.floor(A/3),r.face.materialIndex=y.materialIndex,t.push(r))}}else{const x=Math.max(0,g.start),M=Math.min(u.count,g.start+g.count);for(let y=x,_=M;y<_;y+=3){const w=y,E=y+1,A=y+2;r=Ic(this,o,e,n,h,f,p,w,E,A),r&&(r.faceIndex=Math.floor(y/3),t.push(r))}}}}function QM(i,e,t,n,r,s,o,c){let u;if(e.side===fn?u=n.intersectTriangle(o,s,r,!0,c):u=n.intersectTriangle(r,s,o,e.side===ji,c),u===null)return null;Pc.copy(c),Pc.applyMatrix4(i.matrixWorld);const h=t.ray.origin.distanceTo(Pc);return h<t.near||h>t.far?null:{distance:h,point:Pc.clone(),object:i}}function Ic(i,e,t,n,r,s,o,c,u,h){i.getVertexPosition(c,sa),i.getVertexPosition(u,aa),i.getVertexPosition(h,oa);const f=QM(i,e,t,n,sa,aa,oa,Rc);if(f){r&&(Ac.fromBufferAttribute(r,c),bc.fromBufferAttribute(r,u),Cc.fromBufferAttribute(r,h),f.uv=ui.getInterpolation(Rc,sa,aa,oa,Ac,bc,Cc,new oe)),s&&(Ac.fromBufferAttribute(s,c),bc.fromBufferAttribute(s,u),Cc.fromBufferAttribute(s,h),f.uv1=ui.getInterpolation(Rc,sa,aa,oa,Ac,bc,Cc,new oe)),o&&(Vg.fromBufferAttribute(o,c),Gg.fromBufferAttribute(o,u),Wg.fromBufferAttribute(o,h),f.normal=ui.getInterpolation(Rc,sa,aa,oa,Vg,Gg,Wg,new D),f.normal.dot(n.direction)>0&&f.normal.multiplyScalar(-1));const p={a:c,b:u,c:h,normal:new D,materialIndex:0};ui.getNormal(sa,aa,oa,p.normal),f.face=p}return f}class Ps extends ut{constructor(e=1,t=1,n=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:s,depthSegments:o};const c=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const u=[],h=[],f=[],p=[];let m=0,g=0;x("z","y","x",-1,-1,n,t,e,o,s,0),x("z","y","x",1,-1,n,t,-e,o,s,1),x("x","z","y",1,1,e,n,t,r,o,2),x("x","z","y",1,-1,e,n,-t,r,o,3),x("x","y","z",1,-1,e,t,n,r,s,4),x("x","y","z",-1,-1,e,t,-n,r,s,5),this.setIndex(u),this.setAttribute("position",new ze(h,3)),this.setAttribute("normal",new ze(f,3)),this.setAttribute("uv",new ze(p,2));function x(M,y,_,w,E,A,N,P,I,B,C){const b=A/I,F=N/B,W=A/2,k=N/2,j=P/2,K=I+1,le=B+1;let ge=0,H=0;const Q=new D;for(let Z=0;Z<le;Z++){const fe=Z*F-k;for(let we=0;we<K;we++){const Le=we*b-W;Q[M]=Le*w,Q[y]=fe*E,Q[_]=j,h.push(Q.x,Q.y,Q.z),Q[M]=0,Q[y]=0,Q[_]=P>0?1:-1,f.push(Q.x,Q.y,Q.z),p.push(we/I),p.push(1-Z/B),ge+=1}}for(let Z=0;Z<B;Z++)for(let fe=0;fe<I;fe++){const we=m+fe+K*Z,Le=m+fe+K*(Z+1),te=m+(fe+1)+K*(Z+1),me=m+(fe+1)+K*Z;u.push(we,Le,me),u.push(Le,te,me),H+=6}c.addGroup(g,H,C),g+=H,m+=ge}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ps(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ua(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const r=i[t][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=r.clone():Array.isArray(r)?e[t][n]=r.slice():e[t][n]=r}}return e}function zn(i){const e={};for(let t=0;t<i.length;t++){const n=Ua(i[t]);for(const r in n)e[r]=n[r]}return e}function $M(i){const e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}function X_(i){const e=i.getRenderTarget();return e===null?i.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Ut.workingColorSpace}const q_={clone:Ua,merge:zn};var e1=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,t1=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class nn extends vn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=e1,this.fragmentShader=t1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ua(e.uniforms),this.uniformsGroups=$M(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const r in this.extensions)this.extensions[r]===!0&&(n[r]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class ka extends Ct{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new $e,this.projectionMatrix=new $e,this.projectionMatrixInverse=new $e,this.coordinateSystem=qi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Pr=new D,Xg=new oe,qg=new oe;class $t extends ka{constructor(e=50,t=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=La*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Ms*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return La*2*Math.atan(Math.tan(Ms*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Pr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Pr.x,Pr.y).multiplyScalar(-e/Pr.z),Pr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Pr.x,Pr.y).multiplyScalar(-e/Pr.z)}getViewSize(e,t){return this.getViewBounds(e,Xg,qg),t.subVectors(qg,Xg)}setViewOffset(e,t,n,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Ms*.5*this.fov)/this.zoom,n=2*t,r=this.aspect*n,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const u=o.fullWidth,h=o.fullHeight;s+=o.offsetX*r/u,t-=o.offsetY*n/h,r*=o.width/u,n*=o.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const la=-90,ca=1;class Y_ extends Ct{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new $t(la,ca,e,t);r.layers=this.layers,this.add(r);const s=new $t(la,ca,e,t);s.layers=this.layers,this.add(s);const o=new $t(la,ca,e,t);o.layers=this.layers,this.add(o);const c=new $t(la,ca,e,t);c.layers=this.layers,this.add(c);const u=new $t(la,ca,e,t);u.layers=this.layers,this.add(u);const h=new $t(la,ca,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,r,s,o,c,u]=t;for(const h of t)this.remove(h);if(e===qi)n.up.set(0,1,0),n.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===qo)n.up.set(0,-1,0),n.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,o,c,u,h,f]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),g=e.getActiveMipmapLevel(),x=e.xr.enabled;e.xr.enabled=!1;const M=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,r),e.render(t,s),e.setRenderTarget(n,1,r),e.render(t,o),e.setRenderTarget(n,2,r),e.render(t,c),e.setRenderTarget(n,3,r),e.render(t,u),e.setRenderTarget(n,4,r),e.render(t,h),n.texture.generateMipmaps=M,e.setRenderTarget(n,5,r),e.render(t,f),e.setRenderTarget(p,m,g),e.xr.enabled=x,n.texture.needsPMREMUpdate=!0}}class sl extends Bt{constructor(e,t,n,r,s,o,c,u,h,f){e=e!==void 0?e:[],t=t!==void 0?t:dr,super(e,t,n,r,s,o,c,u,h,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Z_ extends tn{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},r=[n,n,n,n,n,n];this.texture=new sl(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:qt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Ps(5,5,5),s=new nn({name:"CubemapFromEquirect",uniforms:Ua(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:fn,blending:pn});s.uniforms.tEquirect.value=t;const o=new an(r,s),c=t.minFilter;return t.minFilter===Xi&&(t.minFilter=qt),new Y_(1,10,this).update(e,o),t.minFilter=c,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,r){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,r);e.setRenderTarget(s)}}const Mf=new D,n1=new D,i1=new lt;class Nr{constructor(e=new D(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=Mf.subVectors(n,t).cross(n1.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Mf),r=this.normal.dot(n);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||i1.getNormalMatrix(e),r=this.coplanarPoint(Mf).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const is=new Un,Lc=new D;class al{constructor(e=new Nr,t=new Nr,n=new Nr,r=new Nr,s=new Nr,o=new Nr){this.planes=[e,t,n,r,s,o]}set(e,t,n,r,s,o){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(r),c[4].copy(s),c[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=qi){const n=this.planes,r=e.elements,s=r[0],o=r[1],c=r[2],u=r[3],h=r[4],f=r[5],p=r[6],m=r[7],g=r[8],x=r[9],M=r[10],y=r[11],_=r[12],w=r[13],E=r[14],A=r[15];if(n[0].setComponents(u-s,m-h,y-g,A-_).normalize(),n[1].setComponents(u+s,m+h,y+g,A+_).normalize(),n[2].setComponents(u+o,m+f,y+x,A+w).normalize(),n[3].setComponents(u-o,m-f,y-x,A-w).normalize(),n[4].setComponents(u-c,m-p,y-M,A-E).normalize(),t===qi)n[5].setComponents(u+c,m+p,y+M,A+E).normalize();else if(t===qo)n[5].setComponents(c,p,M,E).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),is.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),is.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(is)}intersectsSprite(e){return is.center.set(0,0,0),is.radius=.7071067811865476,is.applyMatrix4(e.matrixWorld),this.intersectsSphere(is)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(Lc.x=r.normal.x>0?e.max.x:e.min.x,Lc.y=r.normal.y>0?e.max.y:e.min.y,Lc.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Lc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function j_(){let i=null,e=!1,t=null,n=null;function r(s,o){t(s,o),n=i.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(r),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){i=s}}}function r1(i){const e=new WeakMap;function t(c,u){const h=c.array,f=c.usage,p=h.byteLength,m=i.createBuffer();i.bindBuffer(u,m),i.bufferData(u,h,f),c.onUploadCallback();let g;if(h instanceof Float32Array)g=i.FLOAT;else if(h instanceof Uint16Array)c.isFloat16BufferAttribute?g=i.HALF_FLOAT:g=i.UNSIGNED_SHORT;else if(h instanceof Int16Array)g=i.SHORT;else if(h instanceof Uint32Array)g=i.UNSIGNED_INT;else if(h instanceof Int32Array)g=i.INT;else if(h instanceof Int8Array)g=i.BYTE;else if(h instanceof Uint8Array)g=i.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)g=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:m,type:g,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version,size:p}}function n(c,u,h){const f=u.array,p=u._updateRange,m=u.updateRanges;if(i.bindBuffer(h,c),p.count===-1&&m.length===0&&i.bufferSubData(h,0,f),m.length!==0){for(let g=0,x=m.length;g<x;g++){const M=m[g];i.bufferSubData(h,M.start*f.BYTES_PER_ELEMENT,f,M.start,M.count)}u.clearUpdateRanges()}p.count!==-1&&(i.bufferSubData(h,p.offset*f.BYTES_PER_ELEMENT,f,p.offset,p.count),p.count=-1),u.onUploadCallback()}function r(c){return c.isInterleavedBufferAttribute&&(c=c.data),e.get(c)}function s(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=e.get(c);u&&(i.deleteBuffer(u.buffer),e.delete(c))}function o(c,u){if(c.isGLBufferAttribute){const f=e.get(c);(!f||f.version<c.version)&&e.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=e.get(c);if(h===void 0)e.set(c,t(c,u));else if(h.version<c.version){if(h.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(h.buffer,c,u),h.version=c.version}}return{get:r,remove:s,update:o}}class Ha extends ut{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const s=e/2,o=t/2,c=Math.floor(n),u=Math.floor(r),h=c+1,f=u+1,p=e/c,m=t/u,g=[],x=[],M=[],y=[];for(let _=0;_<f;_++){const w=_*m-o;for(let E=0;E<h;E++){const A=E*p-s;x.push(A,-w,0),M.push(0,0,1),y.push(E/c),y.push(1-_/u)}}for(let _=0;_<u;_++)for(let w=0;w<c;w++){const E=w+h*_,A=w+h*(_+1),N=w+1+h*(_+1),P=w+1+h*_;g.push(E,A,P),g.push(A,N,P)}this.setIndex(g),this.setAttribute("position",new ze(x,3)),this.setAttribute("normal",new ze(M,3)),this.setAttribute("uv",new ze(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ha(e.width,e.height,e.widthSegments,e.heightSegments)}}var s1=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,a1=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,o1=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,l1=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,c1=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,u1=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,h1=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,f1=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,d1=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,p1=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,m1=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,g1=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,v1=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,_1=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,x1=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,y1=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,S1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,M1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,E1=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,w1=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,T1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,A1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,b1=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,C1=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,R1=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,P1=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,I1=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,L1=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,U1=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,D1=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,N1="gl_FragColor = linearToOutputTexel( gl_FragColor );",F1=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,O1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,B1=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,z1=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,k1=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,H1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,V1=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,G1=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,W1=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,X1=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,q1=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Y1=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Z1=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,j1=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,J1=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,K1=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Q1=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,$1=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,eE=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,tE=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,nE=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,iE=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,rE=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,sE=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,aE=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,oE=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,lE=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,cE=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,uE=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,hE=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,fE=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,dE=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,pE=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,mE=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,gE=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,vE=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,_E=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[MORPHTARGETS_COUNT];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,xE=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,yE=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,SE=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
	#endif
	#ifdef MORPHTARGETS_TEXTURE
		#ifndef USE_INSTANCING_MORPH
			uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		#endif
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,ME=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,EE=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,wE=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,TE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,AE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,bE=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,CE=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,RE=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,PE=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,IE=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,LE=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,UE=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,DE=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,NE=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,FE=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,OE=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,BE=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,zE=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,kE=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,HE=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return shadow;
	}
#endif`,VE=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,GE=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,WE=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,XE=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,qE=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,YE=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,ZE=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,jE=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,JE=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,KE=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,QE=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	float startCompression = 0.8 - 0.04;
	float desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min(color.r, min(color.g, color.b));
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max(color.r, max(color.g, color.b));
	if (peak < startCompression) return color;
	float d = 1. - startCompression;
	float newPeak = 1. - d * d / (peak + d - startCompression);
	color *= newPeak / peak;
	float g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);
	return mix(color, newPeak * vec3(1, 1, 1), g);
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,$E=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,ew=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,tw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,nw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,iw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,rw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const sw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,aw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ow=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,lw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,cw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,uw=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,hw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,fw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,dw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,pw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,mw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,gw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,vw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,_w=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,xw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,yw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Sw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Mw=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ew=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,ww=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Tw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Aw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,bw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Cw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Rw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Pw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Iw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Lw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Uw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Dw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Nw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Fw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Ow=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Bw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ht={alphahash_fragment:s1,alphahash_pars_fragment:a1,alphamap_fragment:o1,alphamap_pars_fragment:l1,alphatest_fragment:c1,alphatest_pars_fragment:u1,aomap_fragment:h1,aomap_pars_fragment:f1,batching_pars_vertex:d1,batching_vertex:p1,begin_vertex:m1,beginnormal_vertex:g1,bsdfs:v1,iridescence_fragment:_1,bumpmap_pars_fragment:x1,clipping_planes_fragment:y1,clipping_planes_pars_fragment:S1,clipping_planes_pars_vertex:M1,clipping_planes_vertex:E1,color_fragment:w1,color_pars_fragment:T1,color_pars_vertex:A1,color_vertex:b1,common:C1,cube_uv_reflection_fragment:R1,defaultnormal_vertex:P1,displacementmap_pars_vertex:I1,displacementmap_vertex:L1,emissivemap_fragment:U1,emissivemap_pars_fragment:D1,colorspace_fragment:N1,colorspace_pars_fragment:F1,envmap_fragment:O1,envmap_common_pars_fragment:B1,envmap_pars_fragment:z1,envmap_pars_vertex:k1,envmap_physical_pars_fragment:Q1,envmap_vertex:H1,fog_vertex:V1,fog_pars_vertex:G1,fog_fragment:W1,fog_pars_fragment:X1,gradientmap_pars_fragment:q1,lightmap_fragment:Y1,lightmap_pars_fragment:Z1,lights_lambert_fragment:j1,lights_lambert_pars_fragment:J1,lights_pars_begin:K1,lights_toon_fragment:$1,lights_toon_pars_fragment:eE,lights_phong_fragment:tE,lights_phong_pars_fragment:nE,lights_physical_fragment:iE,lights_physical_pars_fragment:rE,lights_fragment_begin:sE,lights_fragment_maps:aE,lights_fragment_end:oE,logdepthbuf_fragment:lE,logdepthbuf_pars_fragment:cE,logdepthbuf_pars_vertex:uE,logdepthbuf_vertex:hE,map_fragment:fE,map_pars_fragment:dE,map_particle_fragment:pE,map_particle_pars_fragment:mE,metalnessmap_fragment:gE,metalnessmap_pars_fragment:vE,morphinstance_vertex:_E,morphcolor_vertex:xE,morphnormal_vertex:yE,morphtarget_pars_vertex:SE,morphtarget_vertex:ME,normal_fragment_begin:EE,normal_fragment_maps:wE,normal_pars_fragment:TE,normal_pars_vertex:AE,normal_vertex:bE,normalmap_pars_fragment:CE,clearcoat_normal_fragment_begin:RE,clearcoat_normal_fragment_maps:PE,clearcoat_pars_fragment:IE,iridescence_pars_fragment:LE,opaque_fragment:UE,packing:DE,premultiplied_alpha_fragment:NE,project_vertex:FE,dithering_fragment:OE,dithering_pars_fragment:BE,roughnessmap_fragment:zE,roughnessmap_pars_fragment:kE,shadowmap_pars_fragment:HE,shadowmap_pars_vertex:VE,shadowmap_vertex:GE,shadowmask_pars_fragment:WE,skinbase_vertex:XE,skinning_pars_vertex:qE,skinning_vertex:YE,skinnormal_vertex:ZE,specularmap_fragment:jE,specularmap_pars_fragment:JE,tonemapping_fragment:KE,tonemapping_pars_fragment:QE,transmission_fragment:$E,transmission_pars_fragment:ew,uv_pars_fragment:tw,uv_pars_vertex:nw,uv_vertex:iw,worldpos_vertex:rw,background_vert:sw,background_frag:aw,backgroundCube_vert:ow,backgroundCube_frag:lw,cube_vert:cw,cube_frag:uw,depth_vert:hw,depth_frag:fw,distanceRGBA_vert:dw,distanceRGBA_frag:pw,equirect_vert:mw,equirect_frag:gw,linedashed_vert:vw,linedashed_frag:_w,meshbasic_vert:xw,meshbasic_frag:yw,meshlambert_vert:Sw,meshlambert_frag:Mw,meshmatcap_vert:Ew,meshmatcap_frag:ww,meshnormal_vert:Tw,meshnormal_frag:Aw,meshphong_vert:bw,meshphong_frag:Cw,meshphysical_vert:Rw,meshphysical_frag:Pw,meshtoon_vert:Iw,meshtoon_frag:Lw,points_vert:Uw,points_frag:Dw,shadow_vert:Nw,shadow_frag:Fw,sprite_vert:Ow,sprite_frag:Bw},be={common:{diffuse:{value:new Pe(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new lt},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new lt}},envmap:{envMap:{value:null},envMapRotation:{value:new lt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new lt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new lt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new lt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new lt},normalScale:{value:new oe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new lt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new lt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new lt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new lt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Pe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Pe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0},uvTransform:{value:new lt}},sprite:{diffuse:{value:new Pe(16777215)},opacity:{value:1},center:{value:new oe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new lt},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0}}},Pi={basic:{uniforms:zn([be.common,be.specularmap,be.envmap,be.aomap,be.lightmap,be.fog]),vertexShader:ht.meshbasic_vert,fragmentShader:ht.meshbasic_frag},lambert:{uniforms:zn([be.common,be.specularmap,be.envmap,be.aomap,be.lightmap,be.emissivemap,be.bumpmap,be.normalmap,be.displacementmap,be.fog,be.lights,{emissive:{value:new Pe(0)}}]),vertexShader:ht.meshlambert_vert,fragmentShader:ht.meshlambert_frag},phong:{uniforms:zn([be.common,be.specularmap,be.envmap,be.aomap,be.lightmap,be.emissivemap,be.bumpmap,be.normalmap,be.displacementmap,be.fog,be.lights,{emissive:{value:new Pe(0)},specular:{value:new Pe(1118481)},shininess:{value:30}}]),vertexShader:ht.meshphong_vert,fragmentShader:ht.meshphong_frag},standard:{uniforms:zn([be.common,be.envmap,be.aomap,be.lightmap,be.emissivemap,be.bumpmap,be.normalmap,be.displacementmap,be.roughnessmap,be.metalnessmap,be.fog,be.lights,{emissive:{value:new Pe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag},toon:{uniforms:zn([be.common,be.aomap,be.lightmap,be.emissivemap,be.bumpmap,be.normalmap,be.displacementmap,be.gradientmap,be.fog,be.lights,{emissive:{value:new Pe(0)}}]),vertexShader:ht.meshtoon_vert,fragmentShader:ht.meshtoon_frag},matcap:{uniforms:zn([be.common,be.bumpmap,be.normalmap,be.displacementmap,be.fog,{matcap:{value:null}}]),vertexShader:ht.meshmatcap_vert,fragmentShader:ht.meshmatcap_frag},points:{uniforms:zn([be.points,be.fog]),vertexShader:ht.points_vert,fragmentShader:ht.points_frag},dashed:{uniforms:zn([be.common,be.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ht.linedashed_vert,fragmentShader:ht.linedashed_frag},depth:{uniforms:zn([be.common,be.displacementmap]),vertexShader:ht.depth_vert,fragmentShader:ht.depth_frag},normal:{uniforms:zn([be.common,be.bumpmap,be.normalmap,be.displacementmap,{opacity:{value:1}}]),vertexShader:ht.meshnormal_vert,fragmentShader:ht.meshnormal_frag},sprite:{uniforms:zn([be.sprite,be.fog]),vertexShader:ht.sprite_vert,fragmentShader:ht.sprite_frag},background:{uniforms:{uvTransform:{value:new lt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ht.background_vert,fragmentShader:ht.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new lt}},vertexShader:ht.backgroundCube_vert,fragmentShader:ht.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ht.cube_vert,fragmentShader:ht.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ht.equirect_vert,fragmentShader:ht.equirect_frag},distanceRGBA:{uniforms:zn([be.common,be.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ht.distanceRGBA_vert,fragmentShader:ht.distanceRGBA_frag},shadow:{uniforms:zn([be.lights,be.fog,{color:{value:new Pe(0)},opacity:{value:1}}]),vertexShader:ht.shadow_vert,fragmentShader:ht.shadow_frag}};Pi.physical={uniforms:zn([Pi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new lt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new lt},clearcoatNormalScale:{value:new oe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new lt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new lt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new lt},sheen:{value:0},sheenColor:{value:new Pe(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new lt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new lt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new lt},transmissionSamplerSize:{value:new oe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new lt},attenuationDistance:{value:0},attenuationColor:{value:new Pe(0)},specularColor:{value:new Pe(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new lt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new lt},anisotropyVector:{value:new oe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new lt}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag};const Uc={r:0,b:0,g:0},rs=new Kn,zw=new $e;function kw(i,e,t,n,r,s,o){const c=new Pe(0);let u=s===!0?0:1,h,f,p=null,m=0,g=null;function x(y,_){let w=!1,E=_.isScene===!0?_.background:null;E&&E.isTexture&&(E=(_.backgroundBlurriness>0?t:e).get(E)),E===null?M(c,u):E&&E.isColor&&(M(E,1),w=!0);const A=i.xr.getEnvironmentBlendMode();A==="additive"?n.buffers.color.setClear(0,0,0,1,o):A==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(i.autoClear||w)&&i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil),E&&(E.isCubeTexture||E.mapping===Ba)?(f===void 0&&(f=new an(new Ps(1,1,1),new nn({name:"BackgroundCubeMaterial",uniforms:Ua(Pi.backgroundCube.uniforms),vertexShader:Pi.backgroundCube.vertexShader,fragmentShader:Pi.backgroundCube.fragmentShader,side:fn,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(N,P,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(f)),rs.copy(_.backgroundRotation),rs.x*=-1,rs.y*=-1,rs.z*=-1,E.isCubeTexture&&E.isRenderTargetTexture===!1&&(rs.y*=-1,rs.z*=-1),f.material.uniforms.envMap.value=E,f.material.uniforms.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,f.material.uniforms.backgroundRotation.value.setFromMatrix4(zw.makeRotationFromEuler(rs)),f.material.toneMapped=Ut.getTransfer(E.colorSpace)!==Ht,(p!==E||m!==E.version||g!==i.toneMapping)&&(f.material.needsUpdate=!0,p=E,m=E.version,g=i.toneMapping),f.layers.enableAll(),y.unshift(f,f.geometry,f.material,0,0,null)):E&&E.isTexture&&(h===void 0&&(h=new an(new Ha(2,2),new nn({name:"BackgroundMaterial",uniforms:Ua(Pi.background.uniforms),vertexShader:Pi.background.vertexShader,fragmentShader:Pi.background.fragmentShader,side:ji,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(h)),h.material.uniforms.t2D.value=E,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.toneMapped=Ut.getTransfer(E.colorSpace)!==Ht,E.matrixAutoUpdate===!0&&E.updateMatrix(),h.material.uniforms.uvTransform.value.copy(E.matrix),(p!==E||m!==E.version||g!==i.toneMapping)&&(h.material.needsUpdate=!0,p=E,m=E.version,g=i.toneMapping),h.layers.enableAll(),y.unshift(h,h.geometry,h.material,0,0,null))}function M(y,_){y.getRGB(Uc,X_(i)),n.buffers.color.setClear(Uc.r,Uc.g,Uc.b,_,o)}return{getClearColor:function(){return c},setClearColor:function(y,_=1){c.set(y),u=_,M(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(y){u=y,M(c,u)},render:x}}function Hw(i,e){const t=i.getParameter(i.MAX_VERTEX_ATTRIBS),n={},r=m(null);let s=r,o=!1;function c(b,F,W,k,j){let K=!1;const le=p(k,W,F);s!==le&&(s=le,h(s.object)),K=g(b,k,W,j),K&&x(b,k,W,j),j!==null&&e.update(j,i.ELEMENT_ARRAY_BUFFER),(K||o)&&(o=!1,A(b,F,W,k),j!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,e.get(j).buffer))}function u(){return i.createVertexArray()}function h(b){return i.bindVertexArray(b)}function f(b){return i.deleteVertexArray(b)}function p(b,F,W){const k=W.wireframe===!0;let j=n[b.id];j===void 0&&(j={},n[b.id]=j);let K=j[F.id];K===void 0&&(K={},j[F.id]=K);let le=K[k];return le===void 0&&(le=m(u()),K[k]=le),le}function m(b){const F=[],W=[],k=[];for(let j=0;j<t;j++)F[j]=0,W[j]=0,k[j]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:F,enabledAttributes:W,attributeDivisors:k,object:b,attributes:{},index:null}}function g(b,F,W,k){const j=s.attributes,K=F.attributes;let le=0;const ge=W.getAttributes();for(const H in ge)if(ge[H].location>=0){const Z=j[H];let fe=K[H];if(fe===void 0&&(H==="instanceMatrix"&&b.instanceMatrix&&(fe=b.instanceMatrix),H==="instanceColor"&&b.instanceColor&&(fe=b.instanceColor)),Z===void 0||Z.attribute!==fe||fe&&Z.data!==fe.data)return!0;le++}return s.attributesNum!==le||s.index!==k}function x(b,F,W,k){const j={},K=F.attributes;let le=0;const ge=W.getAttributes();for(const H in ge)if(ge[H].location>=0){let Z=K[H];Z===void 0&&(H==="instanceMatrix"&&b.instanceMatrix&&(Z=b.instanceMatrix),H==="instanceColor"&&b.instanceColor&&(Z=b.instanceColor));const fe={};fe.attribute=Z,Z&&Z.data&&(fe.data=Z.data),j[H]=fe,le++}s.attributes=j,s.attributesNum=le,s.index=k}function M(){const b=s.newAttributes;for(let F=0,W=b.length;F<W;F++)b[F]=0}function y(b){_(b,0)}function _(b,F){const W=s.newAttributes,k=s.enabledAttributes,j=s.attributeDivisors;W[b]=1,k[b]===0&&(i.enableVertexAttribArray(b),k[b]=1),j[b]!==F&&(i.vertexAttribDivisor(b,F),j[b]=F)}function w(){const b=s.newAttributes,F=s.enabledAttributes;for(let W=0,k=F.length;W<k;W++)F[W]!==b[W]&&(i.disableVertexAttribArray(W),F[W]=0)}function E(b,F,W,k,j,K,le){le===!0?i.vertexAttribIPointer(b,F,W,j,K):i.vertexAttribPointer(b,F,W,k,j,K)}function A(b,F,W,k){M();const j=k.attributes,K=W.getAttributes(),le=F.defaultAttributeValues;for(const ge in K){const H=K[ge];if(H.location>=0){let Q=j[ge];if(Q===void 0&&(ge==="instanceMatrix"&&b.instanceMatrix&&(Q=b.instanceMatrix),ge==="instanceColor"&&b.instanceColor&&(Q=b.instanceColor)),Q!==void 0){const Z=Q.normalized,fe=Q.itemSize,we=e.get(Q);if(we===void 0)continue;const Le=we.buffer,te=we.type,me=we.bytesPerElement,Ae=te===i.INT||te===i.UNSIGNED_INT||Q.gpuType===ip;if(Q.isInterleavedBufferAttribute){const ye=Q.data,Ye=ye.stride,tt=Q.offset;if(ye.isInstancedInterleavedBuffer){for(let Fe=0;Fe<H.locationSize;Fe++)_(H.location+Fe,ye.meshPerAttribute);b.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=ye.meshPerAttribute*ye.count)}else for(let Fe=0;Fe<H.locationSize;Fe++)y(H.location+Fe);i.bindBuffer(i.ARRAY_BUFFER,Le);for(let Fe=0;Fe<H.locationSize;Fe++)E(H.location+Fe,fe/H.locationSize,te,Z,Ye*me,(tt+fe/H.locationSize*Fe)*me,Ae)}else{if(Q.isInstancedBufferAttribute){for(let ye=0;ye<H.locationSize;ye++)_(H.location+ye,Q.meshPerAttribute);b.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=Q.meshPerAttribute*Q.count)}else for(let ye=0;ye<H.locationSize;ye++)y(H.location+ye);i.bindBuffer(i.ARRAY_BUFFER,Le);for(let ye=0;ye<H.locationSize;ye++)E(H.location+ye,fe/H.locationSize,te,Z,fe*me,fe/H.locationSize*ye*me,Ae)}}else if(le!==void 0){const Z=le[ge];if(Z!==void 0)switch(Z.length){case 2:i.vertexAttrib2fv(H.location,Z);break;case 3:i.vertexAttrib3fv(H.location,Z);break;case 4:i.vertexAttrib4fv(H.location,Z);break;default:i.vertexAttrib1fv(H.location,Z)}}}}w()}function N(){B();for(const b in n){const F=n[b];for(const W in F){const k=F[W];for(const j in k)f(k[j].object),delete k[j];delete F[W]}delete n[b]}}function P(b){if(n[b.id]===void 0)return;const F=n[b.id];for(const W in F){const k=F[W];for(const j in k)f(k[j].object),delete k[j];delete F[W]}delete n[b.id]}function I(b){for(const F in n){const W=n[F];if(W[b.id]===void 0)continue;const k=W[b.id];for(const j in k)f(k[j].object),delete k[j];delete W[b.id]}}function B(){C(),o=!0,s!==r&&(s=r,h(s.object))}function C(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:c,reset:B,resetDefaultState:C,dispose:N,releaseStatesOfGeometry:P,releaseStatesOfProgram:I,initAttributes:M,enableAttribute:y,disableUnusedAttributes:w}}function Vw(i,e,t){let n;function r(u){n=u}function s(u,h){i.drawArrays(n,u,h),t.update(h,n,1)}function o(u,h,f){f!==0&&(i.drawArraysInstanced(n,u,h,f),t.update(h,n,f))}function c(u,h,f){if(f===0)return;const p=e.get("WEBGL_multi_draw");if(p===null)for(let m=0;m<f;m++)this.render(u[m],h[m]);else{p.multiDrawArraysWEBGL(n,u,0,h,0,f);let m=0;for(let g=0;g<f;g++)m+=h[g];t.update(m,n,1)}}this.setMode=r,this.render=s,this.renderInstances=o,this.renderMultiDraw=c}function Gw(i,e,t){let n;function r(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const E=e.get("EXT_texture_filter_anisotropic");n=i.getParameter(E.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(E){if(E==="highp"){if(i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.HIGH_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision>0)return"highp";E="mediump"}return E==="mediump"&&i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.MEDIUM_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let o=t.precision!==void 0?t.precision:"highp";const c=s(o);c!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",c,"instead."),o=c);const u=t.logarithmicDepthBuffer===!0,h=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),f=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),p=i.getParameter(i.MAX_TEXTURE_SIZE),m=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),g=i.getParameter(i.MAX_VERTEX_ATTRIBS),x=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),M=i.getParameter(i.MAX_VARYING_VECTORS),y=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),_=f>0,w=i.getParameter(i.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:s,precision:o,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:f,maxTextureSize:p,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:x,maxVaryings:M,maxFragmentUniforms:y,vertexTextures:_,maxSamples:w}}function Ww(i){const e=this;let t=null,n=0,r=!1,s=!1;const o=new Nr,c=new lt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const g=p.length!==0||m||n!==0||r;return r=m,n=p.length,g},this.beginShadows=function(){s=!0,f(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=f(p,m,0)},this.setState=function(p,m,g){const x=p.clippingPlanes,M=p.clipIntersection,y=p.clipShadows,_=i.get(p);if(!r||x===null||x.length===0||s&&!y)s?f(null):h();else{const w=s?0:n,E=w*4;let A=_.clippingState||null;u.value=A,A=f(x,m,E,g);for(let N=0;N!==E;++N)A[N]=t[N];_.clippingState=A,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=w}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function f(p,m,g,x){const M=p!==null?p.length:0;let y=null;if(M!==0){if(y=u.value,x!==!0||y===null){const _=g+M*4,w=m.matrixWorldInverse;c.getNormalMatrix(w),(y===null||y.length<_)&&(y=new Float32Array(_));for(let E=0,A=g;E!==M;++E,A+=4)o.copy(p[E]).applyMatrix4(w,c),o.normal.toArray(y,A),y[A+3]=o.constant}u.value=y,u.needsUpdate=!0}return e.numPlanes=M,e.numIntersection=0,y}}function Xw(i){let e=new WeakMap;function t(o,c){return c===No?o.mapping=dr:c===Fo&&(o.mapping=Br),o}function n(o){if(o&&o.isTexture){const c=o.mapping;if(c===No||c===Fo)if(e.has(o)){const u=e.get(o).texture;return t(u,o.mapping)}else{const u=o.image;if(u&&u.height>0){const h=new Z_(u.height);return h.fromEquirectangularTexture(i,o),e.set(o,h),o.addEventListener("dispose",r),t(h.texture,o.mapping)}else return null}}return o}function r(o){const c=o.target;c.removeEventListener("dispose",r);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Is extends ka{constructor(e=-1,t=1,n=1,r=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=n-e,o=n+e,c=r+t,u=r-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,o=s+h*this.view.width,c-=f*this.view.offsetY,u=c-f*this.view.height}this.projectionMatrix.makeOrthographic(s,o,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Aa=4,Yg=[.125,.215,.35,.446,.526,.582],ps=20,Ef=new Is,Zg=new Pe;let wf=null,Tf=0,Af=0,bf=!1;const ds=(1+Math.sqrt(5))/2,ua=1/ds,jg=[new D(1,1,1),new D(-1,1,1),new D(1,1,-1),new D(-1,1,-1),new D(0,ds,ua),new D(0,ds,-ua),new D(ua,0,ds),new D(-ua,0,ds),new D(ds,ua,0),new D(-ds,ua,0)];class kd{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){wf=this._renderer.getRenderTarget(),Tf=this._renderer.getActiveCubeFace(),Af=this._renderer.getActiveMipmapLevel(),bf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Qg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Kg(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(wf,Tf,Af),this._renderer.xr.enabled=bf,e.scissorTest=!1,Dc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===dr||e.mapping===Br?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),wf=this._renderer.getRenderTarget(),Tf=this._renderer.getActiveCubeFace(),Af=this._renderer.getActiveMipmapLevel(),bf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:qt,minFilter:qt,generateMipmaps:!1,type:Ia,format:jn,colorSpace:Ui,depthBuffer:!1},r=Jg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Jg(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=qw(s)),this._blurMaterial=Yw(s,e,t)}return r}_compileMaterial(e){const t=new an(this._lodPlanes[0],e);this._renderer.compile(t,Ef)}_sceneToCubeUV(e,t,n,r){const c=new $t(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],f=this._renderer,p=f.autoClear,m=f.toneMapping;f.getClearColor(Zg),f.toneMapping=Li,f.autoClear=!1;const g=new Vr({name:"PMREM.Background",side:fn,depthWrite:!1,depthTest:!1}),x=new an(new Ps,g);let M=!1;const y=e.background;y?y.isColor&&(g.color.copy(y),e.background=null,M=!0):(g.color.copy(Zg),M=!0);for(let _=0;_<6;_++){const w=_%3;w===0?(c.up.set(0,u[_],0),c.lookAt(h[_],0,0)):w===1?(c.up.set(0,0,u[_]),c.lookAt(0,h[_],0)):(c.up.set(0,u[_],0),c.lookAt(0,0,h[_]));const E=this._cubeSize;Dc(r,w*E,_>2?E:0,E,E),f.setRenderTarget(r),M&&f.render(x,c),f.render(e,c)}x.geometry.dispose(),x.material.dispose(),f.toneMapping=m,f.autoClear=p,e.background=y}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===dr||e.mapping===Br;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=Qg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Kg());const s=r?this._cubemapMaterial:this._equirectMaterial,o=new an(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;Dc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(o,Ef)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const s=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=jg[(r-1)%jg.length];this._blur(e,r-1,r,s,o)}t.autoClear=n}_blur(e,t,n,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,r,"latitudinal",s),this._halfBlur(o,e,n,n,r,"longitudinal",s)}_halfBlur(e,t,n,r,s,o,c){const u=this._renderer,h=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,p=new an(this._lodPlanes[r],h),m=h.uniforms,g=this._sizeLods[n]-1,x=isFinite(s)?Math.PI/(2*g):2*Math.PI/(2*ps-1),M=s/x,y=isFinite(s)?1+Math.floor(f*M):ps;y>ps&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${ps}`);const _=[];let w=0;for(let I=0;I<ps;++I){const B=I/M,C=Math.exp(-B*B/2);_.push(C),I===0?w+=C:I<y&&(w+=2*C)}for(let I=0;I<_.length;I++)_[I]=_[I]/w;m.envMap.value=e.texture,m.samples.value=y,m.weights.value=_,m.latitudinal.value=o==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:E}=this;m.dTheta.value=x,m.mipInt.value=E-n;const A=this._sizeLods[r],N=3*A*(r>E-Aa?r-E+Aa:0),P=4*(this._cubeSize-A);Dc(t,N,P,3*A,2*A),u.setRenderTarget(t),u.render(p,Ef)}}function qw(i){const e=[],t=[],n=[];let r=i;const s=i-Aa+1+Yg.length;for(let o=0;o<s;o++){const c=Math.pow(2,r);t.push(c);let u=1/c;o>i-Aa?u=Yg[o-i+Aa-1]:o===0&&(u=0),n.push(u);const h=1/(c-2),f=-h,p=1+h,m=[f,f,p,f,p,p,f,f,p,p,f,p],g=6,x=6,M=3,y=2,_=1,w=new Float32Array(M*x*g),E=new Float32Array(y*x*g),A=new Float32Array(_*x*g);for(let P=0;P<g;P++){const I=P%3*2/3-1,B=P>2?0:-1,C=[I,B,0,I+2/3,B,0,I+2/3,B+1,0,I,B,0,I+2/3,B+1,0,I,B+1,0];w.set(C,M*x*P),E.set(m,y*x*P);const b=[P,P,P,P,P,P];A.set(b,_*x*P)}const N=new ut;N.setAttribute("position",new St(w,M)),N.setAttribute("uv",new St(E,y)),N.setAttribute("faceIndex",new St(A,_)),e.push(N),r>Aa&&r--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Jg(i,e,t){const n=new tn(i,e,t);return n.texture.mapping=Ba,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Dc(i,e,t,n,r){i.viewport.set(e,t,n,r),i.scissor.set(e,t,n,r)}function Yw(i,e,t){const n=new Float32Array(ps),r=new D(0,1,0);return new nn({name:"SphericalGaussianBlur",defines:{n:ps,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:vp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:pn,depthTest:!1,depthWrite:!1})}function Kg(){return new nn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:vp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:pn,depthTest:!1,depthWrite:!1})}function Qg(){return new nn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:vp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:pn,depthTest:!1,depthWrite:!1})}function vp(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Zw(i){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===No||u===Fo,f=u===dr||u===Br;if(h||f){let p=e.get(c);const m=p!==void 0?p.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==m)return t===null&&(t=new kd(i)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),p.texture;if(p!==void 0)return p.texture;{const g=c.image;return h&&g&&g.height>0||f&&g&&r(g)?(t===null&&(t=new kd(i)),p=h?t.fromEquirectangular(c):t.fromCubemap(c),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),c.addEventListener("dispose",s),p.texture):null}}}return c}function r(c){let u=0;const h=6;for(let f=0;f<h;f++)c[f]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function jw(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let r;switch(n){case"WEBGL_depth_texture":r=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=i.getExtension(n)}return e[n]=r,r}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const r=t(n);return r===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),r}}}function Jw(i,e,t,n){const r={},s=new WeakMap;function o(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const x in m.attributes)e.remove(m.attributes[x]);for(const x in m.morphAttributes){const M=m.morphAttributes[x];for(let y=0,_=M.length;y<_;y++)e.remove(M[y])}m.removeEventListener("dispose",o),delete r[m.id];const g=s.get(m);g&&(e.remove(g),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return r[m.id]===!0||(m.addEventListener("dispose",o),r[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const x in m)e.update(m[x],i.ARRAY_BUFFER);const g=p.morphAttributes;for(const x in g){const M=g[x];for(let y=0,_=M.length;y<_;y++)e.update(M[y],i.ARRAY_BUFFER)}}function h(p){const m=[],g=p.index,x=p.attributes.position;let M=0;if(g!==null){const w=g.array;M=g.version;for(let E=0,A=w.length;E<A;E+=3){const N=w[E+0],P=w[E+1],I=w[E+2];m.push(N,P,P,I,I,N)}}else if(x!==void 0){const w=x.array;M=x.version;for(let E=0,A=w.length/3-1;E<A;E+=3){const N=E+0,P=E+1,I=E+2;m.push(N,P,P,I,I,N)}}else return;const y=new(z_(m)?gp:mp)(m,1);y.version=M;const _=s.get(p);_&&e.remove(_),s.set(p,y)}function f(p){const m=s.get(p);if(m){const g=p.index;g!==null&&m.version<g.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:f}}function Kw(i,e,t){let n;function r(p){n=p}let s,o;function c(p){s=p.type,o=p.bytesPerElement}function u(p,m){i.drawElements(n,m,s,p*o),t.update(m,n,1)}function h(p,m,g){g!==0&&(i.drawElementsInstanced(n,m,s,p*o,g),t.update(m,n,g))}function f(p,m,g){if(g===0)return;const x=e.get("WEBGL_multi_draw");if(x===null)for(let M=0;M<g;M++)this.render(p[M]/o,m[M]);else{x.multiDrawElementsWEBGL(n,m,0,s,p,0,g);let M=0;for(let y=0;y<g;y++)M+=m[y];t.update(M,n,1)}}this.setMode=r,this.setIndex=c,this.render=u,this.renderInstances=h,this.renderMultiDraw=f}function Qw(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,c){switch(t.calls++,o){case i.TRIANGLES:t.triangles+=c*(s/3);break;case i.LINES:t.lines+=c*(s/2);break;case i.LINE_STRIP:t.lines+=c*(s-1);break;case i.LINE_LOOP:t.lines+=c*s;break;case i.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:n}}function $w(i,e,t){const n=new WeakMap,r=new It;function s(o,c,u){const h=o.morphTargetInfluences,f=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=f!==void 0?f.length:0;let m=n.get(c);if(m===void 0||m.count!==p){let C=function(){I.dispose(),n.delete(c),c.removeEventListener("dispose",C)};m!==void 0&&m.texture.dispose();const g=c.morphAttributes.position!==void 0,x=c.morphAttributes.normal!==void 0,M=c.morphAttributes.color!==void 0,y=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],w=c.morphAttributes.color||[];let E=0;g===!0&&(E=1),x===!0&&(E=2),M===!0&&(E=3);let A=c.attributes.position.count*E,N=1;A>e.maxTextureSize&&(N=Math.ceil(A/e.maxTextureSize),A=e.maxTextureSize);const P=new Float32Array(A*N*4*p),I=new Tu(P,A,N,p);I.type=hi,I.needsUpdate=!0;const B=E*4;for(let b=0;b<p;b++){const F=y[b],W=_[b],k=w[b],j=A*N*4*b;for(let K=0;K<F.count;K++){const le=K*B;g===!0&&(r.fromBufferAttribute(F,K),P[j+le+0]=r.x,P[j+le+1]=r.y,P[j+le+2]=r.z,P[j+le+3]=0),x===!0&&(r.fromBufferAttribute(W,K),P[j+le+4]=r.x,P[j+le+5]=r.y,P[j+le+6]=r.z,P[j+le+7]=0),M===!0&&(r.fromBufferAttribute(k,K),P[j+le+8]=r.x,P[j+le+9]=r.y,P[j+le+10]=r.z,P[j+le+11]=k.itemSize===4?r.w:1)}}m={count:p,texture:I,size:new oe(A,N)},n.set(c,m),c.addEventListener("dispose",C)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)u.getUniforms().setValue(i,"morphTexture",o.morphTexture,t);else{let g=0;for(let M=0;M<h.length;M++)g+=h[M];const x=c.morphTargetsRelative?1:1-g;u.getUniforms().setValue(i,"morphTargetBaseInfluence",x),u.getUniforms().setValue(i,"morphTargetInfluences",h)}u.getUniforms().setValue(i,"morphTargetsTexture",m.texture,t),u.getUniforms().setValue(i,"morphTargetsTextureSize",m.size)}return{update:s}}function eT(i,e,t,n){let r=new WeakMap;function s(u){const h=n.render.frame,f=u.geometry,p=e.get(u,f);if(r.get(p)!==h&&(e.update(p),r.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),r.get(u)!==h&&(t.update(u.instanceMatrix,i.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,i.ARRAY_BUFFER),r.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;r.get(m)!==h&&(m.update(),r.set(m,h))}return p}function o(){r=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:o}}class Au extends Bt{constructor(e,t,n,r,s,o,c,u,h,f){if(f=f!==void 0?f:Ss,f!==Ss&&f!==Ts)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&f===Ss&&(n=zr),n===void 0&&f===Ts&&(n=Rs),super(null,r,s,o,c,u,f,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:en,this.minFilter=u!==void 0?u:en,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const J_=new Bt,K_=new Au(1,1);K_.compareFunction=fp;const Q_=new Tu,$_=new pp,ex=new sl,$g=[],ev=[],tv=new Float32Array(16),nv=new Float32Array(9),iv=new Float32Array(4);function Va(i,e,t){const n=i[0];if(n<=0||n>0)return i;const r=e*t;let s=$g[r];if(s===void 0&&(s=new Float32Array(r),$g[r]=s),e!==0){n.toArray(s,0);for(let o=1,c=0;o!==e;++o)c+=t,i[o].toArray(s,c)}return s}function mn(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function gn(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function bu(i,e){let t=ev[e];t===void 0&&(t=new Int32Array(e),ev[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function tT(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function nT(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(mn(t,e))return;i.uniform2fv(this.addr,e),gn(t,e)}}function iT(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(mn(t,e))return;i.uniform3fv(this.addr,e),gn(t,e)}}function rT(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(mn(t,e))return;i.uniform4fv(this.addr,e),gn(t,e)}}function sT(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(mn(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),gn(t,e)}else{if(mn(t,n))return;iv.set(n),i.uniformMatrix2fv(this.addr,!1,iv),gn(t,n)}}function aT(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(mn(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),gn(t,e)}else{if(mn(t,n))return;nv.set(n),i.uniformMatrix3fv(this.addr,!1,nv),gn(t,n)}}function oT(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(mn(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),gn(t,e)}else{if(mn(t,n))return;tv.set(n),i.uniformMatrix4fv(this.addr,!1,tv),gn(t,n)}}function lT(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function cT(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(mn(t,e))return;i.uniform2iv(this.addr,e),gn(t,e)}}function uT(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(mn(t,e))return;i.uniform3iv(this.addr,e),gn(t,e)}}function hT(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(mn(t,e))return;i.uniform4iv(this.addr,e),gn(t,e)}}function fT(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function dT(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(mn(t,e))return;i.uniform2uiv(this.addr,e),gn(t,e)}}function pT(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(mn(t,e))return;i.uniform3uiv(this.addr,e),gn(t,e)}}function mT(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(mn(t,e))return;i.uniform4uiv(this.addr,e),gn(t,e)}}function gT(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r);const s=this.type===i.SAMPLER_2D_SHADOW?K_:J_;t.setTexture2D(e||s,r)}function vT(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture3D(e||$_,r)}function _T(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTextureCube(e||ex,r)}function xT(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2DArray(e||Q_,r)}function yT(i){switch(i){case 5126:return tT;case 35664:return nT;case 35665:return iT;case 35666:return rT;case 35674:return sT;case 35675:return aT;case 35676:return oT;case 5124:case 35670:return lT;case 35667:case 35671:return cT;case 35668:case 35672:return uT;case 35669:case 35673:return hT;case 5125:return fT;case 36294:return dT;case 36295:return pT;case 36296:return mT;case 35678:case 36198:case 36298:case 36306:case 35682:return gT;case 35679:case 36299:case 36307:return vT;case 35680:case 36300:case 36308:case 36293:return _T;case 36289:case 36303:case 36311:case 36292:return xT}}function ST(i,e){i.uniform1fv(this.addr,e)}function MT(i,e){const t=Va(e,this.size,2);i.uniform2fv(this.addr,t)}function ET(i,e){const t=Va(e,this.size,3);i.uniform3fv(this.addr,t)}function wT(i,e){const t=Va(e,this.size,4);i.uniform4fv(this.addr,t)}function TT(i,e){const t=Va(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function AT(i,e){const t=Va(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function bT(i,e){const t=Va(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function CT(i,e){i.uniform1iv(this.addr,e)}function RT(i,e){i.uniform2iv(this.addr,e)}function PT(i,e){i.uniform3iv(this.addr,e)}function IT(i,e){i.uniform4iv(this.addr,e)}function LT(i,e){i.uniform1uiv(this.addr,e)}function UT(i,e){i.uniform2uiv(this.addr,e)}function DT(i,e){i.uniform3uiv(this.addr,e)}function NT(i,e){i.uniform4uiv(this.addr,e)}function FT(i,e,t){const n=this.cache,r=e.length,s=bu(t,r);mn(n,s)||(i.uniform1iv(this.addr,s),gn(n,s));for(let o=0;o!==r;++o)t.setTexture2D(e[o]||J_,s[o])}function OT(i,e,t){const n=this.cache,r=e.length,s=bu(t,r);mn(n,s)||(i.uniform1iv(this.addr,s),gn(n,s));for(let o=0;o!==r;++o)t.setTexture3D(e[o]||$_,s[o])}function BT(i,e,t){const n=this.cache,r=e.length,s=bu(t,r);mn(n,s)||(i.uniform1iv(this.addr,s),gn(n,s));for(let o=0;o!==r;++o)t.setTextureCube(e[o]||ex,s[o])}function zT(i,e,t){const n=this.cache,r=e.length,s=bu(t,r);mn(n,s)||(i.uniform1iv(this.addr,s),gn(n,s));for(let o=0;o!==r;++o)t.setTexture2DArray(e[o]||Q_,s[o])}function kT(i){switch(i){case 5126:return ST;case 35664:return MT;case 35665:return ET;case 35666:return wT;case 35674:return TT;case 35675:return AT;case 35676:return bT;case 5124:case 35670:return CT;case 35667:case 35671:return RT;case 35668:case 35672:return PT;case 35669:case 35673:return IT;case 5125:return LT;case 36294:return UT;case 36295:return DT;case 36296:return NT;case 35678:case 36198:case 36298:case 36306:case 35682:return FT;case 35679:case 36299:case 36307:return OT;case 35680:case 36300:case 36308:case 36293:return BT;case 36289:case 36303:case 36311:case 36292:return zT}}class HT{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=yT(t.type)}}class VT{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=kT(t.type)}}class GT{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const r=this.seq;for(let s=0,o=r.length;s!==o;++s){const c=r[s];c.setValue(e,t[c.id],n)}}}const Cf=/(\w+)(\])?(\[|\.)?/g;function rv(i,e){i.seq.push(e),i.map[e.id]=e}function WT(i,e,t){const n=i.name,r=n.length;for(Cf.lastIndex=0;;){const s=Cf.exec(n),o=Cf.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&o+2===r){rv(t,h===void 0?new HT(c,i,e):new VT(c,i,e));break}else{let p=t.map[c];p===void 0&&(p=new GT(c),rv(t,p)),t=p}}}class mu{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<n;++r){const s=e.getActiveUniform(t,r),o=e.getUniformLocation(t,s.name);WT(s,o,this)}}setValue(e,t,n,r){const s=this.map[t];s!==void 0&&s.setValue(e,n,r)}setOptional(e,t,n){const r=t[n];r!==void 0&&this.setValue(e,n,r)}static upload(e,t,n,r){for(let s=0,o=t.length;s!==o;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,r)}}static seqWithValue(e,t){const n=[];for(let r=0,s=e.length;r!==s;++r){const o=e[r];o.id in t&&n.push(o)}return n}}function sv(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}const XT=37297;let qT=0;function YT(i,e){const t=i.split(`
`),n=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=r;o<s;o++){const c=o+1;n.push(`${c===e?">":" "} ${c}: ${t[o]}`)}return n.join(`
`)}function ZT(i){const e=Ut.getPrimaries(Ut.workingColorSpace),t=Ut.getPrimaries(i);let n;switch(e===t?n="":e===Wo&&t===Go?n="LinearDisplayP3ToLinearSRGB":e===Go&&t===Wo&&(n="LinearSRGBToLinearDisplayP3"),i){case Ui:case rl:return[n,"LinearTransferOETF"];case yt:case wu:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",i),[n,"LinearTransferOETF"]}}function av(i,e,t){const n=i.getShaderParameter(e,i.COMPILE_STATUS),r=i.getShaderInfoLog(e).trim();if(n&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+YT(i.getShaderSource(e),o)}else return r}function jT(i,e){const t=ZT(e);return`vec4 ${i}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function JT(i,e){let t;switch(e){case h_:t="Linear";break;case f_:t="Reinhard";break;case d_:t="OptimizedCineon";break;case ep:t="ACESFilmic";break;case m_:t="AgX";break;case g_:t="Neutral";break;case p_:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function KT(i){return[i.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",i.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Co).join(`
`)}function QT(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function $T(i,e){const t={},n=i.getProgramParameter(e,i.ACTIVE_ATTRIBUTES);for(let r=0;r<n;r++){const s=i.getActiveAttrib(e,r),o=s.name;let c=1;s.type===i.FLOAT_MAT2&&(c=2),s.type===i.FLOAT_MAT3&&(c=3),s.type===i.FLOAT_MAT4&&(c=4),t[o]={type:s.type,location:i.getAttribLocation(e,o),locationSize:c}}return t}function Co(i){return i!==""}function ov(i,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function lv(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const eA=/^[ \t]*#include +<([\w\d./]+)>/gm;function Hd(i){return i.replace(eA,nA)}const tA=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function nA(i,e){let t=ht[e];if(t===void 0){const n=tA.get(e);if(n!==void 0)t=ht[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Hd(t)}const iA=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function cv(i){return i.replace(iA,rA)}function rA(i,e,t,n){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function uv(i){let e=`precision ${i.precision} float;
	precision ${i.precision} int;
	precision ${i.precision} sampler2D;
	precision ${i.precision} samplerCube;
	precision ${i.precision} sampler3D;
	precision ${i.precision} sampler2DArray;
	precision ${i.precision} sampler2DShadow;
	precision ${i.precision} samplerCubeShadow;
	precision ${i.precision} sampler2DArrayShadow;
	precision ${i.precision} isampler2D;
	precision ${i.precision} isampler3D;
	precision ${i.precision} isamplerCube;
	precision ${i.precision} isampler2DArray;
	precision ${i.precision} usampler2D;
	precision ${i.precision} usampler3D;
	precision ${i.precision} usamplerCube;
	precision ${i.precision} usampler2DArray;
	`;return i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function sA(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===Su?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===Ro?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===Ri&&(e="SHADOWMAP_TYPE_VSM"),e}function aA(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case dr:case Br:e="ENVMAP_TYPE_CUBE";break;case Ba:e="ENVMAP_TYPE_CUBE_UV";break}return e}function oA(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case Br:e="ENVMAP_MODE_REFRACTION";break}return e}function lA(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case il:e="ENVMAP_BLENDING_MULTIPLY";break;case c_:e="ENVMAP_BLENDING_MIX";break;case u_:e="ENVMAP_BLENDING_ADD";break}return e}function cA(i){const e=i.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function uA(i,e,t,n){const r=i.getContext(),s=t.defines;let o=t.vertexShader,c=t.fragmentShader;const u=sA(t),h=aA(t),f=oA(t),p=lA(t),m=cA(t),g=KT(t),x=QT(s),M=r.createProgram();let y,_,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(y=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x].filter(Co).join(`
`),y.length>0&&(y+=`
`),_=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x].filter(Co).join(`
`),_.length>0&&(_+=`
`)):(y=[uv(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Co).join(`
`),_=[uv(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,x,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Li?"#define TONE_MAPPING":"",t.toneMapping!==Li?ht.tonemapping_pars_fragment:"",t.toneMapping!==Li?JT("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ht.colorspace_pars_fragment,jT("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Co).join(`
`)),o=Hd(o),o=ov(o,t),o=lv(o,t),c=Hd(c),c=ov(c,t),c=lv(c,t),o=cv(o),c=cv(c),t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,y=[g,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,_=["#define varying in",t.glslVersion===zd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===zd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const E=w+y+o,A=w+_+c,N=sv(r,r.VERTEX_SHADER,E),P=sv(r,r.FRAGMENT_SHADER,A);r.attachShader(M,N),r.attachShader(M,P),t.index0AttributeName!==void 0?r.bindAttribLocation(M,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(M,0,"position"),r.linkProgram(M);function I(F){if(i.debug.checkShaderErrors){const W=r.getProgramInfoLog(M).trim(),k=r.getShaderInfoLog(N).trim(),j=r.getShaderInfoLog(P).trim();let K=!0,le=!0;if(r.getProgramParameter(M,r.LINK_STATUS)===!1)if(K=!1,typeof i.debug.onShaderError=="function")i.debug.onShaderError(r,M,N,P);else{const ge=av(r,N,"vertex"),H=av(r,P,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(M,r.VALIDATE_STATUS)+`

Material Name: `+F.name+`
Material Type: `+F.type+`

Program Info Log: `+W+`
`+ge+`
`+H)}else W!==""?console.warn("THREE.WebGLProgram: Program Info Log:",W):(k===""||j==="")&&(le=!1);le&&(F.diagnostics={runnable:K,programLog:W,vertexShader:{log:k,prefix:y},fragmentShader:{log:j,prefix:_}})}r.deleteShader(N),r.deleteShader(P),B=new mu(r,M),C=$T(r,M)}let B;this.getUniforms=function(){return B===void 0&&I(this),B};let C;this.getAttributes=function(){return C===void 0&&I(this),C};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=r.getProgramParameter(M,XT)),b},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(M),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=qT++,this.cacheKey=e,this.usedTimes=1,this.program=M,this.vertexShader=N,this.fragmentShader=P,this}let hA=0;class fA{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new dA(e),t.set(e,n)),n}}class dA{constructor(e){this.id=hA++,this.code=e,this.usedTimes=0}}function pA(i,e,t,n,r,s,o){const c=new Es,u=new fA,h=new Set,f=[],p=r.logarithmicDepthBuffer,m=r.vertexTextures;let g=r.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(C){return h.add(C),C===0?"uv":`uv${C}`}function y(C,b,F,W,k){const j=W.fog,K=k.geometry,le=C.isMeshStandardMaterial?W.environment:null,ge=(C.isMeshStandardMaterial?t:e).get(C.envMap||le),H=ge&&ge.mapping===Ba?ge.image.height:null,Q=x[C.type];C.precision!==null&&(g=r.getMaxPrecision(C.precision),g!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",g,"instead."));const Z=K.morphAttributes.position||K.morphAttributes.normal||K.morphAttributes.color,fe=Z!==void 0?Z.length:0;let we=0;K.morphAttributes.position!==void 0&&(we=1),K.morphAttributes.normal!==void 0&&(we=2),K.morphAttributes.color!==void 0&&(we=3);let Le,te,me,Ae;if(Q){const _n=Pi[Q];Le=_n.vertexShader,te=_n.fragmentShader}else Le=C.vertexShader,te=C.fragmentShader,u.update(C),me=u.getVertexShaderID(C),Ae=u.getFragmentShaderID(C);const ye=i.getRenderTarget(),Ye=k.isInstancedMesh===!0,tt=k.isBatchedMesh===!0,Fe=!!C.map,V=!!C.matcap,ce=!!ge,re=!!C.aoMap,_e=!!C.lightMap,ve=!!C.bumpMap,xe=!!C.normalMap,U=!!C.displacementMap,R=!!C.emissiveMap,Y=!!C.metalnessMap,se=!!C.roughnessMap,ue=C.anisotropy>0,de=C.clearcoat>0,Xe=C.iridescence>0,pe=C.sheen>0,ke=C.transmission>0,je=ue&&!!C.anisotropyMap,Se=de&&!!C.clearcoatMap,Ue=de&&!!C.clearcoatNormalMap,it=de&&!!C.clearcoatRoughnessMap,Oe=Xe&&!!C.iridescenceMap,Be=Xe&&!!C.iridescenceThicknessMap,mt=pe&&!!C.sheenColorMap,gt=pe&&!!C.sheenRoughnessMap,Rt=!!C.specularMap,Mt=!!C.specularColorMap,zt=!!C.specularIntensityMap,Ve=ke&&!!C.transmissionMap,z=ke&&!!C.thicknessMap,Te=!!C.gradientMap,Ee=!!C.alphaMap,qe=C.alphaTest>0,Je=!!C.alphaHash,Dt=!!C.extensions;let Ft=Li;C.toneMapped&&(ye===null||ye.isXRRenderTarget===!0)&&(Ft=i.toneMapping);const kt={shaderID:Q,shaderType:C.type,shaderName:C.name,vertexShader:Le,fragmentShader:te,defines:C.defines,customVertexShaderID:me,customFragmentShaderID:Ae,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:g,batching:tt,instancing:Ye,instancingColor:Ye&&k.instanceColor!==null,instancingMorph:Ye&&k.morphTexture!==null,supportsVertexTextures:m,outputColorSpace:ye===null?i.outputColorSpace:ye.isXRRenderTarget===!0?ye.texture.colorSpace:Ui,alphaToCoverage:!!C.alphaToCoverage,map:Fe,matcap:V,envMap:ce,envMapMode:ce&&ge.mapping,envMapCubeUVHeight:H,aoMap:re,lightMap:_e,bumpMap:ve,normalMap:xe,displacementMap:m&&U,emissiveMap:R,normalMapObjectSpace:xe&&C.normalMapType===I_,normalMapTangentSpace:xe&&C.normalMapType===Hr,metalnessMap:Y,roughnessMap:se,anisotropy:ue,anisotropyMap:je,clearcoat:de,clearcoatMap:Se,clearcoatNormalMap:Ue,clearcoatRoughnessMap:it,iridescence:Xe,iridescenceMap:Oe,iridescenceThicknessMap:Be,sheen:pe,sheenColorMap:mt,sheenRoughnessMap:gt,specularMap:Rt,specularColorMap:Mt,specularIntensityMap:zt,transmission:ke,transmissionMap:Ve,thicknessMap:z,gradientMap:Te,opaque:C.transparent===!1&&C.blending===ys&&C.alphaToCoverage===!1,alphaMap:Ee,alphaTest:qe,alphaHash:Je,combine:C.combine,mapUv:Fe&&M(C.map.channel),aoMapUv:re&&M(C.aoMap.channel),lightMapUv:_e&&M(C.lightMap.channel),bumpMapUv:ve&&M(C.bumpMap.channel),normalMapUv:xe&&M(C.normalMap.channel),displacementMapUv:U&&M(C.displacementMap.channel),emissiveMapUv:R&&M(C.emissiveMap.channel),metalnessMapUv:Y&&M(C.metalnessMap.channel),roughnessMapUv:se&&M(C.roughnessMap.channel),anisotropyMapUv:je&&M(C.anisotropyMap.channel),clearcoatMapUv:Se&&M(C.clearcoatMap.channel),clearcoatNormalMapUv:Ue&&M(C.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:it&&M(C.clearcoatRoughnessMap.channel),iridescenceMapUv:Oe&&M(C.iridescenceMap.channel),iridescenceThicknessMapUv:Be&&M(C.iridescenceThicknessMap.channel),sheenColorMapUv:mt&&M(C.sheenColorMap.channel),sheenRoughnessMapUv:gt&&M(C.sheenRoughnessMap.channel),specularMapUv:Rt&&M(C.specularMap.channel),specularColorMapUv:Mt&&M(C.specularColorMap.channel),specularIntensityMapUv:zt&&M(C.specularIntensityMap.channel),transmissionMapUv:Ve&&M(C.transmissionMap.channel),thicknessMapUv:z&&M(C.thicknessMap.channel),alphaMapUv:Ee&&M(C.alphaMap.channel),vertexTangents:!!K.attributes.tangent&&(xe||ue),vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!K.attributes.color&&K.attributes.color.itemSize===4,pointsUvs:k.isPoints===!0&&!!K.attributes.uv&&(Fe||Ee),fog:!!j,useFog:C.fog===!0,fogExp2:!!j&&j.isFogExp2,flatShading:C.flatShading===!0,sizeAttenuation:C.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:k.isSkinnedMesh===!0,morphTargets:K.morphAttributes.position!==void 0,morphNormals:K.morphAttributes.normal!==void 0,morphColors:K.morphAttributes.color!==void 0,morphTargetsCount:fe,morphTextureStride:we,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:C.dithering,shadowMapEnabled:i.shadowMap.enabled&&F.length>0,shadowMapType:i.shadowMap.type,toneMapping:Ft,useLegacyLights:i._useLegacyLights,decodeVideoTexture:Fe&&C.map.isVideoTexture===!0&&Ut.getTransfer(C.map.colorSpace)===Ht,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===kn,flipSided:C.side===fn,useDepthPacking:C.depthPacking>=0,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionClipCullDistance:Dt&&C.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:Dt&&C.extensions.multiDraw===!0&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:C.customProgramCacheKey()};return kt.vertexUv1s=h.has(1),kt.vertexUv2s=h.has(2),kt.vertexUv3s=h.has(3),h.clear(),kt}function _(C){const b=[];if(C.shaderID?b.push(C.shaderID):(b.push(C.customVertexShaderID),b.push(C.customFragmentShaderID)),C.defines!==void 0)for(const F in C.defines)b.push(F),b.push(C.defines[F]);return C.isRawShaderMaterial===!1&&(w(b,C),E(b,C),b.push(i.outputColorSpace)),b.push(C.customProgramCacheKey),b.join()}function w(C,b){C.push(b.precision),C.push(b.outputColorSpace),C.push(b.envMapMode),C.push(b.envMapCubeUVHeight),C.push(b.mapUv),C.push(b.alphaMapUv),C.push(b.lightMapUv),C.push(b.aoMapUv),C.push(b.bumpMapUv),C.push(b.normalMapUv),C.push(b.displacementMapUv),C.push(b.emissiveMapUv),C.push(b.metalnessMapUv),C.push(b.roughnessMapUv),C.push(b.anisotropyMapUv),C.push(b.clearcoatMapUv),C.push(b.clearcoatNormalMapUv),C.push(b.clearcoatRoughnessMapUv),C.push(b.iridescenceMapUv),C.push(b.iridescenceThicknessMapUv),C.push(b.sheenColorMapUv),C.push(b.sheenRoughnessMapUv),C.push(b.specularMapUv),C.push(b.specularColorMapUv),C.push(b.specularIntensityMapUv),C.push(b.transmissionMapUv),C.push(b.thicknessMapUv),C.push(b.combine),C.push(b.fogExp2),C.push(b.sizeAttenuation),C.push(b.morphTargetsCount),C.push(b.morphAttributeCount),C.push(b.numDirLights),C.push(b.numPointLights),C.push(b.numSpotLights),C.push(b.numSpotLightMaps),C.push(b.numHemiLights),C.push(b.numRectAreaLights),C.push(b.numDirLightShadows),C.push(b.numPointLightShadows),C.push(b.numSpotLightShadows),C.push(b.numSpotLightShadowsWithMaps),C.push(b.numLightProbes),C.push(b.shadowMapType),C.push(b.toneMapping),C.push(b.numClippingPlanes),C.push(b.numClipIntersection),C.push(b.depthPacking)}function E(C,b){c.disableAll(),b.supportsVertexTextures&&c.enable(0),b.instancing&&c.enable(1),b.instancingColor&&c.enable(2),b.instancingMorph&&c.enable(3),b.matcap&&c.enable(4),b.envMap&&c.enable(5),b.normalMapObjectSpace&&c.enable(6),b.normalMapTangentSpace&&c.enable(7),b.clearcoat&&c.enable(8),b.iridescence&&c.enable(9),b.alphaTest&&c.enable(10),b.vertexColors&&c.enable(11),b.vertexAlphas&&c.enable(12),b.vertexUv1s&&c.enable(13),b.vertexUv2s&&c.enable(14),b.vertexUv3s&&c.enable(15),b.vertexTangents&&c.enable(16),b.anisotropy&&c.enable(17),b.alphaHash&&c.enable(18),b.batching&&c.enable(19),C.push(c.mask),c.disableAll(),b.fog&&c.enable(0),b.useFog&&c.enable(1),b.flatShading&&c.enable(2),b.logarithmicDepthBuffer&&c.enable(3),b.skinning&&c.enable(4),b.morphTargets&&c.enable(5),b.morphNormals&&c.enable(6),b.morphColors&&c.enable(7),b.premultipliedAlpha&&c.enable(8),b.shadowMapEnabled&&c.enable(9),b.useLegacyLights&&c.enable(10),b.doubleSided&&c.enable(11),b.flipSided&&c.enable(12),b.useDepthPacking&&c.enable(13),b.dithering&&c.enable(14),b.transmission&&c.enable(15),b.sheen&&c.enable(16),b.opaque&&c.enable(17),b.pointsUvs&&c.enable(18),b.decodeVideoTexture&&c.enable(19),b.alphaToCoverage&&c.enable(20),C.push(c.mask)}function A(C){const b=x[C.type];let F;if(b){const W=Pi[b];F=q_.clone(W.uniforms)}else F=C.uniforms;return F}function N(C,b){let F;for(let W=0,k=f.length;W<k;W++){const j=f[W];if(j.cacheKey===b){F=j,++F.usedTimes;break}}return F===void 0&&(F=new uA(i,b,C,s),f.push(F)),F}function P(C){if(--C.usedTimes===0){const b=f.indexOf(C);f[b]=f[f.length-1],f.pop(),C.destroy()}}function I(C){u.remove(C)}function B(){u.dispose()}return{getParameters:y,getProgramCacheKey:_,getUniforms:A,acquireProgram:N,releaseProgram:P,releaseShaderCache:I,programs:f,dispose:B}}function mA(){let i=new WeakMap;function e(s){let o=i.get(s);return o===void 0&&(o={},i.set(s,o)),o}function t(s){i.delete(s)}function n(s,o,c){i.get(s)[o]=c}function r(){i=new WeakMap}return{get:e,remove:t,update:n,dispose:r}}function gA(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function hv(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function fv(){const i=[];let e=0;const t=[],n=[],r=[];function s(){e=0,t.length=0,n.length=0,r.length=0}function o(p,m,g,x,M,y){let _=i[e];return _===void 0?(_={id:p.id,object:p,geometry:m,material:g,groupOrder:x,renderOrder:p.renderOrder,z:M,group:y},i[e]=_):(_.id=p.id,_.object=p,_.geometry=m,_.material=g,_.groupOrder=x,_.renderOrder=p.renderOrder,_.z=M,_.group=y),e++,_}function c(p,m,g,x,M,y){const _=o(p,m,g,x,M,y);g.transmission>0?n.push(_):g.transparent===!0?r.push(_):t.push(_)}function u(p,m,g,x,M,y){const _=o(p,m,g,x,M,y);g.transmission>0?n.unshift(_):g.transparent===!0?r.unshift(_):t.unshift(_)}function h(p,m){t.length>1&&t.sort(p||gA),n.length>1&&n.sort(m||hv),r.length>1&&r.sort(m||hv)}function f(){for(let p=e,m=i.length;p<m;p++){const g=i[p];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:t,transmissive:n,transparent:r,init:s,push:c,unshift:u,finish:f,sort:h}}function vA(){let i=new WeakMap;function e(n,r){const s=i.get(n);let o;return s===void 0?(o=new fv,i.set(n,[o])):r>=s.length?(o=new fv,s.push(o)):o=s[r],o}function t(){i=new WeakMap}return{get:e,dispose:t}}function _A(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new Pe};break;case"SpotLight":t={position:new D,direction:new D,color:new Pe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new Pe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new Pe,groundColor:new Pe};break;case"RectAreaLight":t={color:new Pe,position:new D,halfWidth:new D,halfHeight:new D};break}return i[e.id]=t,t}}}function xA(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new oe};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new oe};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new oe,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let yA=0;function SA(i,e){return(e.castShadow?2:0)-(i.castShadow?2:0)+(e.map?1:0)-(i.map?1:0)}function MA(i){const e=new _A,t=xA(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let h=0;h<9;h++)n.probe.push(new D);const r=new D,s=new $e,o=new $e;function c(h,f){let p=0,m=0,g=0;for(let F=0;F<9;F++)n.probe[F].set(0,0,0);let x=0,M=0,y=0,_=0,w=0,E=0,A=0,N=0,P=0,I=0,B=0;h.sort(SA);const C=f===!0?Math.PI:1;for(let F=0,W=h.length;F<W;F++){const k=h[F],j=k.color,K=k.intensity,le=k.distance,ge=k.shadow&&k.shadow.map?k.shadow.map.texture:null;if(k.isAmbientLight)p+=j.r*K*C,m+=j.g*K*C,g+=j.b*K*C;else if(k.isLightProbe){for(let H=0;H<9;H++)n.probe[H].addScaledVector(k.sh.coefficients[H],K);B++}else if(k.isDirectionalLight){const H=e.get(k);if(H.color.copy(k.color).multiplyScalar(k.intensity*C),k.castShadow){const Q=k.shadow,Z=t.get(k);Z.shadowBias=Q.bias,Z.shadowNormalBias=Q.normalBias,Z.shadowRadius=Q.radius,Z.shadowMapSize=Q.mapSize,n.directionalShadow[x]=Z,n.directionalShadowMap[x]=ge,n.directionalShadowMatrix[x]=k.shadow.matrix,E++}n.directional[x]=H,x++}else if(k.isSpotLight){const H=e.get(k);H.position.setFromMatrixPosition(k.matrixWorld),H.color.copy(j).multiplyScalar(K*C),H.distance=le,H.coneCos=Math.cos(k.angle),H.penumbraCos=Math.cos(k.angle*(1-k.penumbra)),H.decay=k.decay,n.spot[y]=H;const Q=k.shadow;if(k.map&&(n.spotLightMap[P]=k.map,P++,Q.updateMatrices(k),k.castShadow&&I++),n.spotLightMatrix[y]=Q.matrix,k.castShadow){const Z=t.get(k);Z.shadowBias=Q.bias,Z.shadowNormalBias=Q.normalBias,Z.shadowRadius=Q.radius,Z.shadowMapSize=Q.mapSize,n.spotShadow[y]=Z,n.spotShadowMap[y]=ge,N++}y++}else if(k.isRectAreaLight){const H=e.get(k);H.color.copy(j).multiplyScalar(K),H.halfWidth.set(k.width*.5,0,0),H.halfHeight.set(0,k.height*.5,0),n.rectArea[_]=H,_++}else if(k.isPointLight){const H=e.get(k);if(H.color.copy(k.color).multiplyScalar(k.intensity*C),H.distance=k.distance,H.decay=k.decay,k.castShadow){const Q=k.shadow,Z=t.get(k);Z.shadowBias=Q.bias,Z.shadowNormalBias=Q.normalBias,Z.shadowRadius=Q.radius,Z.shadowMapSize=Q.mapSize,Z.shadowCameraNear=Q.camera.near,Z.shadowCameraFar=Q.camera.far,n.pointShadow[M]=Z,n.pointShadowMap[M]=ge,n.pointShadowMatrix[M]=k.shadow.matrix,A++}n.point[M]=H,M++}else if(k.isHemisphereLight){const H=e.get(k);H.skyColor.copy(k.color).multiplyScalar(K*C),H.groundColor.copy(k.groundColor).multiplyScalar(K*C),n.hemi[w]=H,w++}}_>0&&(i.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=be.LTC_FLOAT_1,n.rectAreaLTC2=be.LTC_FLOAT_2):(n.rectAreaLTC1=be.LTC_HALF_1,n.rectAreaLTC2=be.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=m,n.ambient[2]=g;const b=n.hash;(b.directionalLength!==x||b.pointLength!==M||b.spotLength!==y||b.rectAreaLength!==_||b.hemiLength!==w||b.numDirectionalShadows!==E||b.numPointShadows!==A||b.numSpotShadows!==N||b.numSpotMaps!==P||b.numLightProbes!==B)&&(n.directional.length=x,n.spot.length=y,n.rectArea.length=_,n.point.length=M,n.hemi.length=w,n.directionalShadow.length=E,n.directionalShadowMap.length=E,n.pointShadow.length=A,n.pointShadowMap.length=A,n.spotShadow.length=N,n.spotShadowMap.length=N,n.directionalShadowMatrix.length=E,n.pointShadowMatrix.length=A,n.spotLightMatrix.length=N+P-I,n.spotLightMap.length=P,n.numSpotLightShadowsWithMaps=I,n.numLightProbes=B,b.directionalLength=x,b.pointLength=M,b.spotLength=y,b.rectAreaLength=_,b.hemiLength=w,b.numDirectionalShadows=E,b.numPointShadows=A,b.numSpotShadows=N,b.numSpotMaps=P,b.numLightProbes=B,n.version=yA++)}function u(h,f){let p=0,m=0,g=0,x=0,M=0;const y=f.matrixWorldInverse;for(let _=0,w=h.length;_<w;_++){const E=h[_];if(E.isDirectionalLight){const A=n.directional[p];A.direction.setFromMatrixPosition(E.matrixWorld),r.setFromMatrixPosition(E.target.matrixWorld),A.direction.sub(r),A.direction.transformDirection(y),p++}else if(E.isSpotLight){const A=n.spot[g];A.position.setFromMatrixPosition(E.matrixWorld),A.position.applyMatrix4(y),A.direction.setFromMatrixPosition(E.matrixWorld),r.setFromMatrixPosition(E.target.matrixWorld),A.direction.sub(r),A.direction.transformDirection(y),g++}else if(E.isRectAreaLight){const A=n.rectArea[x];A.position.setFromMatrixPosition(E.matrixWorld),A.position.applyMatrix4(y),o.identity(),s.copy(E.matrixWorld),s.premultiply(y),o.extractRotation(s),A.halfWidth.set(E.width*.5,0,0),A.halfHeight.set(0,E.height*.5,0),A.halfWidth.applyMatrix4(o),A.halfHeight.applyMatrix4(o),x++}else if(E.isPointLight){const A=n.point[m];A.position.setFromMatrixPosition(E.matrixWorld),A.position.applyMatrix4(y),m++}else if(E.isHemisphereLight){const A=n.hemi[M];A.direction.setFromMatrixPosition(E.matrixWorld),A.direction.transformDirection(y),M++}}}return{setup:c,setupView:u,state:n}}function dv(i){const e=new MA(i),t=[],n=[];function r(){t.length=0,n.length=0}function s(f){t.push(f)}function o(f){n.push(f)}function c(f){e.setup(t,f)}function u(f){e.setupView(t,f)}return{init:r,state:{lightsArray:t,shadowsArray:n,lights:e,transmissionRenderTarget:null},setupLights:c,setupLightsView:u,pushLight:s,pushShadow:o}}function EA(i){let e=new WeakMap;function t(r,s=0){const o=e.get(r);let c;return o===void 0?(c=new dv(i),e.set(r,[c])):s>=o.length?(c=new dv(i),o.push(c)):c=o[s],c}function n(){e=new WeakMap}return{get:t,dispose:n}}class _p extends vn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Ji,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class xp extends vn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const wA=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,TA=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function AA(i,e,t){let n=new al;const r=new oe,s=new oe,o=new It,c=new _p({depthPacking:P_}),u=new xp,h={},f=t.maxTextureSize,p={[ji]:fn,[fn]:ji,[kn]:kn},m=new nn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new oe},radius:{value:4}},vertexShader:wA,fragmentShader:TA}),g=m.clone();g.defines.HORIZONTAL_PASS=1;const x=new ut;x.setAttribute("position",new St(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new an(x,m),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Su;let _=this.type;this.render=function(P,I,B){if(y.enabled===!1||y.autoUpdate===!1&&y.needsUpdate===!1||P.length===0)return;const C=i.getRenderTarget(),b=i.getActiveCubeFace(),F=i.getActiveMipmapLevel(),W=i.state;W.setBlending(pn),W.buffers.color.setClear(1,1,1,1),W.buffers.depth.setTest(!0),W.setScissorTest(!1);const k=_!==Ri&&this.type===Ri,j=_===Ri&&this.type!==Ri;for(let K=0,le=P.length;K<le;K++){const ge=P[K],H=ge.shadow;if(H===void 0){console.warn("THREE.WebGLShadowMap:",ge,"has no shadow.");continue}if(H.autoUpdate===!1&&H.needsUpdate===!1)continue;r.copy(H.mapSize);const Q=H.getFrameExtents();if(r.multiply(Q),s.copy(H.mapSize),(r.x>f||r.y>f)&&(r.x>f&&(s.x=Math.floor(f/Q.x),r.x=s.x*Q.x,H.mapSize.x=s.x),r.y>f&&(s.y=Math.floor(f/Q.y),r.y=s.y*Q.y,H.mapSize.y=s.y)),H.map===null||k===!0||j===!0){const fe=this.type!==Ri?{minFilter:en,magFilter:en}:{};H.map!==null&&H.map.dispose(),H.map=new tn(r.x,r.y,fe),H.map.texture.name=ge.name+".shadowMap",H.camera.updateProjectionMatrix()}i.setRenderTarget(H.map),i.clear();const Z=H.getViewportCount();for(let fe=0;fe<Z;fe++){const we=H.getViewport(fe);o.set(s.x*we.x,s.y*we.y,s.x*we.z,s.y*we.w),W.viewport(o),H.updateMatrices(ge,fe),n=H.getFrustum(),A(I,B,H.camera,ge,this.type)}H.isPointLightShadow!==!0&&this.type===Ri&&w(H,B),H.needsUpdate=!1}_=this.type,y.needsUpdate=!1,i.setRenderTarget(C,b,F)};function w(P,I){const B=e.update(M);m.defines.VSM_SAMPLES!==P.blurSamples&&(m.defines.VSM_SAMPLES=P.blurSamples,g.defines.VSM_SAMPLES=P.blurSamples,m.needsUpdate=!0,g.needsUpdate=!0),P.mapPass===null&&(P.mapPass=new tn(r.x,r.y)),m.uniforms.shadow_pass.value=P.map.texture,m.uniforms.resolution.value=P.mapSize,m.uniforms.radius.value=P.radius,i.setRenderTarget(P.mapPass),i.clear(),i.renderBufferDirect(I,null,B,m,M,null),g.uniforms.shadow_pass.value=P.mapPass.texture,g.uniforms.resolution.value=P.mapSize,g.uniforms.radius.value=P.radius,i.setRenderTarget(P.map),i.clear(),i.renderBufferDirect(I,null,B,g,M,null)}function E(P,I,B,C){let b=null;const F=B.isPointLight===!0?P.customDistanceMaterial:P.customDepthMaterial;if(F!==void 0)b=F;else if(b=B.isPointLight===!0?u:c,i.localClippingEnabled&&I.clipShadows===!0&&Array.isArray(I.clippingPlanes)&&I.clippingPlanes.length!==0||I.displacementMap&&I.displacementScale!==0||I.alphaMap&&I.alphaTest>0||I.map&&I.alphaTest>0){const W=b.uuid,k=I.uuid;let j=h[W];j===void 0&&(j={},h[W]=j);let K=j[k];K===void 0&&(K=b.clone(),j[k]=K,I.addEventListener("dispose",N)),b=K}if(b.visible=I.visible,b.wireframe=I.wireframe,C===Ri?b.side=I.shadowSide!==null?I.shadowSide:I.side:b.side=I.shadowSide!==null?I.shadowSide:p[I.side],b.alphaMap=I.alphaMap,b.alphaTest=I.alphaTest,b.map=I.map,b.clipShadows=I.clipShadows,b.clippingPlanes=I.clippingPlanes,b.clipIntersection=I.clipIntersection,b.displacementMap=I.displacementMap,b.displacementScale=I.displacementScale,b.displacementBias=I.displacementBias,b.wireframeLinewidth=I.wireframeLinewidth,b.linewidth=I.linewidth,B.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const W=i.properties.get(b);W.light=B}return b}function A(P,I,B,C,b){if(P.visible===!1)return;if(P.layers.test(I.layers)&&(P.isMesh||P.isLine||P.isPoints)&&(P.castShadow||P.receiveShadow&&b===Ri)&&(!P.frustumCulled||n.intersectsObject(P))){P.modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,P.matrixWorld);const k=e.update(P),j=P.material;if(Array.isArray(j)){const K=k.groups;for(let le=0,ge=K.length;le<ge;le++){const H=K[le],Q=j[H.materialIndex];if(Q&&Q.visible){const Z=E(P,Q,C,b);P.onBeforeShadow(i,P,I,B,k,Z,H),i.renderBufferDirect(B,null,k,Z,P,H),P.onAfterShadow(i,P,I,B,k,Z,H)}}}else if(j.visible){const K=E(P,j,C,b);P.onBeforeShadow(i,P,I,B,k,K,null),i.renderBufferDirect(B,null,k,K,P,null),P.onAfterShadow(i,P,I,B,k,K,null)}}const W=P.children;for(let k=0,j=W.length;k<j;k++)A(W[k],I,B,C,b)}function N(P){P.target.removeEventListener("dispose",N);for(const B in h){const C=h[B],b=P.target.uuid;b in C&&(C[b].dispose(),delete C[b])}}}function bA(i){function e(){let z=!1;const Te=new It;let Ee=null;const qe=new It(0,0,0,0);return{setMask:function(Je){Ee!==Je&&!z&&(i.colorMask(Je,Je,Je,Je),Ee=Je)},setLocked:function(Je){z=Je},setClear:function(Je,Dt,Ft,kt,_n){_n===!0&&(Je*=kt,Dt*=kt,Ft*=kt),Te.set(Je,Dt,Ft,kt),qe.equals(Te)===!1&&(i.clearColor(Je,Dt,Ft,kt),qe.copy(Te))},reset:function(){z=!1,Ee=null,qe.set(-1,0,0,0)}}}function t(){let z=!1,Te=null,Ee=null,qe=null;return{setTest:function(Je){Je?Ae(i.DEPTH_TEST):ye(i.DEPTH_TEST)},setMask:function(Je){Te!==Je&&!z&&(i.depthMask(Je),Te=Je)},setFunc:function(Je){if(Ee!==Je){switch(Je){case n_:i.depthFunc(i.NEVER);break;case i_:i.depthFunc(i.ALWAYS);break;case r_:i.depthFunc(i.LESS);break;case Do:i.depthFunc(i.LEQUAL);break;case s_:i.depthFunc(i.EQUAL);break;case a_:i.depthFunc(i.GEQUAL);break;case o_:i.depthFunc(i.GREATER);break;case l_:i.depthFunc(i.NOTEQUAL);break;default:i.depthFunc(i.LEQUAL)}Ee=Je}},setLocked:function(Je){z=Je},setClear:function(Je){qe!==Je&&(i.clearDepth(Je),qe=Je)},reset:function(){z=!1,Te=null,Ee=null,qe=null}}}function n(){let z=!1,Te=null,Ee=null,qe=null,Je=null,Dt=null,Ft=null,kt=null,_n=null;return{setTest:function(Nt){z||(Nt?Ae(i.STENCIL_TEST):ye(i.STENCIL_TEST))},setMask:function(Nt){Te!==Nt&&!z&&(i.stencilMask(Nt),Te=Nt)},setFunc:function(Nt,ei,ti){(Ee!==Nt||qe!==ei||Je!==ti)&&(i.stencilFunc(Nt,ei,ti),Ee=Nt,qe=ei,Je=ti)},setOp:function(Nt,ei,ti){(Dt!==Nt||Ft!==ei||kt!==ti)&&(i.stencilOp(Nt,ei,ti),Dt=Nt,Ft=ei,kt=ti)},setLocked:function(Nt){z=Nt},setClear:function(Nt){_n!==Nt&&(i.clearStencil(Nt),_n=Nt)},reset:function(){z=!1,Te=null,Ee=null,qe=null,Je=null,Dt=null,Ft=null,kt=null,_n=null}}}const r=new e,s=new t,o=new n,c=new WeakMap,u=new WeakMap;let h={},f={},p=new WeakMap,m=[],g=null,x=!1,M=null,y=null,_=null,w=null,E=null,A=null,N=null,P=new Pe(0,0,0),I=0,B=!1,C=null,b=null,F=null,W=null,k=null;const j=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let K=!1,le=0;const ge=i.getParameter(i.VERSION);ge.indexOf("WebGL")!==-1?(le=parseFloat(/^WebGL (\d)/.exec(ge)[1]),K=le>=1):ge.indexOf("OpenGL ES")!==-1&&(le=parseFloat(/^OpenGL ES (\d)/.exec(ge)[1]),K=le>=2);let H=null,Q={};const Z=i.getParameter(i.SCISSOR_BOX),fe=i.getParameter(i.VIEWPORT),we=new It().fromArray(Z),Le=new It().fromArray(fe);function te(z,Te,Ee,qe){const Je=new Uint8Array(4),Dt=i.createTexture();i.bindTexture(z,Dt),i.texParameteri(z,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(z,i.TEXTURE_MAG_FILTER,i.NEAREST);for(let Ft=0;Ft<Ee;Ft++)z===i.TEXTURE_3D||z===i.TEXTURE_2D_ARRAY?i.texImage3D(Te,0,i.RGBA,1,1,qe,0,i.RGBA,i.UNSIGNED_BYTE,Je):i.texImage2D(Te+Ft,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,Je);return Dt}const me={};me[i.TEXTURE_2D]=te(i.TEXTURE_2D,i.TEXTURE_2D,1),me[i.TEXTURE_CUBE_MAP]=te(i.TEXTURE_CUBE_MAP,i.TEXTURE_CUBE_MAP_POSITIVE_X,6),me[i.TEXTURE_2D_ARRAY]=te(i.TEXTURE_2D_ARRAY,i.TEXTURE_2D_ARRAY,1,1),me[i.TEXTURE_3D]=te(i.TEXTURE_3D,i.TEXTURE_3D,1,1),r.setClear(0,0,0,1),s.setClear(1),o.setClear(0),Ae(i.DEPTH_TEST),s.setFunc(Do),ve(!1),xe(ld),Ae(i.CULL_FACE),re(pn);function Ae(z){h[z]!==!0&&(i.enable(z),h[z]=!0)}function ye(z){h[z]!==!1&&(i.disable(z),h[z]=!1)}function Ye(z,Te){return f[z]!==Te?(i.bindFramebuffer(z,Te),f[z]=Te,z===i.DRAW_FRAMEBUFFER&&(f[i.FRAMEBUFFER]=Te),z===i.FRAMEBUFFER&&(f[i.DRAW_FRAMEBUFFER]=Te),!0):!1}function tt(z,Te){let Ee=m,qe=!1;if(z){Ee=p.get(Te),Ee===void 0&&(Ee=[],p.set(Te,Ee));const Je=z.textures;if(Ee.length!==Je.length||Ee[0]!==i.COLOR_ATTACHMENT0){for(let Dt=0,Ft=Je.length;Dt<Ft;Dt++)Ee[Dt]=i.COLOR_ATTACHMENT0+Dt;Ee.length=Je.length,qe=!0}}else Ee[0]!==i.BACK&&(Ee[0]=i.BACK,qe=!0);qe&&i.drawBuffers(Ee)}function Fe(z){return g!==z?(i.useProgram(z),g=z,!0):!1}const V={[Fr]:i.FUNC_ADD,[z0]:i.FUNC_SUBTRACT,[k0]:i.FUNC_REVERSE_SUBTRACT};V[H0]=i.MIN,V[V0]=i.MAX;const ce={[G0]:i.ZERO,[W0]:i.ONE,[X0]:i.SRC_COLOR,[vu]:i.SRC_ALPHA,[K0]:i.SRC_ALPHA_SATURATE,[j0]:i.DST_COLOR,[Y0]:i.DST_ALPHA,[q0]:i.ONE_MINUS_SRC_COLOR,[_u]:i.ONE_MINUS_SRC_ALPHA,[J0]:i.ONE_MINUS_DST_COLOR,[Z0]:i.ONE_MINUS_DST_ALPHA,[Q0]:i.CONSTANT_COLOR,[$0]:i.ONE_MINUS_CONSTANT_COLOR,[e_]:i.CONSTANT_ALPHA,[t_]:i.ONE_MINUS_CONSTANT_ALPHA};function re(z,Te,Ee,qe,Je,Dt,Ft,kt,_n,Nt){if(z===pn){x===!0&&(ye(i.BLEND),x=!1);return}if(x===!1&&(Ae(i.BLEND),x=!0),z!==B0){if(z!==M||Nt!==B){if((y!==Fr||E!==Fr)&&(i.blendEquation(i.FUNC_ADD),y=Fr,E=Fr),Nt)switch(z){case ys:i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case cd:i.blendFunc(i.ONE,i.ONE);break;case ud:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case hd:i.blendFuncSeparate(i.ZERO,i.SRC_COLOR,i.ZERO,i.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",z);break}else switch(z){case ys:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case cd:i.blendFunc(i.SRC_ALPHA,i.ONE);break;case ud:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case hd:i.blendFunc(i.ZERO,i.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",z);break}_=null,w=null,A=null,N=null,P.set(0,0,0),I=0,M=z,B=Nt}return}Je=Je||Te,Dt=Dt||Ee,Ft=Ft||qe,(Te!==y||Je!==E)&&(i.blendEquationSeparate(V[Te],V[Je]),y=Te,E=Je),(Ee!==_||qe!==w||Dt!==A||Ft!==N)&&(i.blendFuncSeparate(ce[Ee],ce[qe],ce[Dt],ce[Ft]),_=Ee,w=qe,A=Dt,N=Ft),(kt.equals(P)===!1||_n!==I)&&(i.blendColor(kt.r,kt.g,kt.b,_n),P.copy(kt),I=_n),M=z,B=!1}function _e(z,Te){z.side===kn?ye(i.CULL_FACE):Ae(i.CULL_FACE);let Ee=z.side===fn;Te&&(Ee=!Ee),ve(Ee),z.blending===ys&&z.transparent===!1?re(pn):re(z.blending,z.blendEquation,z.blendSrc,z.blendDst,z.blendEquationAlpha,z.blendSrcAlpha,z.blendDstAlpha,z.blendColor,z.blendAlpha,z.premultipliedAlpha),s.setFunc(z.depthFunc),s.setTest(z.depthTest),s.setMask(z.depthWrite),r.setMask(z.colorWrite);const qe=z.stencilWrite;o.setTest(qe),qe&&(o.setMask(z.stencilWriteMask),o.setFunc(z.stencilFunc,z.stencilRef,z.stencilFuncMask),o.setOp(z.stencilFail,z.stencilZFail,z.stencilZPass)),R(z.polygonOffset,z.polygonOffsetFactor,z.polygonOffsetUnits),z.alphaToCoverage===!0?Ae(i.SAMPLE_ALPHA_TO_COVERAGE):ye(i.SAMPLE_ALPHA_TO_COVERAGE)}function ve(z){C!==z&&(z?i.frontFace(i.CW):i.frontFace(i.CCW),C=z)}function xe(z){z!==N0?(Ae(i.CULL_FACE),z!==b&&(z===ld?i.cullFace(i.BACK):z===F0?i.cullFace(i.FRONT):i.cullFace(i.FRONT_AND_BACK))):ye(i.CULL_FACE),b=z}function U(z){z!==F&&(K&&i.lineWidth(z),F=z)}function R(z,Te,Ee){z?(Ae(i.POLYGON_OFFSET_FILL),(W!==Te||k!==Ee)&&(i.polygonOffset(Te,Ee),W=Te,k=Ee)):ye(i.POLYGON_OFFSET_FILL)}function Y(z){z?Ae(i.SCISSOR_TEST):ye(i.SCISSOR_TEST)}function se(z){z===void 0&&(z=i.TEXTURE0+j-1),H!==z&&(i.activeTexture(z),H=z)}function ue(z,Te,Ee){Ee===void 0&&(H===null?Ee=i.TEXTURE0+j-1:Ee=H);let qe=Q[Ee];qe===void 0&&(qe={type:void 0,texture:void 0},Q[Ee]=qe),(qe.type!==z||qe.texture!==Te)&&(H!==Ee&&(i.activeTexture(Ee),H=Ee),i.bindTexture(z,Te||me[z]),qe.type=z,qe.texture=Te)}function de(){const z=Q[H];z!==void 0&&z.type!==void 0&&(i.bindTexture(z.type,null),z.type=void 0,z.texture=void 0)}function Xe(){try{i.compressedTexImage2D.apply(i,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function pe(){try{i.compressedTexImage3D.apply(i,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function ke(){try{i.texSubImage2D.apply(i,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function je(){try{i.texSubImage3D.apply(i,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Se(){try{i.compressedTexSubImage2D.apply(i,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Ue(){try{i.compressedTexSubImage3D.apply(i,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function it(){try{i.texStorage2D.apply(i,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Oe(){try{i.texStorage3D.apply(i,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Be(){try{i.texImage2D.apply(i,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function mt(){try{i.texImage3D.apply(i,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function gt(z){we.equals(z)===!1&&(i.scissor(z.x,z.y,z.z,z.w),we.copy(z))}function Rt(z){Le.equals(z)===!1&&(i.viewport(z.x,z.y,z.z,z.w),Le.copy(z))}function Mt(z,Te){let Ee=u.get(Te);Ee===void 0&&(Ee=new WeakMap,u.set(Te,Ee));let qe=Ee.get(z);qe===void 0&&(qe=i.getUniformBlockIndex(Te,z.name),Ee.set(z,qe))}function zt(z,Te){const qe=u.get(Te).get(z);c.get(Te)!==qe&&(i.uniformBlockBinding(Te,qe,z.__bindingPointIndex),c.set(Te,qe))}function Ve(){i.disable(i.BLEND),i.disable(i.CULL_FACE),i.disable(i.DEPTH_TEST),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SCISSOR_TEST),i.disable(i.STENCIL_TEST),i.disable(i.SAMPLE_ALPHA_TO_COVERAGE),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ZERO),i.blendFuncSeparate(i.ONE,i.ZERO,i.ONE,i.ZERO),i.blendColor(0,0,0,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(i.LESS),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(i.ALWAYS,0,4294967295),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.clearStencil(0),i.cullFace(i.BACK),i.frontFace(i.CCW),i.polygonOffset(0,0),i.activeTexture(i.TEXTURE0),i.bindFramebuffer(i.FRAMEBUFFER,null),i.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),i.bindFramebuffer(i.READ_FRAMEBUFFER,null),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),h={},H=null,Q={},f={},p=new WeakMap,m=[],g=null,x=!1,M=null,y=null,_=null,w=null,E=null,A=null,N=null,P=new Pe(0,0,0),I=0,B=!1,C=null,b=null,F=null,W=null,k=null,we.set(0,0,i.canvas.width,i.canvas.height),Le.set(0,0,i.canvas.width,i.canvas.height),r.reset(),s.reset(),o.reset()}return{buffers:{color:r,depth:s,stencil:o},enable:Ae,disable:ye,bindFramebuffer:Ye,drawBuffers:tt,useProgram:Fe,setBlending:re,setMaterial:_e,setFlipSided:ve,setCullFace:xe,setLineWidth:U,setPolygonOffset:R,setScissorTest:Y,activeTexture:se,bindTexture:ue,unbindTexture:de,compressedTexImage2D:Xe,compressedTexImage3D:pe,texImage2D:Be,texImage3D:mt,updateUBOMapping:Mt,uniformBlockBinding:zt,texStorage2D:it,texStorage3D:Oe,texSubImage2D:ke,texSubImage3D:je,compressedTexSubImage2D:Se,compressedTexSubImage3D:Ue,scissor:gt,viewport:Rt,reset:Ve}}function CA(i,e,t,n,r,s,o){const c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,u=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new oe,f=new WeakMap;let p;const m=new WeakMap;let g=!1;try{g=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(U,R){return g?new OffscreenCanvas(U,R):Yo("canvas")}function M(U,R,Y){let se=1;const ue=xe(U);if((ue.width>Y||ue.height>Y)&&(se=Y/Math.max(ue.width,ue.height)),se<1)if(typeof HTMLImageElement<"u"&&U instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&U instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&U instanceof ImageBitmap||typeof VideoFrame<"u"&&U instanceof VideoFrame){const de=Math.floor(se*ue.width),Xe=Math.floor(se*ue.height);p===void 0&&(p=x(de,Xe));const pe=R?x(de,Xe):p;return pe.width=de,pe.height=Xe,pe.getContext("2d").drawImage(U,0,0,de,Xe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ue.width+"x"+ue.height+") to ("+de+"x"+Xe+")."),pe}else return"data"in U&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ue.width+"x"+ue.height+")."),U;return U}function y(U){return U.generateMipmaps&&U.minFilter!==en&&U.minFilter!==qt}function _(U){i.generateMipmap(U)}function w(U,R,Y,se,ue=!1){if(U!==null){if(i[U]!==void 0)return i[U];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+U+"'")}let de=R;if(R===i.RED&&(Y===i.FLOAT&&(de=i.R32F),Y===i.HALF_FLOAT&&(de=i.R16F),Y===i.UNSIGNED_BYTE&&(de=i.R8)),R===i.RED_INTEGER&&(Y===i.UNSIGNED_BYTE&&(de=i.R8UI),Y===i.UNSIGNED_SHORT&&(de=i.R16UI),Y===i.UNSIGNED_INT&&(de=i.R32UI),Y===i.BYTE&&(de=i.R8I),Y===i.SHORT&&(de=i.R16I),Y===i.INT&&(de=i.R32I)),R===i.RG&&(Y===i.FLOAT&&(de=i.RG32F),Y===i.HALF_FLOAT&&(de=i.RG16F),Y===i.UNSIGNED_BYTE&&(de=i.RG8)),R===i.RG_INTEGER&&(Y===i.UNSIGNED_BYTE&&(de=i.RG8UI),Y===i.UNSIGNED_SHORT&&(de=i.RG16UI),Y===i.UNSIGNED_INT&&(de=i.RG32UI),Y===i.BYTE&&(de=i.RG8I),Y===i.SHORT&&(de=i.RG16I),Y===i.INT&&(de=i.RG32I)),R===i.RGB&&Y===i.UNSIGNED_INT_5_9_9_9_REV&&(de=i.RGB9_E5),R===i.RGBA){const Xe=ue?Vo:Ut.getTransfer(se);Y===i.FLOAT&&(de=i.RGBA32F),Y===i.HALF_FLOAT&&(de=i.RGBA16F),Y===i.UNSIGNED_BYTE&&(de=Xe===Ht?i.SRGB8_ALPHA8:i.RGBA8),Y===i.UNSIGNED_SHORT_4_4_4_4&&(de=i.RGBA4),Y===i.UNSIGNED_SHORT_5_5_5_1&&(de=i.RGB5_A1)}return(de===i.R16F||de===i.R32F||de===i.RG16F||de===i.RG32F||de===i.RGBA16F||de===i.RGBA32F)&&e.get("EXT_color_buffer_float"),de}function E(U,R){return y(U)===!0||U.isFramebufferTexture&&U.minFilter!==en&&U.minFilter!==qt?Math.log2(Math.max(R.width,R.height))+1:U.mipmaps!==void 0&&U.mipmaps.length>0?U.mipmaps.length:U.isCompressedTexture&&Array.isArray(U.image)?R.mipmaps.length:1}function A(U){const R=U.target;R.removeEventListener("dispose",A),P(R),R.isVideoTexture&&f.delete(R)}function N(U){const R=U.target;R.removeEventListener("dispose",N),B(R)}function P(U){const R=n.get(U);if(R.__webglInit===void 0)return;const Y=U.source,se=m.get(Y);if(se){const ue=se[R.__cacheKey];ue.usedTimes--,ue.usedTimes===0&&I(U),Object.keys(se).length===0&&m.delete(Y)}n.remove(U)}function I(U){const R=n.get(U);i.deleteTexture(R.__webglTexture);const Y=U.source,se=m.get(Y);delete se[R.__cacheKey],o.memory.textures--}function B(U){const R=n.get(U);if(U.depthTexture&&U.depthTexture.dispose(),U.isWebGLCubeRenderTarget)for(let se=0;se<6;se++){if(Array.isArray(R.__webglFramebuffer[se]))for(let ue=0;ue<R.__webglFramebuffer[se].length;ue++)i.deleteFramebuffer(R.__webglFramebuffer[se][ue]);else i.deleteFramebuffer(R.__webglFramebuffer[se]);R.__webglDepthbuffer&&i.deleteRenderbuffer(R.__webglDepthbuffer[se])}else{if(Array.isArray(R.__webglFramebuffer))for(let se=0;se<R.__webglFramebuffer.length;se++)i.deleteFramebuffer(R.__webglFramebuffer[se]);else i.deleteFramebuffer(R.__webglFramebuffer);if(R.__webglDepthbuffer&&i.deleteRenderbuffer(R.__webglDepthbuffer),R.__webglMultisampledFramebuffer&&i.deleteFramebuffer(R.__webglMultisampledFramebuffer),R.__webglColorRenderbuffer)for(let se=0;se<R.__webglColorRenderbuffer.length;se++)R.__webglColorRenderbuffer[se]&&i.deleteRenderbuffer(R.__webglColorRenderbuffer[se]);R.__webglDepthRenderbuffer&&i.deleteRenderbuffer(R.__webglDepthRenderbuffer)}const Y=U.textures;for(let se=0,ue=Y.length;se<ue;se++){const de=n.get(Y[se]);de.__webglTexture&&(i.deleteTexture(de.__webglTexture),o.memory.textures--),n.remove(Y[se])}n.remove(U)}let C=0;function b(){C=0}function F(){const U=C;return U>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+U+" texture units while this GPU supports only "+r.maxTextures),C+=1,U}function W(U){const R=[];return R.push(U.wrapS),R.push(U.wrapT),R.push(U.wrapR||0),R.push(U.magFilter),R.push(U.minFilter),R.push(U.anisotropy),R.push(U.internalFormat),R.push(U.format),R.push(U.type),R.push(U.generateMipmaps),R.push(U.premultiplyAlpha),R.push(U.flipY),R.push(U.unpackAlignment),R.push(U.colorSpace),R.join()}function k(U,R){const Y=n.get(U);if(U.isVideoTexture&&_e(U),U.isRenderTargetTexture===!1&&U.version>0&&Y.__version!==U.version){const se=U.image;if(se===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(se.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{we(Y,U,R);return}}t.bindTexture(i.TEXTURE_2D,Y.__webglTexture,i.TEXTURE0+R)}function j(U,R){const Y=n.get(U);if(U.version>0&&Y.__version!==U.version){we(Y,U,R);return}t.bindTexture(i.TEXTURE_2D_ARRAY,Y.__webglTexture,i.TEXTURE0+R)}function K(U,R){const Y=n.get(U);if(U.version>0&&Y.__version!==U.version){we(Y,U,R);return}t.bindTexture(i.TEXTURE_3D,Y.__webglTexture,i.TEXTURE0+R)}function le(U,R){const Y=n.get(U);if(U.version>0&&Y.__version!==U.version){Le(Y,U,R);return}t.bindTexture(i.TEXTURE_CUBE_MAP,Y.__webglTexture,i.TEXTURE0+R)}const ge={[Oo]:i.REPEAT,[Mi]:i.CLAMP_TO_EDGE,[Bo]:i.MIRRORED_REPEAT},H={[en]:i.NEAREST,[tp]:i.NEAREST_MIPMAP_NEAREST,[wa]:i.NEAREST_MIPMAP_LINEAR,[qt]:i.LINEAR,[Po]:i.LINEAR_MIPMAP_NEAREST,[Xi]:i.LINEAR_MIPMAP_LINEAR},Q={[L_]:i.NEVER,[B_]:i.ALWAYS,[U_]:i.LESS,[fp]:i.LEQUAL,[D_]:i.EQUAL,[O_]:i.GEQUAL,[N_]:i.GREATER,[F_]:i.NOTEQUAL};function Z(U,R){if(R.type===hi&&e.has("OES_texture_float_linear")===!1&&(R.magFilter===qt||R.magFilter===Po||R.magFilter===wa||R.magFilter===Xi||R.minFilter===qt||R.minFilter===Po||R.minFilter===wa||R.minFilter===Xi)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),i.texParameteri(U,i.TEXTURE_WRAP_S,ge[R.wrapS]),i.texParameteri(U,i.TEXTURE_WRAP_T,ge[R.wrapT]),(U===i.TEXTURE_3D||U===i.TEXTURE_2D_ARRAY)&&i.texParameteri(U,i.TEXTURE_WRAP_R,ge[R.wrapR]),i.texParameteri(U,i.TEXTURE_MAG_FILTER,H[R.magFilter]),i.texParameteri(U,i.TEXTURE_MIN_FILTER,H[R.minFilter]),R.compareFunction&&(i.texParameteri(U,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(U,i.TEXTURE_COMPARE_FUNC,Q[R.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(R.magFilter===en||R.minFilter!==wa&&R.minFilter!==Xi||R.type===hi&&e.has("OES_texture_float_linear")===!1)return;if(R.anisotropy>1||n.get(R).__currentAnisotropy){const Y=e.get("EXT_texture_filter_anisotropic");i.texParameterf(U,Y.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,r.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy}}}function fe(U,R){let Y=!1;U.__webglInit===void 0&&(U.__webglInit=!0,R.addEventListener("dispose",A));const se=R.source;let ue=m.get(se);ue===void 0&&(ue={},m.set(se,ue));const de=W(R);if(de!==U.__cacheKey){ue[de]===void 0&&(ue[de]={texture:i.createTexture(),usedTimes:0},o.memory.textures++,Y=!0),ue[de].usedTimes++;const Xe=ue[U.__cacheKey];Xe!==void 0&&(ue[U.__cacheKey].usedTimes--,Xe.usedTimes===0&&I(R)),U.__cacheKey=de,U.__webglTexture=ue[de].texture}return Y}function we(U,R,Y){let se=i.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(se=i.TEXTURE_2D_ARRAY),R.isData3DTexture&&(se=i.TEXTURE_3D);const ue=fe(U,R),de=R.source;t.bindTexture(se,U.__webglTexture,i.TEXTURE0+Y);const Xe=n.get(de);if(de.version!==Xe.__version||ue===!0){t.activeTexture(i.TEXTURE0+Y);const pe=Ut.getPrimaries(Ut.workingColorSpace),ke=R.colorSpace===Ii?null:Ut.getPrimaries(R.colorSpace),je=R.colorSpace===Ii||pe===ke?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,R.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,R.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,je);let Se=M(R.image,!1,r.maxTextureSize);Se=ve(R,Se);const Ue=s.convert(R.format,R.colorSpace),it=s.convert(R.type);let Oe=w(R.internalFormat,Ue,it,R.colorSpace,R.isVideoTexture);Z(se,R);let Be;const mt=R.mipmaps,gt=R.isVideoTexture!==!0&&Oe!==up,Rt=Xe.__version===void 0||ue===!0,Mt=de.dataReady,zt=E(R,Se);if(R.isDepthTexture)Oe=i.DEPTH_COMPONENT16,R.type===hi?Oe=i.DEPTH_COMPONENT32F:R.type===zr?Oe=i.DEPTH_COMPONENT24:R.type===Rs&&(Oe=i.DEPTH24_STENCIL8),Rt&&(gt?t.texStorage2D(i.TEXTURE_2D,1,Oe,Se.width,Se.height):t.texImage2D(i.TEXTURE_2D,0,Oe,Se.width,Se.height,0,Ue,it,null));else if(R.isDataTexture)if(mt.length>0){gt&&Rt&&t.texStorage2D(i.TEXTURE_2D,zt,Oe,mt[0].width,mt[0].height);for(let Ve=0,z=mt.length;Ve<z;Ve++)Be=mt[Ve],gt?Mt&&t.texSubImage2D(i.TEXTURE_2D,Ve,0,0,Be.width,Be.height,Ue,it,Be.data):t.texImage2D(i.TEXTURE_2D,Ve,Oe,Be.width,Be.height,0,Ue,it,Be.data);R.generateMipmaps=!1}else gt?(Rt&&t.texStorage2D(i.TEXTURE_2D,zt,Oe,Se.width,Se.height),Mt&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,Se.width,Se.height,Ue,it,Se.data)):t.texImage2D(i.TEXTURE_2D,0,Oe,Se.width,Se.height,0,Ue,it,Se.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){gt&&Rt&&t.texStorage3D(i.TEXTURE_2D_ARRAY,zt,Oe,mt[0].width,mt[0].height,Se.depth);for(let Ve=0,z=mt.length;Ve<z;Ve++)Be=mt[Ve],R.format!==jn?Ue!==null?gt?Mt&&t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,Ve,0,0,0,Be.width,Be.height,Se.depth,Ue,Be.data,0,0):t.compressedTexImage3D(i.TEXTURE_2D_ARRAY,Ve,Oe,Be.width,Be.height,Se.depth,0,Be.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):gt?Mt&&t.texSubImage3D(i.TEXTURE_2D_ARRAY,Ve,0,0,0,Be.width,Be.height,Se.depth,Ue,it,Be.data):t.texImage3D(i.TEXTURE_2D_ARRAY,Ve,Oe,Be.width,Be.height,Se.depth,0,Ue,it,Be.data)}else{gt&&Rt&&t.texStorage2D(i.TEXTURE_2D,zt,Oe,mt[0].width,mt[0].height);for(let Ve=0,z=mt.length;Ve<z;Ve++)Be=mt[Ve],R.format!==jn?Ue!==null?gt?Mt&&t.compressedTexSubImage2D(i.TEXTURE_2D,Ve,0,0,Be.width,Be.height,Ue,Be.data):t.compressedTexImage2D(i.TEXTURE_2D,Ve,Oe,Be.width,Be.height,0,Be.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):gt?Mt&&t.texSubImage2D(i.TEXTURE_2D,Ve,0,0,Be.width,Be.height,Ue,it,Be.data):t.texImage2D(i.TEXTURE_2D,Ve,Oe,Be.width,Be.height,0,Ue,it,Be.data)}else if(R.isDataArrayTexture)gt?(Rt&&t.texStorage3D(i.TEXTURE_2D_ARRAY,zt,Oe,Se.width,Se.height,Se.depth),Mt&&t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,Se.width,Se.height,Se.depth,Ue,it,Se.data)):t.texImage3D(i.TEXTURE_2D_ARRAY,0,Oe,Se.width,Se.height,Se.depth,0,Ue,it,Se.data);else if(R.isData3DTexture)gt?(Rt&&t.texStorage3D(i.TEXTURE_3D,zt,Oe,Se.width,Se.height,Se.depth),Mt&&t.texSubImage3D(i.TEXTURE_3D,0,0,0,0,Se.width,Se.height,Se.depth,Ue,it,Se.data)):t.texImage3D(i.TEXTURE_3D,0,Oe,Se.width,Se.height,Se.depth,0,Ue,it,Se.data);else if(R.isFramebufferTexture){if(Rt)if(gt)t.texStorage2D(i.TEXTURE_2D,zt,Oe,Se.width,Se.height);else{let Ve=Se.width,z=Se.height;for(let Te=0;Te<zt;Te++)t.texImage2D(i.TEXTURE_2D,Te,Oe,Ve,z,0,Ue,it,null),Ve>>=1,z>>=1}}else if(mt.length>0){if(gt&&Rt){const Ve=xe(mt[0]);t.texStorage2D(i.TEXTURE_2D,zt,Oe,Ve.width,Ve.height)}for(let Ve=0,z=mt.length;Ve<z;Ve++)Be=mt[Ve],gt?Mt&&t.texSubImage2D(i.TEXTURE_2D,Ve,0,0,Ue,it,Be):t.texImage2D(i.TEXTURE_2D,Ve,Oe,Ue,it,Be);R.generateMipmaps=!1}else if(gt){if(Rt){const Ve=xe(Se);t.texStorage2D(i.TEXTURE_2D,zt,Oe,Ve.width,Ve.height)}Mt&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,Ue,it,Se)}else t.texImage2D(i.TEXTURE_2D,0,Oe,Ue,it,Se);y(R)&&_(se),Xe.__version=de.version,R.onUpdate&&R.onUpdate(R)}U.__version=R.version}function Le(U,R,Y){if(R.image.length!==6)return;const se=fe(U,R),ue=R.source;t.bindTexture(i.TEXTURE_CUBE_MAP,U.__webglTexture,i.TEXTURE0+Y);const de=n.get(ue);if(ue.version!==de.__version||se===!0){t.activeTexture(i.TEXTURE0+Y);const Xe=Ut.getPrimaries(Ut.workingColorSpace),pe=R.colorSpace===Ii?null:Ut.getPrimaries(R.colorSpace),ke=R.colorSpace===Ii||Xe===pe?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,R.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,R.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,ke);const je=R.isCompressedTexture||R.image[0].isCompressedTexture,Se=R.image[0]&&R.image[0].isDataTexture,Ue=[];for(let z=0;z<6;z++)!je&&!Se?Ue[z]=M(R.image[z],!0,r.maxCubemapSize):Ue[z]=Se?R.image[z].image:R.image[z],Ue[z]=ve(R,Ue[z]);const it=Ue[0],Oe=s.convert(R.format,R.colorSpace),Be=s.convert(R.type),mt=w(R.internalFormat,Oe,Be,R.colorSpace),gt=R.isVideoTexture!==!0,Rt=de.__version===void 0||se===!0,Mt=ue.dataReady;let zt=E(R,it);Z(i.TEXTURE_CUBE_MAP,R);let Ve;if(je){gt&&Rt&&t.texStorage2D(i.TEXTURE_CUBE_MAP,zt,mt,it.width,it.height);for(let z=0;z<6;z++){Ve=Ue[z].mipmaps;for(let Te=0;Te<Ve.length;Te++){const Ee=Ve[Te];R.format!==jn?Oe!==null?gt?Mt&&t.compressedTexSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+z,Te,0,0,Ee.width,Ee.height,Oe,Ee.data):t.compressedTexImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+z,Te,mt,Ee.width,Ee.height,0,Ee.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):gt?Mt&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+z,Te,0,0,Ee.width,Ee.height,Oe,Be,Ee.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+z,Te,mt,Ee.width,Ee.height,0,Oe,Be,Ee.data)}}}else{if(Ve=R.mipmaps,gt&&Rt){Ve.length>0&&zt++;const z=xe(Ue[0]);t.texStorage2D(i.TEXTURE_CUBE_MAP,zt,mt,z.width,z.height)}for(let z=0;z<6;z++)if(Se){gt?Mt&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+z,0,0,0,Ue[z].width,Ue[z].height,Oe,Be,Ue[z].data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+z,0,mt,Ue[z].width,Ue[z].height,0,Oe,Be,Ue[z].data);for(let Te=0;Te<Ve.length;Te++){const qe=Ve[Te].image[z].image;gt?Mt&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+z,Te+1,0,0,qe.width,qe.height,Oe,Be,qe.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+z,Te+1,mt,qe.width,qe.height,0,Oe,Be,qe.data)}}else{gt?Mt&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+z,0,0,0,Oe,Be,Ue[z]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+z,0,mt,Oe,Be,Ue[z]);for(let Te=0;Te<Ve.length;Te++){const Ee=Ve[Te];gt?Mt&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+z,Te+1,0,0,Oe,Be,Ee.image[z]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+z,Te+1,mt,Oe,Be,Ee.image[z])}}}y(R)&&_(i.TEXTURE_CUBE_MAP),de.__version=ue.version,R.onUpdate&&R.onUpdate(R)}U.__version=R.version}function te(U,R,Y,se,ue,de){const Xe=s.convert(Y.format,Y.colorSpace),pe=s.convert(Y.type),ke=w(Y.internalFormat,Xe,pe,Y.colorSpace);if(!n.get(R).__hasExternalTextures){const Se=Math.max(1,R.width>>de),Ue=Math.max(1,R.height>>de);ue===i.TEXTURE_3D||ue===i.TEXTURE_2D_ARRAY?t.texImage3D(ue,de,ke,Se,Ue,R.depth,0,Xe,pe,null):t.texImage2D(ue,de,ke,Se,Ue,0,Xe,pe,null)}t.bindFramebuffer(i.FRAMEBUFFER,U),re(R)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,se,ue,n.get(Y).__webglTexture,0,ce(R)):(ue===i.TEXTURE_2D||ue>=i.TEXTURE_CUBE_MAP_POSITIVE_X&&ue<=i.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&i.framebufferTexture2D(i.FRAMEBUFFER,se,ue,n.get(Y).__webglTexture,de),t.bindFramebuffer(i.FRAMEBUFFER,null)}function me(U,R,Y){if(i.bindRenderbuffer(i.RENDERBUFFER,U),R.depthBuffer&&!R.stencilBuffer){let se=i.DEPTH_COMPONENT24;if(Y||re(R)){const ue=R.depthTexture;ue&&ue.isDepthTexture&&(ue.type===hi?se=i.DEPTH_COMPONENT32F:ue.type===zr&&(se=i.DEPTH_COMPONENT24));const de=ce(R);re(R)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,de,se,R.width,R.height):i.renderbufferStorageMultisample(i.RENDERBUFFER,de,se,R.width,R.height)}else i.renderbufferStorage(i.RENDERBUFFER,se,R.width,R.height);i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.RENDERBUFFER,U)}else if(R.depthBuffer&&R.stencilBuffer){const se=ce(R);Y&&re(R)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,se,i.DEPTH24_STENCIL8,R.width,R.height):re(R)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,se,i.DEPTH24_STENCIL8,R.width,R.height):i.renderbufferStorage(i.RENDERBUFFER,i.DEPTH_STENCIL,R.width,R.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.RENDERBUFFER,U)}else{const se=R.textures;for(let ue=0;ue<se.length;ue++){const de=se[ue],Xe=s.convert(de.format,de.colorSpace),pe=s.convert(de.type),ke=w(de.internalFormat,Xe,pe,de.colorSpace),je=ce(R);Y&&re(R)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,je,ke,R.width,R.height):re(R)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,je,ke,R.width,R.height):i.renderbufferStorage(i.RENDERBUFFER,ke,R.width,R.height)}}i.bindRenderbuffer(i.RENDERBUFFER,null)}function Ae(U,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(i.FRAMEBUFFER,U),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(R.depthTexture).__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),k(R.depthTexture,0);const se=n.get(R.depthTexture).__webglTexture,ue=ce(R);if(R.depthTexture.format===Ss)re(R)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,se,0,ue):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,se,0);else if(R.depthTexture.format===Ts)re(R)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,se,0,ue):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,se,0);else throw new Error("Unknown depthTexture format")}function ye(U){const R=n.get(U),Y=U.isWebGLCubeRenderTarget===!0;if(U.depthTexture&&!R.__autoAllocateDepthBuffer){if(Y)throw new Error("target.depthTexture not supported in Cube render targets");Ae(R.__webglFramebuffer,U)}else if(Y){R.__webglDepthbuffer=[];for(let se=0;se<6;se++)t.bindFramebuffer(i.FRAMEBUFFER,R.__webglFramebuffer[se]),R.__webglDepthbuffer[se]=i.createRenderbuffer(),me(R.__webglDepthbuffer[se],U,!1)}else t.bindFramebuffer(i.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer=i.createRenderbuffer(),me(R.__webglDepthbuffer,U,!1);t.bindFramebuffer(i.FRAMEBUFFER,null)}function Ye(U,R,Y){const se=n.get(U);R!==void 0&&te(se.__webglFramebuffer,U,U.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,0),Y!==void 0&&ye(U)}function tt(U){const R=U.texture,Y=n.get(U),se=n.get(R);U.addEventListener("dispose",N);const ue=U.textures,de=U.isWebGLCubeRenderTarget===!0,Xe=ue.length>1;if(Xe||(se.__webglTexture===void 0&&(se.__webglTexture=i.createTexture()),se.__version=R.version,o.memory.textures++),de){Y.__webglFramebuffer=[];for(let pe=0;pe<6;pe++)if(R.mipmaps&&R.mipmaps.length>0){Y.__webglFramebuffer[pe]=[];for(let ke=0;ke<R.mipmaps.length;ke++)Y.__webglFramebuffer[pe][ke]=i.createFramebuffer()}else Y.__webglFramebuffer[pe]=i.createFramebuffer()}else{if(R.mipmaps&&R.mipmaps.length>0){Y.__webglFramebuffer=[];for(let pe=0;pe<R.mipmaps.length;pe++)Y.__webglFramebuffer[pe]=i.createFramebuffer()}else Y.__webglFramebuffer=i.createFramebuffer();if(Xe)for(let pe=0,ke=ue.length;pe<ke;pe++){const je=n.get(ue[pe]);je.__webglTexture===void 0&&(je.__webglTexture=i.createTexture(),o.memory.textures++)}if(U.samples>0&&re(U)===!1){Y.__webglMultisampledFramebuffer=i.createFramebuffer(),Y.__webglColorRenderbuffer=[],t.bindFramebuffer(i.FRAMEBUFFER,Y.__webglMultisampledFramebuffer);for(let pe=0;pe<ue.length;pe++){const ke=ue[pe];Y.__webglColorRenderbuffer[pe]=i.createRenderbuffer(),i.bindRenderbuffer(i.RENDERBUFFER,Y.__webglColorRenderbuffer[pe]);const je=s.convert(ke.format,ke.colorSpace),Se=s.convert(ke.type),Ue=w(ke.internalFormat,je,Se,ke.colorSpace,U.isXRRenderTarget===!0),it=ce(U);i.renderbufferStorageMultisample(i.RENDERBUFFER,it,Ue,U.width,U.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+pe,i.RENDERBUFFER,Y.__webglColorRenderbuffer[pe])}i.bindRenderbuffer(i.RENDERBUFFER,null),U.depthBuffer&&(Y.__webglDepthRenderbuffer=i.createRenderbuffer(),me(Y.__webglDepthRenderbuffer,U,!0)),t.bindFramebuffer(i.FRAMEBUFFER,null)}}if(de){t.bindTexture(i.TEXTURE_CUBE_MAP,se.__webglTexture),Z(i.TEXTURE_CUBE_MAP,R);for(let pe=0;pe<6;pe++)if(R.mipmaps&&R.mipmaps.length>0)for(let ke=0;ke<R.mipmaps.length;ke++)te(Y.__webglFramebuffer[pe][ke],U,R,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+pe,ke);else te(Y.__webglFramebuffer[pe],U,R,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+pe,0);y(R)&&_(i.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Xe){for(let pe=0,ke=ue.length;pe<ke;pe++){const je=ue[pe],Se=n.get(je);t.bindTexture(i.TEXTURE_2D,Se.__webglTexture),Z(i.TEXTURE_2D,je),te(Y.__webglFramebuffer,U,je,i.COLOR_ATTACHMENT0+pe,i.TEXTURE_2D,0),y(je)&&_(i.TEXTURE_2D)}t.unbindTexture()}else{let pe=i.TEXTURE_2D;if((U.isWebGL3DRenderTarget||U.isWebGLArrayRenderTarget)&&(pe=U.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY),t.bindTexture(pe,se.__webglTexture),Z(pe,R),R.mipmaps&&R.mipmaps.length>0)for(let ke=0;ke<R.mipmaps.length;ke++)te(Y.__webglFramebuffer[ke],U,R,i.COLOR_ATTACHMENT0,pe,ke);else te(Y.__webglFramebuffer,U,R,i.COLOR_ATTACHMENT0,pe,0);y(R)&&_(pe),t.unbindTexture()}U.depthBuffer&&ye(U)}function Fe(U){const R=U.textures;for(let Y=0,se=R.length;Y<se;Y++){const ue=R[Y];if(y(ue)){const de=U.isWebGLCubeRenderTarget?i.TEXTURE_CUBE_MAP:i.TEXTURE_2D,Xe=n.get(ue).__webglTexture;t.bindTexture(de,Xe),_(de),t.unbindTexture()}}}function V(U){if(U.samples>0&&re(U)===!1){const R=U.textures,Y=U.width,se=U.height;let ue=i.COLOR_BUFFER_BIT;const de=[],Xe=U.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,pe=n.get(U),ke=R.length>1;if(ke)for(let je=0;je<R.length;je++)t.bindFramebuffer(i.FRAMEBUFFER,pe.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+je,i.RENDERBUFFER,null),t.bindFramebuffer(i.FRAMEBUFFER,pe.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+je,i.TEXTURE_2D,null,0);t.bindFramebuffer(i.READ_FRAMEBUFFER,pe.__webglMultisampledFramebuffer),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,pe.__webglFramebuffer);for(let je=0;je<R.length;je++){de.push(i.COLOR_ATTACHMENT0+je),U.depthBuffer&&de.push(Xe);const Se=pe.__ignoreDepthValues!==void 0?pe.__ignoreDepthValues:!1;if(Se===!1&&(U.depthBuffer&&(ue|=i.DEPTH_BUFFER_BIT),U.stencilBuffer&&pe.__isTransmissionRenderTarget!==!0&&(ue|=i.STENCIL_BUFFER_BIT)),ke&&i.framebufferRenderbuffer(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,pe.__webglColorRenderbuffer[je]),Se===!0&&(i.invalidateFramebuffer(i.READ_FRAMEBUFFER,[Xe]),i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,[Xe])),ke){const Ue=n.get(R[je]).__webglTexture;i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,Ue,0)}i.blitFramebuffer(0,0,Y,se,0,0,Y,se,ue,i.NEAREST),u&&i.invalidateFramebuffer(i.READ_FRAMEBUFFER,de)}if(t.bindFramebuffer(i.READ_FRAMEBUFFER,null),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),ke)for(let je=0;je<R.length;je++){t.bindFramebuffer(i.FRAMEBUFFER,pe.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+je,i.RENDERBUFFER,pe.__webglColorRenderbuffer[je]);const Se=n.get(R[je]).__webglTexture;t.bindFramebuffer(i.FRAMEBUFFER,pe.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+je,i.TEXTURE_2D,Se,0)}t.bindFramebuffer(i.DRAW_FRAMEBUFFER,pe.__webglMultisampledFramebuffer)}}function ce(U){return Math.min(r.maxSamples,U.samples)}function re(U){const R=n.get(U);return U.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function _e(U){const R=o.render.frame;f.get(U)!==R&&(f.set(U,R),U.update())}function ve(U,R){const Y=U.colorSpace,se=U.format,ue=U.type;return U.isCompressedTexture===!0||U.isVideoTexture===!0||Y!==Ui&&Y!==Ii&&(Ut.getTransfer(Y)===Ht?(se!==jn||ue!==un)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Y)),R}function xe(U){return typeof HTMLImageElement<"u"&&U instanceof HTMLImageElement?(h.width=U.naturalWidth||U.width,h.height=U.naturalHeight||U.height):typeof VideoFrame<"u"&&U instanceof VideoFrame?(h.width=U.displayWidth,h.height=U.displayHeight):(h.width=U.width,h.height=U.height),h}this.allocateTextureUnit=F,this.resetTextureUnits=b,this.setTexture2D=k,this.setTexture2DArray=j,this.setTexture3D=K,this.setTextureCube=le,this.rebindTextures=Ye,this.setupRenderTarget=tt,this.updateRenderTargetMipmap=Fe,this.updateMultisampleRenderTarget=V,this.setupDepthRenderbuffer=ye,this.setupFrameBufferTexture=te,this.useMultisampledRTT=re}function tx(i,e){function t(n,r=Ii){let s;const o=Ut.getTransfer(r);if(n===un)return i.UNSIGNED_BYTE;if(n===rp)return i.UNSIGNED_SHORT_4_4_4_4;if(n===sp)return i.UNSIGNED_SHORT_5_5_5_1;if(n===y_)return i.UNSIGNED_INT_5_9_9_9_REV;if(n===__)return i.BYTE;if(n===x_)return i.SHORT;if(n===np)return i.UNSIGNED_SHORT;if(n===ip)return i.INT;if(n===zr)return i.UNSIGNED_INT;if(n===hi)return i.FLOAT;if(n===Ia)return i.HALF_FLOAT;if(n===S_)return i.ALPHA;if(n===M_)return i.RGB;if(n===jn)return i.RGBA;if(n===E_)return i.LUMINANCE;if(n===w_)return i.LUMINANCE_ALPHA;if(n===Ss)return i.DEPTH_COMPONENT;if(n===Ts)return i.DEPTH_STENCIL;if(n===ap)return i.RED;if(n===op)return i.RED_INTEGER;if(n===T_)return i.RG;if(n===lp)return i.RG_INTEGER;if(n===cp)return i.RGBA_INTEGER;if(n===cu||n===uu||n===hu||n===fu)if(o===Ht)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===cu)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===uu)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===hu)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===fu)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===cu)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===uu)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===hu)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===fu)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===dd||n===pd||n===md||n===gd)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===dd)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===pd)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===md)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===gd)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===up)return s=e.get("WEBGL_compressed_texture_etc1"),s!==null?s.COMPRESSED_RGB_ETC1_WEBGL:null;if(n===vd||n===_d)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===vd)return o===Ht?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===_d)return o===Ht?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===xd||n===yd||n===Sd||n===Md||n===Ed||n===wd||n===Td||n===Ad||n===bd||n===Cd||n===Rd||n===Pd||n===Id||n===Ld)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===xd)return o===Ht?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===yd)return o===Ht?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Sd)return o===Ht?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Md)return o===Ht?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Ed)return o===Ht?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===wd)return o===Ht?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Td)return o===Ht?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Ad)return o===Ht?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===bd)return o===Ht?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Cd)return o===Ht?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Rd)return o===Ht?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Pd)return o===Ht?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Id)return o===Ht?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Ld)return o===Ht?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===du||n===Ud||n===Dd)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===du)return o===Ht?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Ud)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Dd)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===A_||n===Nd||n===Fd||n===Od)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===du)return s.COMPRESSED_RED_RGTC1_EXT;if(n===Nd)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Fd)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Od)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Rs?i.UNSIGNED_INT_24_8:i[n]!==void 0?i[n]:null}return{convert:t}}class nx extends $t{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ba extends Ct{constructor(){super(),this.isGroup=!0,this.type="Group"}}const RA={type:"move"};class Rf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ba,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ba,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ba,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let r=null,s=null,o=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){o=!0;for(const M of e.hand.values()){const y=t.getJointPose(M,n),_=this._getHandJoint(h,M);y!==null&&(_.matrix.fromArray(y.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=y.radius),_.visible=y!==null}const f=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=f.position.distanceTo(p.position),g=.02,x=.005;h.inputState.pinching&&m>g+x?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=g-x&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(r=t.getPose(e.targetRaySpace,n),r===null&&s!==null&&(r=s),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(RA)))}return c!==null&&(c.visible=r!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new ba;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const PA=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,IA=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class LA{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const r=new Bt,s=e.properties.get(r);s.__webglTexture=t.texture,(t.depthNear!=n.depthNear||t.depthFar!=n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=r}}render(e,t){if(this.texture!==null){if(this.mesh===null){const n=t.cameras[0].viewport,r=new nn({vertexShader:PA,fragmentShader:IA,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new an(new Ha(20,20),r)}e.render(this.mesh,t)}}reset(){this.texture=null,this.mesh=null}}class UA extends Ei{constructor(e,t){super();const n=this;let r=null,s=1,o=null,c="local-floor",u=1,h=null,f=null,p=null,m=null,g=null,x=null;const M=new LA,y=t.getContextAttributes();let _=null,w=null;const E=[],A=[],N=new oe;let P=null;const I=new $t;I.layers.enable(1),I.viewport=new It;const B=new $t;B.layers.enable(2),B.viewport=new It;const C=[I,B],b=new nx;b.layers.enable(1),b.layers.enable(2);let F=null,W=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(te){let me=E[te];return me===void 0&&(me=new Rf,E[te]=me),me.getTargetRaySpace()},this.getControllerGrip=function(te){let me=E[te];return me===void 0&&(me=new Rf,E[te]=me),me.getGripSpace()},this.getHand=function(te){let me=E[te];return me===void 0&&(me=new Rf,E[te]=me),me.getHandSpace()};function k(te){const me=A.indexOf(te.inputSource);if(me===-1)return;const Ae=E[me];Ae!==void 0&&(Ae.update(te.inputSource,te.frame,h||o),Ae.dispatchEvent({type:te.type,data:te.inputSource}))}function j(){r.removeEventListener("select",k),r.removeEventListener("selectstart",k),r.removeEventListener("selectend",k),r.removeEventListener("squeeze",k),r.removeEventListener("squeezestart",k),r.removeEventListener("squeezeend",k),r.removeEventListener("end",j),r.removeEventListener("inputsourceschange",K);for(let te=0;te<E.length;te++){const me=A[te];me!==null&&(A[te]=null,E[te].disconnect(me))}F=null,W=null,M.reset(),e.setRenderTarget(_),g=null,m=null,p=null,r=null,w=null,Le.stop(),n.isPresenting=!1,e.setPixelRatio(P),e.setSize(N.width,N.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(te){s=te,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(te){c=te,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||o},this.setReferenceSpace=function(te){h=te},this.getBaseLayer=function(){return m!==null?m:g},this.getBinding=function(){return p},this.getFrame=function(){return x},this.getSession=function(){return r},this.setSession=async function(te){if(r=te,r!==null){if(_=e.getRenderTarget(),r.addEventListener("select",k),r.addEventListener("selectstart",k),r.addEventListener("selectend",k),r.addEventListener("squeeze",k),r.addEventListener("squeezestart",k),r.addEventListener("squeezeend",k),r.addEventListener("end",j),r.addEventListener("inputsourceschange",K),y.xrCompatible!==!0&&await t.makeXRCompatible(),P=e.getPixelRatio(),e.getSize(N),r.renderState.layers===void 0){const me={antialias:y.antialias,alpha:!0,depth:y.depth,stencil:y.stencil,framebufferScaleFactor:s};g=new XRWebGLLayer(r,t,me),r.updateRenderState({baseLayer:g}),e.setPixelRatio(1),e.setSize(g.framebufferWidth,g.framebufferHeight,!1),w=new tn(g.framebufferWidth,g.framebufferHeight,{format:jn,type:un,colorSpace:e.outputColorSpace,stencilBuffer:y.stencil})}else{let me=null,Ae=null,ye=null;y.depth&&(ye=y.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,me=y.stencil?Ts:Ss,Ae=y.stencil?Rs:zr);const Ye={colorFormat:t.RGBA8,depthFormat:ye,scaleFactor:s};p=new XRWebGLBinding(r,t),m=p.createProjectionLayer(Ye),r.updateRenderState({layers:[m]}),e.setPixelRatio(1),e.setSize(m.textureWidth,m.textureHeight,!1),w=new tn(m.textureWidth,m.textureHeight,{format:jn,type:un,depthTexture:new Au(m.textureWidth,m.textureHeight,Ae,void 0,void 0,void 0,void 0,void 0,void 0,me),stencilBuffer:y.stencil,colorSpace:e.outputColorSpace,samples:y.antialias?4:0});const tt=e.properties.get(w);tt.__ignoreDepthValues=m.ignoreDepthValues}w.isXRRenderTarget=!0,this.setFoveation(u),h=null,o=await r.requestReferenceSpace(c),Le.setContext(r),Le.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode};function K(te){for(let me=0;me<te.removed.length;me++){const Ae=te.removed[me],ye=A.indexOf(Ae);ye>=0&&(A[ye]=null,E[ye].disconnect(Ae))}for(let me=0;me<te.added.length;me++){const Ae=te.added[me];let ye=A.indexOf(Ae);if(ye===-1){for(let tt=0;tt<E.length;tt++)if(tt>=A.length){A.push(Ae),ye=tt;break}else if(A[tt]===null){A[tt]=Ae,ye=tt;break}if(ye===-1)break}const Ye=E[ye];Ye&&Ye.connect(Ae)}}const le=new D,ge=new D;function H(te,me,Ae){le.setFromMatrixPosition(me.matrixWorld),ge.setFromMatrixPosition(Ae.matrixWorld);const ye=le.distanceTo(ge),Ye=me.projectionMatrix.elements,tt=Ae.projectionMatrix.elements,Fe=Ye[14]/(Ye[10]-1),V=Ye[14]/(Ye[10]+1),ce=(Ye[9]+1)/Ye[5],re=(Ye[9]-1)/Ye[5],_e=(Ye[8]-1)/Ye[0],ve=(tt[8]+1)/tt[0],xe=Fe*_e,U=Fe*ve,R=ye/(-_e+ve),Y=R*-_e;me.matrixWorld.decompose(te.position,te.quaternion,te.scale),te.translateX(Y),te.translateZ(R),te.matrixWorld.compose(te.position,te.quaternion,te.scale),te.matrixWorldInverse.copy(te.matrixWorld).invert();const se=Fe+R,ue=V+R,de=xe-Y,Xe=U+(ye-Y),pe=ce*V/ue*se,ke=re*V/ue*se;te.projectionMatrix.makePerspective(de,Xe,pe,ke,se,ue),te.projectionMatrixInverse.copy(te.projectionMatrix).invert()}function Q(te,me){me===null?te.matrixWorld.copy(te.matrix):te.matrixWorld.multiplyMatrices(me.matrixWorld,te.matrix),te.matrixWorldInverse.copy(te.matrixWorld).invert()}this.updateCamera=function(te){if(r===null)return;M.texture!==null&&(te.near=M.depthNear,te.far=M.depthFar),b.near=B.near=I.near=te.near,b.far=B.far=I.far=te.far,(F!==b.near||W!==b.far)&&(r.updateRenderState({depthNear:b.near,depthFar:b.far}),F=b.near,W=b.far,I.near=F,I.far=W,B.near=F,B.far=W,I.updateProjectionMatrix(),B.updateProjectionMatrix(),te.updateProjectionMatrix());const me=te.parent,Ae=b.cameras;Q(b,me);for(let ye=0;ye<Ae.length;ye++)Q(Ae[ye],me);Ae.length===2?H(b,I,B):b.projectionMatrix.copy(I.projectionMatrix),Z(te,b,me)};function Z(te,me,Ae){Ae===null?te.matrix.copy(me.matrixWorld):(te.matrix.copy(Ae.matrixWorld),te.matrix.invert(),te.matrix.multiply(me.matrixWorld)),te.matrix.decompose(te.position,te.quaternion,te.scale),te.updateMatrixWorld(!0),te.projectionMatrix.copy(me.projectionMatrix),te.projectionMatrixInverse.copy(me.projectionMatrixInverse),te.isPerspectiveCamera&&(te.fov=La*2*Math.atan(1/te.projectionMatrix.elements[5]),te.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(m===null&&g===null))return u},this.setFoveation=function(te){u=te,m!==null&&(m.fixedFoveation=te),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=te)},this.hasDepthSensing=function(){return M.texture!==null};let fe=null;function we(te,me){if(f=me.getViewerPose(h||o),x=me,f!==null){const Ae=f.views;g!==null&&(e.setRenderTargetFramebuffer(w,g.framebuffer),e.setRenderTarget(w));let ye=!1;Ae.length!==b.cameras.length&&(b.cameras.length=0,ye=!0);for(let tt=0;tt<Ae.length;tt++){const Fe=Ae[tt];let V=null;if(g!==null)V=g.getViewport(Fe);else{const re=p.getViewSubImage(m,Fe);V=re.viewport,tt===0&&(e.setRenderTargetTextures(w,re.colorTexture,m.ignoreDepthValues?void 0:re.depthStencilTexture),e.setRenderTarget(w))}let ce=C[tt];ce===void 0&&(ce=new $t,ce.layers.enable(tt),ce.viewport=new It,C[tt]=ce),ce.matrix.fromArray(Fe.transform.matrix),ce.matrix.decompose(ce.position,ce.quaternion,ce.scale),ce.projectionMatrix.fromArray(Fe.projectionMatrix),ce.projectionMatrixInverse.copy(ce.projectionMatrix).invert(),ce.viewport.set(V.x,V.y,V.width,V.height),tt===0&&(b.matrix.copy(ce.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),ye===!0&&b.cameras.push(ce)}const Ye=r.enabledFeatures;if(Ye&&Ye.includes("depth-sensing")){const tt=p.getDepthInformation(Ae[0]);tt&&tt.isValid&&tt.texture&&M.init(e,tt,r.renderState)}}for(let Ae=0;Ae<E.length;Ae++){const ye=A[Ae],Ye=E[Ae];ye!==null&&Ye!==void 0&&Ye.update(ye,me,h||o)}M.render(e,b),fe&&fe(te,me),me.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:me}),x=null}const Le=new j_;Le.setAnimationLoop(we),this.setAnimationLoop=function(te){fe=te},this.dispose=function(){}}}const ss=new Kn,DA=new $e;function NA(i,e){function t(y,_){y.matrixAutoUpdate===!0&&y.updateMatrix(),_.value.copy(y.matrix)}function n(y,_){_.color.getRGB(y.fogColor.value,X_(i)),_.isFog?(y.fogNear.value=_.near,y.fogFar.value=_.far):_.isFogExp2&&(y.fogDensity.value=_.density)}function r(y,_,w,E,A){_.isMeshBasicMaterial||_.isMeshLambertMaterial?s(y,_):_.isMeshToonMaterial?(s(y,_),p(y,_)):_.isMeshPhongMaterial?(s(y,_),f(y,_)):_.isMeshStandardMaterial?(s(y,_),m(y,_),_.isMeshPhysicalMaterial&&g(y,_,A)):_.isMeshMatcapMaterial?(s(y,_),x(y,_)):_.isMeshDepthMaterial?s(y,_):_.isMeshDistanceMaterial?(s(y,_),M(y,_)):_.isMeshNormalMaterial?s(y,_):_.isLineBasicMaterial?(o(y,_),_.isLineDashedMaterial&&c(y,_)):_.isPointsMaterial?u(y,_,w,E):_.isSpriteMaterial?h(y,_):_.isShadowMaterial?(y.color.value.copy(_.color),y.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function s(y,_){y.opacity.value=_.opacity,_.color&&y.diffuse.value.copy(_.color),_.emissive&&y.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(y.map.value=_.map,t(_.map,y.mapTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.bumpMap&&(y.bumpMap.value=_.bumpMap,t(_.bumpMap,y.bumpMapTransform),y.bumpScale.value=_.bumpScale,_.side===fn&&(y.bumpScale.value*=-1)),_.normalMap&&(y.normalMap.value=_.normalMap,t(_.normalMap,y.normalMapTransform),y.normalScale.value.copy(_.normalScale),_.side===fn&&y.normalScale.value.negate()),_.displacementMap&&(y.displacementMap.value=_.displacementMap,t(_.displacementMap,y.displacementMapTransform),y.displacementScale.value=_.displacementScale,y.displacementBias.value=_.displacementBias),_.emissiveMap&&(y.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,y.emissiveMapTransform)),_.specularMap&&(y.specularMap.value=_.specularMap,t(_.specularMap,y.specularMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest);const w=e.get(_),E=w.envMap,A=w.envMapRotation;if(E&&(y.envMap.value=E,ss.copy(A),ss.x*=-1,ss.y*=-1,ss.z*=-1,E.isCubeTexture&&E.isRenderTargetTexture===!1&&(ss.y*=-1,ss.z*=-1),y.envMapRotation.value.setFromMatrix4(DA.makeRotationFromEuler(ss)),y.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,y.reflectivity.value=_.reflectivity,y.ior.value=_.ior,y.refractionRatio.value=_.refractionRatio),_.lightMap){y.lightMap.value=_.lightMap;const N=i._useLegacyLights===!0?Math.PI:1;y.lightMapIntensity.value=_.lightMapIntensity*N,t(_.lightMap,y.lightMapTransform)}_.aoMap&&(y.aoMap.value=_.aoMap,y.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,y.aoMapTransform))}function o(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,_.map&&(y.map.value=_.map,t(_.map,y.mapTransform))}function c(y,_){y.dashSize.value=_.dashSize,y.totalSize.value=_.dashSize+_.gapSize,y.scale.value=_.scale}function u(y,_,w,E){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.size.value=_.size*w,y.scale.value=E*.5,_.map&&(y.map.value=_.map,t(_.map,y.uvTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest)}function h(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.rotation.value=_.rotation,_.map&&(y.map.value=_.map,t(_.map,y.mapTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest)}function f(y,_){y.specular.value.copy(_.specular),y.shininess.value=Math.max(_.shininess,1e-4)}function p(y,_){_.gradientMap&&(y.gradientMap.value=_.gradientMap)}function m(y,_){y.metalness.value=_.metalness,_.metalnessMap&&(y.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,y.metalnessMapTransform)),y.roughness.value=_.roughness,_.roughnessMap&&(y.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,y.roughnessMapTransform)),_.envMap&&(y.envMapIntensity.value=_.envMapIntensity)}function g(y,_,w){y.ior.value=_.ior,_.sheen>0&&(y.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),y.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(y.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,y.sheenColorMapTransform)),_.sheenRoughnessMap&&(y.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,y.sheenRoughnessMapTransform))),_.clearcoat>0&&(y.clearcoat.value=_.clearcoat,y.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(y.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,y.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(y.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,y.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(y.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,y.clearcoatNormalMapTransform),y.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===fn&&y.clearcoatNormalScale.value.negate())),_.iridescence>0&&(y.iridescence.value=_.iridescence,y.iridescenceIOR.value=_.iridescenceIOR,y.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],y.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(y.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,y.iridescenceMapTransform)),_.iridescenceThicknessMap&&(y.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,y.iridescenceThicknessMapTransform))),_.transmission>0&&(y.transmission.value=_.transmission,y.transmissionSamplerMap.value=w.texture,y.transmissionSamplerSize.value.set(w.width,w.height),_.transmissionMap&&(y.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,y.transmissionMapTransform)),y.thickness.value=_.thickness,_.thicknessMap&&(y.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,y.thicknessMapTransform)),y.attenuationDistance.value=_.attenuationDistance,y.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(y.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(y.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,y.anisotropyMapTransform))),y.specularIntensity.value=_.specularIntensity,y.specularColor.value.copy(_.specularColor),_.specularColorMap&&(y.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,y.specularColorMapTransform)),_.specularIntensityMap&&(y.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,y.specularIntensityMapTransform))}function x(y,_){_.matcap&&(y.matcap.value=_.matcap)}function M(y,_){const w=e.get(_).light;y.referencePosition.value.setFromMatrixPosition(w.matrixWorld),y.nearDistance.value=w.shadow.camera.near,y.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:r}}function FA(i,e,t,n){let r={},s={},o=[];const c=i.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS);function u(w,E){const A=E.program;n.uniformBlockBinding(w,A)}function h(w,E){let A=r[w.id];A===void 0&&(x(w),A=f(w),r[w.id]=A,w.addEventListener("dispose",y));const N=E.program;n.updateUBOMapping(w,N);const P=e.render.frame;s[w.id]!==P&&(m(w),s[w.id]=P)}function f(w){const E=p();w.__bindingPointIndex=E;const A=i.createBuffer(),N=w.__size,P=w.usage;return i.bindBuffer(i.UNIFORM_BUFFER,A),i.bufferData(i.UNIFORM_BUFFER,N,P),i.bindBuffer(i.UNIFORM_BUFFER,null),i.bindBufferBase(i.UNIFORM_BUFFER,E,A),A}function p(){for(let w=0;w<c;w++)if(o.indexOf(w)===-1)return o.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(w){const E=r[w.id],A=w.uniforms,N=w.__cache;i.bindBuffer(i.UNIFORM_BUFFER,E);for(let P=0,I=A.length;P<I;P++){const B=Array.isArray(A[P])?A[P]:[A[P]];for(let C=0,b=B.length;C<b;C++){const F=B[C];if(g(F,P,C,N)===!0){const W=F.__offset,k=Array.isArray(F.value)?F.value:[F.value];let j=0;for(let K=0;K<k.length;K++){const le=k[K],ge=M(le);typeof le=="number"||typeof le=="boolean"?(F.__data[0]=le,i.bufferSubData(i.UNIFORM_BUFFER,W+j,F.__data)):le.isMatrix3?(F.__data[0]=le.elements[0],F.__data[1]=le.elements[1],F.__data[2]=le.elements[2],F.__data[3]=0,F.__data[4]=le.elements[3],F.__data[5]=le.elements[4],F.__data[6]=le.elements[5],F.__data[7]=0,F.__data[8]=le.elements[6],F.__data[9]=le.elements[7],F.__data[10]=le.elements[8],F.__data[11]=0):(le.toArray(F.__data,j),j+=ge.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(i.UNIFORM_BUFFER,W,F.__data)}}}i.bindBuffer(i.UNIFORM_BUFFER,null)}function g(w,E,A,N){const P=w.value,I=E+"_"+A;if(N[I]===void 0)return typeof P=="number"||typeof P=="boolean"?N[I]=P:N[I]=P.clone(),!0;{const B=N[I];if(typeof P=="number"||typeof P=="boolean"){if(B!==P)return N[I]=P,!0}else if(B.equals(P)===!1)return B.copy(P),!0}return!1}function x(w){const E=w.uniforms;let A=0;const N=16;for(let I=0,B=E.length;I<B;I++){const C=Array.isArray(E[I])?E[I]:[E[I]];for(let b=0,F=C.length;b<F;b++){const W=C[b],k=Array.isArray(W.value)?W.value:[W.value];for(let j=0,K=k.length;j<K;j++){const le=k[j],ge=M(le),H=A%N;H!==0&&N-H<ge.boundary&&(A+=N-H),W.__data=new Float32Array(ge.storage/Float32Array.BYTES_PER_ELEMENT),W.__offset=A,A+=ge.storage}}}const P=A%N;return P>0&&(A+=N-P),w.__size=A,w.__cache={},this}function M(w){const E={boundary:0,storage:0};return typeof w=="number"||typeof w=="boolean"?(E.boundary=4,E.storage=4):w.isVector2?(E.boundary=8,E.storage=8):w.isVector3||w.isColor?(E.boundary=16,E.storage=12):w.isVector4?(E.boundary=16,E.storage=16):w.isMatrix3?(E.boundary=48,E.storage=48):w.isMatrix4?(E.boundary=64,E.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),E}function y(w){const E=w.target;E.removeEventListener("dispose",y);const A=o.indexOf(E.__bindingPointIndex);o.splice(A,1),i.deleteBuffer(r[E.id]),delete r[E.id],delete s[E.id]}function _(){for(const w in r)i.deleteBuffer(r[w]);o=[],r={},s={}}return{bind:u,update:h,dispose:_}}class ix{constructor(e={}){const{canvas:t=k_(),context:n=null,depth:r=!0,stencil:s=!1,alpha:o=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:f="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");m=n.getContextAttributes().alpha}else m=o;const g=new Uint32Array(4),x=new Int32Array(4);let M=null,y=null;const _=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=yt,this._useLegacyLights=!1,this.toneMapping=Li,this.toneMappingExposure=1;const E=this;let A=!1,N=0,P=0,I=null,B=-1,C=null;const b=new It,F=new It;let W=null;const k=new Pe(0);let j=0,K=t.width,le=t.height,ge=1,H=null,Q=null;const Z=new It(0,0,K,le),fe=new It(0,0,K,le);let we=!1;const Le=new al;let te=!1,me=!1;const Ae=new $e,ye=new oe,Ye=new D,tt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Fe(){return I===null?ge:1}let V=n;function ce(L,q){const ee=t.getContext(L,q);return ee!==null?ee:null}try{const L={alpha:!0,depth:r,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:f,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Cs}`),t.addEventListener("webglcontextlost",Te,!1),t.addEventListener("webglcontextrestored",Ee,!1),t.addEventListener("webglcontextcreationerror",qe,!1),V===null){const q="webgl2";if(V=ce(q,L),V===null)throw ce(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(L){throw console.error("THREE.WebGLRenderer: "+L.message),L}let re,_e,ve,xe,U,R,Y,se,ue,de,Xe,pe,ke,je,Se,Ue,it,Oe,Be,mt,gt,Rt,Mt,zt;function Ve(){re=new jw(V),re.init(),_e=new Gw(V,re,e),Rt=new tx(V,re),ve=new bA(V),xe=new Qw(V),U=new mA,R=new CA(V,re,ve,U,_e,Rt,xe),Y=new Xw(E),se=new Zw(E),ue=new r1(V),Mt=new Hw(V,ue),de=new Jw(V,ue,xe,Mt),Xe=new eT(V,de,ue,xe),Be=new $w(V,_e,R),Ue=new Ww(U),pe=new pA(E,Y,se,re,_e,Mt,Ue),ke=new NA(E,U),je=new vA,Se=new EA(re),Oe=new kw(E,Y,se,ve,Xe,m,u),it=new AA(E,Xe,_e),zt=new FA(V,xe,_e,ve),mt=new Vw(V,re,xe),gt=new Kw(V,re,xe),xe.programs=pe.programs,E.capabilities=_e,E.extensions=re,E.properties=U,E.renderLists=je,E.shadowMap=it,E.state=ve,E.info=xe}Ve();const z=new UA(E,V);this.xr=z,this.getContext=function(){return V},this.getContextAttributes=function(){return V.getContextAttributes()},this.forceContextLoss=function(){const L=re.get("WEBGL_lose_context");L&&L.loseContext()},this.forceContextRestore=function(){const L=re.get("WEBGL_lose_context");L&&L.restoreContext()},this.getPixelRatio=function(){return ge},this.setPixelRatio=function(L){L!==void 0&&(ge=L,this.setSize(K,le,!1))},this.getSize=function(L){return L.set(K,le)},this.setSize=function(L,q,ee=!0){if(z.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}K=L,le=q,t.width=Math.floor(L*ge),t.height=Math.floor(q*ge),ee===!0&&(t.style.width=L+"px",t.style.height=q+"px"),this.setViewport(0,0,L,q)},this.getDrawingBufferSize=function(L){return L.set(K*ge,le*ge).floor()},this.setDrawingBufferSize=function(L,q,ee){K=L,le=q,ge=ee,t.width=Math.floor(L*ee),t.height=Math.floor(q*ee),this.setViewport(0,0,L,q)},this.getCurrentViewport=function(L){return L.copy(b)},this.getViewport=function(L){return L.copy(Z)},this.setViewport=function(L,q,ee,ne){L.isVector4?Z.set(L.x,L.y,L.z,L.w):Z.set(L,q,ee,ne),ve.viewport(b.copy(Z).multiplyScalar(ge).round())},this.getScissor=function(L){return L.copy(fe)},this.setScissor=function(L,q,ee,ne){L.isVector4?fe.set(L.x,L.y,L.z,L.w):fe.set(L,q,ee,ne),ve.scissor(F.copy(fe).multiplyScalar(ge).round())},this.getScissorTest=function(){return we},this.setScissorTest=function(L){ve.setScissorTest(we=L)},this.setOpaqueSort=function(L){H=L},this.setTransparentSort=function(L){Q=L},this.getClearColor=function(L){return L.copy(Oe.getClearColor())},this.setClearColor=function(){Oe.setClearColor.apply(Oe,arguments)},this.getClearAlpha=function(){return Oe.getClearAlpha()},this.setClearAlpha=function(){Oe.setClearAlpha.apply(Oe,arguments)},this.clear=function(L=!0,q=!0,ee=!0){let ne=0;if(L){let $=!1;if(I!==null){const Re=I.texture.format;$=Re===cp||Re===lp||Re===op}if($){const Re=I.texture.type,Ge=Re===un||Re===zr||Re===np||Re===Rs||Re===rp||Re===sp,Qe=Oe.getClearColor(),nt=Oe.getClearAlpha(),rt=Qe.r,et=Qe.g,st=Qe.b;Ge?(g[0]=rt,g[1]=et,g[2]=st,g[3]=nt,V.clearBufferuiv(V.COLOR,0,g)):(x[0]=rt,x[1]=et,x[2]=st,x[3]=nt,V.clearBufferiv(V.COLOR,0,x))}else ne|=V.COLOR_BUFFER_BIT}q&&(ne|=V.DEPTH_BUFFER_BIT),ee&&(ne|=V.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),V.clear(ne)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Te,!1),t.removeEventListener("webglcontextrestored",Ee,!1),t.removeEventListener("webglcontextcreationerror",qe,!1),je.dispose(),Se.dispose(),U.dispose(),Y.dispose(),se.dispose(),Xe.dispose(),Mt.dispose(),zt.dispose(),pe.dispose(),z.dispose(),z.removeEventListener("sessionstart",ei),z.removeEventListener("sessionend",ti),Qi.stop()};function Te(L){L.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),A=!0}function Ee(){console.log("THREE.WebGLRenderer: Context Restored."),A=!1;const L=xe.autoReset,q=it.enabled,ee=it.autoUpdate,ne=it.needsUpdate,$=it.type;Ve(),xe.autoReset=L,it.enabled=q,it.autoUpdate=ee,it.needsUpdate=ne,it.type=$}function qe(L){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",L.statusMessage)}function Je(L){const q=L.target;q.removeEventListener("dispose",Je),Dt(q)}function Dt(L){Ft(L),U.remove(L)}function Ft(L){const q=U.get(L).programs;q!==void 0&&(q.forEach(function(ee){pe.releaseProgram(ee)}),L.isShaderMaterial&&pe.releaseShaderCache(L))}this.renderBufferDirect=function(L,q,ee,ne,$,Re){q===null&&(q=tt);const Ge=$.isMesh&&$.matrixWorld.determinant()<0,Qe=Ku(L,q,ee,ne,$);ve.setMaterial(ne,Ge);let nt=ee.index,rt=1;if(ne.wireframe===!0){if(nt=de.getWireframeAttribute(ee),nt===void 0)return;rt=2}const et=ee.drawRange,st=ee.attributes.position;let Gt=et.start*rt,Dn=(et.start+et.count)*rt;Re!==null&&(Gt=Math.max(Gt,Re.start*rt),Dn=Math.min(Dn,(Re.start+Re.count)*rt)),nt!==null?(Gt=Math.max(Gt,0),Dn=Math.min(Dn,nt.count)):st!=null&&(Gt=Math.max(Gt,0),Dn=Math.min(Dn,st.count));const jt=Dn-Gt;if(jt<0||jt===1/0)return;Mt.setup($,ne,Qe,ee,nt);let Tn,Et=mt;if(nt!==null&&(Tn=ue.get(nt),Et=gt,Et.setIndex(Tn)),$.isMesh)ne.wireframe===!0?(ve.setLineWidth(ne.wireframeLinewidth*Fe()),Et.setMode(V.LINES)):Et.setMode(V.TRIANGLES);else if($.isLine){let De=ne.linewidth;De===void 0&&(De=1),ve.setLineWidth(De*Fe()),$.isLineSegments?Et.setMode(V.LINES):$.isLineLoop?Et.setMode(V.LINE_LOOP):Et.setMode(V.LINE_STRIP)}else $.isPoints?Et.setMode(V.POINTS):$.isSprite&&Et.setMode(V.TRIANGLES);if($.isBatchedMesh)Et.renderMultiDraw($._multiDrawStarts,$._multiDrawCounts,$._multiDrawCount);else if($.isInstancedMesh)Et.renderInstances(Gt,jt,$.count);else if(ee.isInstancedBufferGeometry){const De=ee._maxInstanceCount!==void 0?ee._maxInstanceCount:1/0,Lt=Math.min(ee.instanceCount,De);Et.renderInstances(Gt,jt,Lt)}else Et.render(Gt,jt)};function kt(L,q,ee){L.transparent===!0&&L.side===kn&&L.forceSinglePass===!1?(L.side=fn,L.needsUpdate=!0,Fi(L,q,ee),L.side=ji,L.needsUpdate=!0,Fi(L,q,ee),L.side=kn):Fi(L,q,ee)}this.compile=function(L,q,ee=null){ee===null&&(ee=L),y=Se.get(ee),y.init(),w.push(y),ee.traverseVisible(function($){$.isLight&&$.layers.test(q.layers)&&(y.pushLight($),$.castShadow&&y.pushShadow($))}),L!==ee&&L.traverseVisible(function($){$.isLight&&$.layers.test(q.layers)&&(y.pushLight($),$.castShadow&&y.pushShadow($))}),y.setupLights(E._useLegacyLights);const ne=new Set;return L.traverse(function($){const Re=$.material;if(Re)if(Array.isArray(Re))for(let Ge=0;Ge<Re.length;Ge++){const Qe=Re[Ge];kt(Qe,ee,$),ne.add(Qe)}else kt(Re,ee,$),ne.add(Re)}),w.pop(),y=null,ne},this.compileAsync=function(L,q,ee=null){const ne=this.compile(L,q,ee);return new Promise($=>{function Re(){if(ne.forEach(function(Ge){U.get(Ge).currentProgram.isReady()&&ne.delete(Ge)}),ne.size===0){$(L);return}setTimeout(Re,10)}re.get("KHR_parallel_shader_compile")!==null?Re():setTimeout(Re,10)})};let _n=null;function Nt(L){_n&&_n(L)}function ei(){Qi.stop()}function ti(){Qi.start()}const Qi=new j_;Qi.setAnimationLoop(Nt),typeof self<"u"&&Qi.setContext(self),this.setAnimationLoop=function(L){_n=L,z.setAnimationLoop(L),L===null?Qi.stop():Qi.start()},z.addEventListener("sessionstart",ei),z.addEventListener("sessionend",ti),this.render=function(L,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(A===!0)return;L.matrixWorldAutoUpdate===!0&&L.updateMatrixWorld(),q.parent===null&&q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),z.enabled===!0&&z.isPresenting===!0&&(z.cameraAutoUpdate===!0&&z.updateCamera(q),q=z.getCamera()),L.isScene===!0&&L.onBeforeRender(E,L,q,I),y=Se.get(L,w.length),y.init(),w.push(y),Ae.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),Le.setFromProjectionMatrix(Ae),me=this.localClippingEnabled,te=Ue.init(this.clippingPlanes,me),M=je.get(L,_.length),M.init(),_.push(M),ml(L,q,0,E.sortObjects),M.finish(),E.sortObjects===!0&&M.sort(H,Q),this.info.render.frame++,te===!0&&Ue.beginShadows();const ee=y.state.shadowsArray;if(it.render(ee,L,q),te===!0&&Ue.endShadows(),this.info.autoReset===!0&&this.info.reset(),(z.enabled===!1||z.isPresenting===!1||z.hasDepthSensing()===!1)&&Oe.render(M,L),y.setupLights(E._useLegacyLights),q.isArrayCamera){const ne=q.cameras;for(let $=0,Re=ne.length;$<Re;$++){const Ge=ne[$];gl(M,L,Ge,Ge.viewport)}}else gl(M,L,q);I!==null&&(R.updateMultisampleRenderTarget(I),R.updateRenderTargetMipmap(I)),L.isScene===!0&&L.onAfterRender(E,L,q),Mt.resetDefaultState(),B=-1,C=null,w.pop(),w.length>0?y=w[w.length-1]:y=null,_.pop(),_.length>0?M=_[_.length-1]:M=null};function ml(L,q,ee,ne){if(L.visible===!1)return;if(L.layers.test(q.layers)){if(L.isGroup)ee=L.renderOrder;else if(L.isLOD)L.autoUpdate===!0&&L.update(q);else if(L.isLight)y.pushLight(L),L.castShadow&&y.pushShadow(L);else if(L.isSprite){if(!L.frustumCulled||Le.intersectsSprite(L)){ne&&Ye.setFromMatrixPosition(L.matrixWorld).applyMatrix4(Ae);const Ge=Xe.update(L),Qe=L.material;Qe.visible&&M.push(L,Ge,Qe,ee,Ye.z,null)}}else if((L.isMesh||L.isLine||L.isPoints)&&(!L.frustumCulled||Le.intersectsObject(L))){const Ge=Xe.update(L),Qe=L.material;if(ne&&(L.boundingSphere!==void 0?(L.boundingSphere===null&&L.computeBoundingSphere(),Ye.copy(L.boundingSphere.center)):(Ge.boundingSphere===null&&Ge.computeBoundingSphere(),Ye.copy(Ge.boundingSphere.center)),Ye.applyMatrix4(L.matrixWorld).applyMatrix4(Ae)),Array.isArray(Qe)){const nt=Ge.groups;for(let rt=0,et=nt.length;rt<et;rt++){const st=nt[rt],Gt=Qe[st.materialIndex];Gt&&Gt.visible&&M.push(L,Ge,Gt,ee,Ye.z,st)}}else Qe.visible&&M.push(L,Ge,Qe,ee,Ye.z,null)}}const Re=L.children;for(let Ge=0,Qe=Re.length;Ge<Qe;Ge++)ml(Re[Ge],q,ee,ne)}function gl(L,q,ee,ne){const $=L.opaque,Re=L.transmissive,Ge=L.transparent;y.setupLightsView(ee),te===!0&&Ue.setGlobalState(E.clippingPlanes,ee),Re.length>0&&vl($,Re,q,ee),ne&&ve.viewport(b.copy(ne)),$.length>0&&mr($,q,ee),Re.length>0&&mr(Re,q,ee),Ge.length>0&&mr(Ge,q,ee),ve.buffers.depth.setTest(!0),ve.buffers.depth.setMask(!0),ve.buffers.color.setMask(!0),ve.setPolygonOffset(!1)}function vl(L,q,ee,ne){if((ee.isScene===!0?ee.overrideMaterial:null)!==null)return;if(y.state.transmissionRenderTarget===null){y.state.transmissionRenderTarget=new tn(1,1,{generateMipmaps:!0,type:re.has("EXT_color_buffer_half_float")||re.has("EXT_color_buffer_float")?Ia:un,minFilter:Xi,samples:4,stencilBuffer:s});const rt=U.get(y.state.transmissionRenderTarget);rt.__isTransmissionRenderTarget=!0}const Re=y.state.transmissionRenderTarget;E.getDrawingBufferSize(ye),Re.setSize(ye.x,ye.y);const Ge=E.getRenderTarget();E.setRenderTarget(Re),E.getClearColor(k),j=E.getClearAlpha(),j<1&&E.setClearColor(16777215,.5),E.clear();const Qe=E.toneMapping;E.toneMapping=Li,mr(L,ee,ne),R.updateMultisampleRenderTarget(Re),R.updateRenderTargetMipmap(Re);let nt=!1;for(let rt=0,et=q.length;rt<et;rt++){const st=q[rt],Gt=st.object,Dn=st.geometry,jt=st.material,Tn=st.group;if(jt.side===kn&&Gt.layers.test(ne.layers)){const Et=jt.side;jt.side=fn,jt.needsUpdate=!0,_l(Gt,ee,ne,Dn,jt,Tn),jt.side=Et,jt.needsUpdate=!0,nt=!0}}nt===!0&&(R.updateMultisampleRenderTarget(Re),R.updateRenderTargetMipmap(Re)),E.setRenderTarget(Ge),E.setClearColor(k,j),E.toneMapping=Qe}function mr(L,q,ee){const ne=q.isScene===!0?q.overrideMaterial:null;for(let $=0,Re=L.length;$<Re;$++){const Ge=L[$],Qe=Ge.object,nt=Ge.geometry,rt=ne===null?Ge.material:ne,et=Ge.group;Qe.layers.test(ee.layers)&&_l(Qe,q,ee,nt,rt,et)}}function _l(L,q,ee,ne,$,Re){L.onBeforeRender(E,q,ee,ne,$,Re),L.modelViewMatrix.multiplyMatrices(ee.matrixWorldInverse,L.matrixWorld),L.normalMatrix.getNormalMatrix(L.modelViewMatrix),$.onBeforeRender(E,q,ee,ne,L,Re),$.transparent===!0&&$.side===kn&&$.forceSinglePass===!1?($.side=fn,$.needsUpdate=!0,E.renderBufferDirect(ee,q,ne,$,L,Re),$.side=ji,$.needsUpdate=!0,E.renderBufferDirect(ee,q,ne,$,L,Re),$.side=kn):E.renderBufferDirect(ee,q,ne,$,L,Re),L.onAfterRender(E,q,ee,ne,$,Re)}function Fi(L,q,ee){q.isScene!==!0&&(q=tt);const ne=U.get(L),$=y.state.lights,Re=y.state.shadowsArray,Ge=$.state.version,Qe=pe.getParameters(L,$.state,Re,q,ee),nt=pe.getProgramCacheKey(Qe);let rt=ne.programs;ne.environment=L.isMeshStandardMaterial?q.environment:null,ne.fog=q.fog,ne.envMap=(L.isMeshStandardMaterial?se:Y).get(L.envMap||ne.environment),ne.envMapRotation=ne.environment!==null&&L.envMap===null?q.environmentRotation:L.envMapRotation,rt===void 0&&(L.addEventListener("dispose",Je),rt=new Map,ne.programs=rt);let et=rt.get(nt);if(et!==void 0){if(ne.currentProgram===et&&ne.lightsStateVersion===Ge)return yl(L,Qe),et}else Qe.uniforms=pe.getUniforms(L),L.onBuild(ee,Qe,E),L.onBeforeCompile(Qe,E),et=pe.acquireProgram(Qe,nt),rt.set(nt,et),ne.uniforms=Qe.uniforms;const st=ne.uniforms;return(!L.isShaderMaterial&&!L.isRawShaderMaterial||L.clipping===!0)&&(st.clippingPlanes=Ue.uniform),yl(L,Qe),ne.needsLights=$u(L),ne.lightsStateVersion=Ge,ne.needsLights&&(st.ambientLightColor.value=$.state.ambient,st.lightProbe.value=$.state.probe,st.directionalLights.value=$.state.directional,st.directionalLightShadows.value=$.state.directionalShadow,st.spotLights.value=$.state.spot,st.spotLightShadows.value=$.state.spotShadow,st.rectAreaLights.value=$.state.rectArea,st.ltc_1.value=$.state.rectAreaLTC1,st.ltc_2.value=$.state.rectAreaLTC2,st.pointLights.value=$.state.point,st.pointLightShadows.value=$.state.pointShadow,st.hemisphereLights.value=$.state.hemi,st.directionalShadowMap.value=$.state.directionalShadowMap,st.directionalShadowMatrix.value=$.state.directionalShadowMatrix,st.spotShadowMap.value=$.state.spotShadowMap,st.spotLightMatrix.value=$.state.spotLightMatrix,st.spotLightMap.value=$.state.spotLightMap,st.pointShadowMap.value=$.state.pointShadowMap,st.pointShadowMatrix.value=$.state.pointShadowMatrix),ne.currentProgram=et,ne.uniformsList=null,et}function xl(L){if(L.uniformsList===null){const q=L.currentProgram.getUniforms();L.uniformsList=mu.seqWithValue(q.seq,L.uniforms)}return L.uniformsList}function yl(L,q){const ee=U.get(L);ee.outputColorSpace=q.outputColorSpace,ee.batching=q.batching,ee.instancing=q.instancing,ee.instancingColor=q.instancingColor,ee.instancingMorph=q.instancingMorph,ee.skinning=q.skinning,ee.morphTargets=q.morphTargets,ee.morphNormals=q.morphNormals,ee.morphColors=q.morphColors,ee.morphTargetsCount=q.morphTargetsCount,ee.numClippingPlanes=q.numClippingPlanes,ee.numIntersection=q.numClipIntersection,ee.vertexAlphas=q.vertexAlphas,ee.vertexTangents=q.vertexTangents,ee.toneMapping=q.toneMapping}function Ku(L,q,ee,ne,$){q.isScene!==!0&&(q=tt),R.resetTextureUnits();const Re=q.fog,Ge=ne.isMeshStandardMaterial?q.environment:null,Qe=I===null?E.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:Ui,nt=(ne.isMeshStandardMaterial?se:Y).get(ne.envMap||Ge),rt=ne.vertexColors===!0&&!!ee.attributes.color&&ee.attributes.color.itemSize===4,et=!!ee.attributes.tangent&&(!!ne.normalMap||ne.anisotropy>0),st=!!ee.morphAttributes.position,Gt=!!ee.morphAttributes.normal,Dn=!!ee.morphAttributes.color;let jt=Li;ne.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(jt=E.toneMapping);const Tn=ee.morphAttributes.position||ee.morphAttributes.normal||ee.morphAttributes.color,Et=Tn!==void 0?Tn.length:0,De=U.get(ne),Lt=y.state.lights;if(te===!0&&(me===!0||L!==C)){const Nn=L===C&&ne.id===B;Ue.setState(ne,L,Nn)}let _t=!1;ne.version===De.__version?(De.needsLights&&De.lightsStateVersion!==Lt.state.version||De.outputColorSpace!==Qe||$.isBatchedMesh&&De.batching===!1||!$.isBatchedMesh&&De.batching===!0||$.isInstancedMesh&&De.instancing===!1||!$.isInstancedMesh&&De.instancing===!0||$.isSkinnedMesh&&De.skinning===!1||!$.isSkinnedMesh&&De.skinning===!0||$.isInstancedMesh&&De.instancingColor===!0&&$.instanceColor===null||$.isInstancedMesh&&De.instancingColor===!1&&$.instanceColor!==null||$.isInstancedMesh&&De.instancingMorph===!0&&$.morphTexture===null||$.isInstancedMesh&&De.instancingMorph===!1&&$.morphTexture!==null||De.envMap!==nt||ne.fog===!0&&De.fog!==Re||De.numClippingPlanes!==void 0&&(De.numClippingPlanes!==Ue.numPlanes||De.numIntersection!==Ue.numIntersection)||De.vertexAlphas!==rt||De.vertexTangents!==et||De.morphTargets!==st||De.morphNormals!==Gt||De.morphColors!==Dn||De.toneMapping!==jt||De.morphTargetsCount!==Et)&&(_t=!0):(_t=!0,De.__version=ne.version);let Wt=De.currentProgram;_t===!0&&(Wt=Fi(ne,q,$));let En=!1,ni=!1,Oi=!1;const Pt=Wt.getUniforms(),ii=De.uniforms;if(ve.useProgram(Wt.program)&&(En=!0,ni=!0,Oi=!0),ne.id!==B&&(B=ne.id,ni=!0),En||C!==L){Pt.setValue(V,"projectionMatrix",L.projectionMatrix),Pt.setValue(V,"viewMatrix",L.matrixWorldInverse);const Nn=Pt.map.cameraPosition;Nn!==void 0&&Nn.setValue(V,Ye.setFromMatrixPosition(L.matrixWorld)),_e.logarithmicDepthBuffer&&Pt.setValue(V,"logDepthBufFC",2/(Math.log(L.far+1)/Math.LN2)),(ne.isMeshPhongMaterial||ne.isMeshToonMaterial||ne.isMeshLambertMaterial||ne.isMeshBasicMaterial||ne.isMeshStandardMaterial||ne.isShaderMaterial)&&Pt.setValue(V,"isOrthographic",L.isOrthographicCamera===!0),C!==L&&(C=L,ni=!0,Oi=!0)}if($.isSkinnedMesh){Pt.setOptional(V,$,"bindMatrix"),Pt.setOptional(V,$,"bindMatrixInverse");const Nn=$.skeleton;Nn&&(Nn.boneTexture===null&&Nn.computeBoneTexture(),Pt.setValue(V,"boneTexture",Nn.boneTexture,R))}$.isBatchedMesh&&(Pt.setOptional(V,$,"batchingTexture"),Pt.setValue(V,"batchingTexture",$._matricesTexture,R));const Fs=ee.morphAttributes;if((Fs.position!==void 0||Fs.normal!==void 0||Fs.color!==void 0)&&Be.update($,ee,Wt),(ni||De.receiveShadow!==$.receiveShadow)&&(De.receiveShadow=$.receiveShadow,Pt.setValue(V,"receiveShadow",$.receiveShadow)),ne.isMeshGouraudMaterial&&ne.envMap!==null&&(ii.envMap.value=nt,ii.flipEnvMap.value=nt.isCubeTexture&&nt.isRenderTargetTexture===!1?-1:1),ne.isMeshStandardMaterial&&ne.envMap===null&&q.environment!==null&&(ii.envMapIntensity.value=q.environmentIntensity),ni&&(Pt.setValue(V,"toneMappingExposure",E.toneMappingExposure),De.needsLights&&Qu(ii,Oi),Re&&ne.fog===!0&&ke.refreshFogUniforms(ii,Re),ke.refreshMaterialUniforms(ii,ne,ge,le,y.state.transmissionRenderTarget),mu.upload(V,xl(De),ii,R)),ne.isShaderMaterial&&ne.uniformsNeedUpdate===!0&&(mu.upload(V,xl(De),ii,R),ne.uniformsNeedUpdate=!1),ne.isSpriteMaterial&&Pt.setValue(V,"center",$.center),Pt.setValue(V,"modelViewMatrix",$.modelViewMatrix),Pt.setValue(V,"normalMatrix",$.normalMatrix),Pt.setValue(V,"modelMatrix",$.matrixWorld),ne.isShaderMaterial||ne.isRawShaderMaterial){const Nn=ne.uniformsGroups;for(let gr=0,Sl=Nn.length;gr<Sl;gr++){const Wn=Nn[gr];zt.update(Wn,Wt),zt.bind(Wn,Wt)}}return Wt}function Qu(L,q){L.ambientLightColor.needsUpdate=q,L.lightProbe.needsUpdate=q,L.directionalLights.needsUpdate=q,L.directionalLightShadows.needsUpdate=q,L.pointLights.needsUpdate=q,L.pointLightShadows.needsUpdate=q,L.spotLights.needsUpdate=q,L.spotLightShadows.needsUpdate=q,L.rectAreaLights.needsUpdate=q,L.hemisphereLights.needsUpdate=q}function $u(L){return L.isMeshLambertMaterial||L.isMeshToonMaterial||L.isMeshPhongMaterial||L.isMeshStandardMaterial||L.isShadowMaterial||L.isShaderMaterial&&L.lights===!0}this.getActiveCubeFace=function(){return N},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(L,q,ee){U.get(L.texture).__webglTexture=q,U.get(L.depthTexture).__webglTexture=ee;const ne=U.get(L);ne.__hasExternalTextures=!0,ne.__autoAllocateDepthBuffer=ee===void 0,ne.__autoAllocateDepthBuffer||re.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ne.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(L,q){const ee=U.get(L);ee.__webglFramebuffer=q,ee.__useDefaultFramebuffer=q===void 0},this.setRenderTarget=function(L,q=0,ee=0){I=L,N=q,P=ee;let ne=!0,$=null,Re=!1,Ge=!1;if(L){const nt=U.get(L);nt.__useDefaultFramebuffer!==void 0?(ve.bindFramebuffer(V.FRAMEBUFFER,null),ne=!1):nt.__webglFramebuffer===void 0?R.setupRenderTarget(L):nt.__hasExternalTextures&&R.rebindTextures(L,U.get(L.texture).__webglTexture,U.get(L.depthTexture).__webglTexture);const rt=L.texture;(rt.isData3DTexture||rt.isDataArrayTexture||rt.isCompressedArrayTexture)&&(Ge=!0);const et=U.get(L).__webglFramebuffer;L.isWebGLCubeRenderTarget?(Array.isArray(et[q])?$=et[q][ee]:$=et[q],Re=!0):L.samples>0&&R.useMultisampledRTT(L)===!1?$=U.get(L).__webglMultisampledFramebuffer:Array.isArray(et)?$=et[ee]:$=et,b.copy(L.viewport),F.copy(L.scissor),W=L.scissorTest}else b.copy(Z).multiplyScalar(ge).floor(),F.copy(fe).multiplyScalar(ge).floor(),W=we;if(ve.bindFramebuffer(V.FRAMEBUFFER,$)&&ne&&ve.drawBuffers(L,$),ve.viewport(b),ve.scissor(F),ve.setScissorTest(W),Re){const nt=U.get(L.texture);V.framebufferTexture2D(V.FRAMEBUFFER,V.COLOR_ATTACHMENT0,V.TEXTURE_CUBE_MAP_POSITIVE_X+q,nt.__webglTexture,ee)}else if(Ge){const nt=U.get(L.texture),rt=q||0;V.framebufferTextureLayer(V.FRAMEBUFFER,V.COLOR_ATTACHMENT0,nt.__webglTexture,ee||0,rt)}B=-1},this.readRenderTargetPixels=function(L,q,ee,ne,$,Re,Ge){if(!(L&&L.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Qe=U.get(L).__webglFramebuffer;if(L.isWebGLCubeRenderTarget&&Ge!==void 0&&(Qe=Qe[Ge]),Qe){ve.bindFramebuffer(V.FRAMEBUFFER,Qe);try{const nt=L.texture,rt=nt.format,et=nt.type;if(rt!==jn&&Rt.convert(rt)!==V.getParameter(V.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const st=et===Ia&&(re.has("EXT_color_buffer_half_float")||re.has("EXT_color_buffer_float"));if(et!==un&&Rt.convert(et)!==V.getParameter(V.IMPLEMENTATION_COLOR_READ_TYPE)&&et!==hi&&!st){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=L.width-ne&&ee>=0&&ee<=L.height-$&&V.readPixels(q,ee,ne,$,Rt.convert(rt),Rt.convert(et),Re)}finally{const nt=I!==null?U.get(I).__webglFramebuffer:null;ve.bindFramebuffer(V.FRAMEBUFFER,nt)}}},this.copyFramebufferToTexture=function(L,q,ee=0){const ne=Math.pow(2,-ee),$=Math.floor(q.image.width*ne),Re=Math.floor(q.image.height*ne);R.setTexture2D(q,0),V.copyTexSubImage2D(V.TEXTURE_2D,ee,0,0,L.x,L.y,$,Re),ve.unbindTexture()},this.copyTextureToTexture=function(L,q,ee,ne=0){const $=q.image.width,Re=q.image.height,Ge=Rt.convert(ee.format),Qe=Rt.convert(ee.type);R.setTexture2D(ee,0),V.pixelStorei(V.UNPACK_FLIP_Y_WEBGL,ee.flipY),V.pixelStorei(V.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ee.premultiplyAlpha),V.pixelStorei(V.UNPACK_ALIGNMENT,ee.unpackAlignment),q.isDataTexture?V.texSubImage2D(V.TEXTURE_2D,ne,L.x,L.y,$,Re,Ge,Qe,q.image.data):q.isCompressedTexture?V.compressedTexSubImage2D(V.TEXTURE_2D,ne,L.x,L.y,q.mipmaps[0].width,q.mipmaps[0].height,Ge,q.mipmaps[0].data):V.texSubImage2D(V.TEXTURE_2D,ne,L.x,L.y,Ge,Qe,q.image),ne===0&&ee.generateMipmaps&&V.generateMipmap(V.TEXTURE_2D),ve.unbindTexture()},this.copyTextureToTexture3D=function(L,q,ee,ne,$=0){const Re=Math.round(L.max.x-L.min.x),Ge=Math.round(L.max.y-L.min.y),Qe=L.max.z-L.min.z+1,nt=Rt.convert(ne.format),rt=Rt.convert(ne.type);let et;if(ne.isData3DTexture)R.setTexture3D(ne,0),et=V.TEXTURE_3D;else if(ne.isDataArrayTexture||ne.isCompressedArrayTexture)R.setTexture2DArray(ne,0),et=V.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}V.pixelStorei(V.UNPACK_FLIP_Y_WEBGL,ne.flipY),V.pixelStorei(V.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ne.premultiplyAlpha),V.pixelStorei(V.UNPACK_ALIGNMENT,ne.unpackAlignment);const st=V.getParameter(V.UNPACK_ROW_LENGTH),Gt=V.getParameter(V.UNPACK_IMAGE_HEIGHT),Dn=V.getParameter(V.UNPACK_SKIP_PIXELS),jt=V.getParameter(V.UNPACK_SKIP_ROWS),Tn=V.getParameter(V.UNPACK_SKIP_IMAGES),Et=ee.isCompressedTexture?ee.mipmaps[$]:ee.image;V.pixelStorei(V.UNPACK_ROW_LENGTH,Et.width),V.pixelStorei(V.UNPACK_IMAGE_HEIGHT,Et.height),V.pixelStorei(V.UNPACK_SKIP_PIXELS,L.min.x),V.pixelStorei(V.UNPACK_SKIP_ROWS,L.min.y),V.pixelStorei(V.UNPACK_SKIP_IMAGES,L.min.z),ee.isDataTexture||ee.isData3DTexture?V.texSubImage3D(et,$,q.x,q.y,q.z,Re,Ge,Qe,nt,rt,Et.data):ne.isCompressedArrayTexture?V.compressedTexSubImage3D(et,$,q.x,q.y,q.z,Re,Ge,Qe,nt,Et.data):V.texSubImage3D(et,$,q.x,q.y,q.z,Re,Ge,Qe,nt,rt,Et),V.pixelStorei(V.UNPACK_ROW_LENGTH,st),V.pixelStorei(V.UNPACK_IMAGE_HEIGHT,Gt),V.pixelStorei(V.UNPACK_SKIP_PIXELS,Dn),V.pixelStorei(V.UNPACK_SKIP_ROWS,jt),V.pixelStorei(V.UNPACK_SKIP_IMAGES,Tn),$===0&&ne.generateMipmaps&&V.generateMipmap(et),ve.unbindTexture()},this.initTexture=function(L){L.isCubeTexture?R.setTextureCube(L,0):L.isData3DTexture?R.setTexture3D(L,0):L.isDataArrayTexture||L.isCompressedArrayTexture?R.setTexture2DArray(L,0):R.setTexture2D(L,0),ve.unbindTexture()},this.resetState=function(){N=0,P=0,I=null,ve.reset(),Mt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return qi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===wu?"display-p3":"srgb",t.unpackColorSpace=Ut.workingColorSpace===rl?"display-p3":"srgb"}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class Cu{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Pe(e),this.density=t}clone(){return new Cu(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Ru{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Pe(e),this.near=t,this.far=n}clone(){return new Ru(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}let Da=class extends Ct{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Kn,this.environmentIntensity=1,this.environmentRotation=new Kn,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}};class Pu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Xo,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=fi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return H_("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let r=0,s=this.stride;r<s;r++)this.array[e+r]=t.array[n+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=fi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=fi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Bn=new D;class As{constructor(e,t,n,r=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Bn.fromBufferAttribute(this,t),Bn.applyMatrix4(e),this.setXYZ(t,Bn.x,Bn.y,Bn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Bn.fromBufferAttribute(this,t),Bn.applyNormalMatrix(e),this.setXYZ(t,Bn.x,Bn.y,Bn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Bn.fromBufferAttribute(this,t),Bn.transformDirection(e),this.setXYZ(t,Bn.x,Bn.y,Bn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Hn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ct(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Hn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Hn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Hn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Hn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),r=ct(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=ct(t,this.array),n=ct(n,this.array),r=ct(r,this.array),s=ct(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return new St(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new As(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class yp extends vn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Pe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let ha;const go=new D,fa=new D,da=new D,pa=new oe,vo=new oe,rx=new $e,Nc=new D,_o=new D,Fc=new D,pv=new oe,Pf=new oe,mv=new oe;class sx extends Ct{constructor(e=new yp){if(super(),this.isSprite=!0,this.type="Sprite",ha===void 0){ha=new ut;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Pu(t,5);ha.setIndex([0,1,2,0,2,3]),ha.setAttribute("position",new As(n,3,0,!1)),ha.setAttribute("uv",new As(n,2,3,!1))}this.geometry=ha,this.material=e,this.center=new oe(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),fa.setFromMatrixScale(this.matrixWorld),rx.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),da.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&fa.multiplyScalar(-da.z);const n=this.material.rotation;let r,s;n!==0&&(s=Math.cos(n),r=Math.sin(n));const o=this.center;Oc(Nc.set(-.5,-.5,0),da,o,fa,r,s),Oc(_o.set(.5,-.5,0),da,o,fa,r,s),Oc(Fc.set(.5,.5,0),da,o,fa,r,s),pv.set(0,0),Pf.set(1,0),mv.set(1,1);let c=e.ray.intersectTriangle(Nc,_o,Fc,!1,go);if(c===null&&(Oc(_o.set(-.5,.5,0),da,o,fa,r,s),Pf.set(0,1),c=e.ray.intersectTriangle(Nc,Fc,_o,!1,go),c===null))return;const u=e.ray.origin.distanceTo(go);u<e.near||u>e.far||t.push({distance:u,point:go.clone(),uv:ui.getInterpolation(go,Nc,_o,Fc,pv,Pf,mv,new oe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Oc(i,e,t,n,r,s){pa.subVectors(i,t).addScalar(.5).multiply(n),r!==void 0?(vo.x=s*pa.x-r*pa.y,vo.y=r*pa.x+s*pa.y):vo.copy(pa),i.copy(e),i.x+=vo.x,i.y+=vo.y,i.applyMatrix4(rx)}const Bc=new D,gv=new D;class ax extends Ct{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,r=t.length;n<r;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const r=this.levels;let s;for(s=0;s<r.length&&!(t<r[s].distance);s++);return r.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,r;for(n=1,r=t.length;n<r;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Bc.setFromMatrixPosition(this.matrixWorld);const r=e.ray.origin.distanceTo(Bc);this.getObjectForDistance(r).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Bc.setFromMatrixPosition(e.matrixWorld),gv.setFromMatrixPosition(this.matrixWorld);const n=Bc.distanceTo(gv)/e.zoom;t[0].object.visible=!0;let r,s;for(r=1,s=t.length;r<s;r++){let o=t[r].distance;if(t[r].object.visible&&(o-=o*t[r].hysteresis),n>=o)t[r-1].object.visible=!1,t[r].object.visible=!0;else break}for(this._currentLevel=r-1;r<s;r++)t[r].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let r=0,s=n.length;r<s;r++){const o=n[r];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const vv=new D,_v=new It,xv=new It,OA=new D,yv=new $e,zc=new D,If=new Un,Sv=new $e,Lf=new za;class ox extends an{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=fd,this.bindMatrix=new $e,this.bindMatrixInverse=new $e,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Vn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,zc),this.boundingBox.expandByPoint(zc)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Un),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,zc),this.boundingSphere.expandByPoint(zc)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,r=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),If.copy(this.boundingSphere),If.applyMatrix4(r),e.ray.intersectsSphere(If)!==!1&&(Sv.copy(r).invert(),Lf.copy(e.ray).applyMatrix4(Sv),!(this.boundingBox!==null&&Lf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Lf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new It,t=this.geometry.attributes.skinWeight;for(let n=0,r=t.count;n<r;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===fd?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===v_?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,r=this.geometry;_v.fromBufferAttribute(r.attributes.skinIndex,e),xv.fromBufferAttribute(r.attributes.skinWeight,e),vv.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=xv.getComponent(s);if(o!==0){const c=_v.getComponent(s);yv.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(OA.copy(vv).applyMatrix4(yv),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Sp extends Ct{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Or extends Bt{constructor(e=null,t=1,n=1,r,s,o,c,u,h=en,f=en,p,m){super(null,o,c,u,h,f,r,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Mv=new $e,BA=new $e;class Iu{constructor(e=[],t=[]){this.uuid=fi(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,r=this.bones.length;n<r;n++)this.boneInverses.push(new $e)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new $e;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const c=e[s]?e[s].matrixWorld:BA;Mv.multiplyMatrices(c,t[s]),Mv.toArray(n,s*16)}r!==null&&(r.needsUpdate=!0)}clone(){return new Iu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Or(t,e,e,jn,hi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const r=this.bones[t];if(r.name===e)return r}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,r=e.bones.length;n<r;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new Sp),this.bones.push(o),this.boneInverses.push(new $e().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let r=0,s=t.length;r<s;r++){const o=t[r];e.bones.push(o.uuid);const c=n[r];e.boneInverses.push(c.toArray())}return e}}class Na extends St{constructor(e,t,n,r=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const ma=new $e,Ev=new $e,kc=[],wv=new Vn,zA=new $e,xo=new an,yo=new Un;class lx extends an{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Na(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let r=0;r<n;r++)this.setMatrixAt(r,zA)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Vn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ma),wv.copy(e.boundingBox).applyMatrix4(ma),this.boundingBox.union(wv)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Un),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ma),yo.copy(e.boundingSphere).applyMatrix4(ma),this.boundingSphere.union(yo)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,r=this.morphTexture.source.data.data,s=n.length+1,o=e*s+1;for(let c=0;c<n.length;c++)n[c]=r[o+c]}raycast(e,t){const n=this.matrixWorld,r=this.count;if(xo.geometry=this.geometry,xo.material=this.material,xo.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),yo.copy(this.boundingSphere),yo.applyMatrix4(n),e.ray.intersectsSphere(yo)!==!1))for(let s=0;s<r;s++){this.getMatrixAt(s,ma),Ev.multiplyMatrices(n,ma),xo.matrixWorld=Ev,xo.raycast(e,kc);for(let o=0,c=kc.length;o<c;o++){const u=kc[o];u.instanceId=s,u.object=this,t.push(u)}kc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Na(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,r=n.length+1;this.morphTexture===null&&(this.morphTexture=new Or(new Float32Array(r*this.count),r,this.count,ap,hi));const s=this.morphTexture.source.data.data;let o=0;for(let h=0;h<n.length;h++)o+=n[h];const c=this.geometry.morphTargetsRelative?1:1-o,u=r*e;s[u]=c,s.set(n,u+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}function kA(i,e){return i.z-e.z}function HA(i,e){return e.z-i.z}class VA{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t){const n=this.pool,r=this.list;this.index>=n.length&&n.push({start:-1,count:-1,z:-1});const s=n[this.index];r.push(s),this.index++,s.start=e.start,s.count=e.count,s.z=t}reset(){this.list.length=0,this.index=0}}const ga="batchId",Ir=new $e,Tv=new $e,GA=new $e,Av=new $e,Uf=new al,Hc=new Vn,as=new Un,So=new D,Df=new VA,Ln=new an,Vc=[];function WA(i,e,t=0){const n=e.itemSize;if(i.isInterleavedBufferAttribute||i.array.constructor!==e.array.constructor){const r=i.count;for(let s=0;s<r;s++)for(let o=0;o<n;o++)e.setComponent(s+t,o,i.getComponent(s,o))}else e.array.set(i.array,t*n);e.needsUpdate=!0}class cx extends an{get maxGeometryCount(){return this._maxGeometryCount}constructor(e,t,n=t*2,r){super(new ut,r),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawRanges=[],this._reservedRanges=[],this._visibility=[],this._active=[],this._bounds=[],this._maxGeometryCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._visibilityChanged=!0,this._matricesTexture=null,this._initMatricesTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxGeometryCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new Or(t,e,e,jn,hi);this._matricesTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,r=this._maxGeometryCount,s=this._maxIndexCount;if(this._geometryInitialized===!1){for(const c in e.attributes){const u=e.getAttribute(c),{array:h,itemSize:f,normalized:p}=u,m=new h.constructor(n*f),g=new St(m,f,p);t.setAttribute(c,g)}if(e.getIndex()!==null){const c=n>65536?new Uint32Array(s):new Uint16Array(s);t.setIndex(new St(c,1))}const o=r>65536?new Uint32Array(n):new Uint16Array(n);t.setAttribute(ga,new St(o,1)),this._geometryInitialized=!0}}_validateGeometry(e){if(e.getAttribute(ga))throw new Error(`BatchedMesh: Geometry cannot use attribute "${ga}"`);const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(n===ga)continue;if(!e.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const r=e.getAttribute(n),s=t.getAttribute(n);if(r.itemSize!==s.itemSize||r.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Vn);const e=this._geometryCount,t=this.boundingBox,n=this._active;t.makeEmpty();for(let r=0;r<e;r++)n[r]!==!1&&(this.getMatrixAt(r,Ir),this.getBoundingBoxAt(r,Hc).applyMatrix4(Ir),t.union(Hc))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Un);const e=this._geometryCount,t=this.boundingSphere,n=this._active;t.makeEmpty();for(let r=0;r<e;r++)n[r]!==!1&&(this.getMatrixAt(r,Ir),this.getBoundingSphereAt(r,as).applyMatrix4(Ir),t.union(as))}addGeometry(e,t=-1,n=-1){if(this._initializeGeometry(e),this._validateGeometry(e),this._geometryCount>=this._maxGeometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");const r={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let s=null;const o=this._reservedRanges,c=this._drawRanges,u=this._bounds;this._geometryCount!==0&&(s=o[o.length-1]),t===-1?r.vertexCount=e.getAttribute("position").count:r.vertexCount=t,s===null?r.vertexStart=0:r.vertexStart=s.vertexStart+s.vertexCount;const h=e.getIndex(),f=h!==null;if(f&&(n===-1?r.indexCount=h.count:r.indexCount=n,s===null?r.indexStart=0:r.indexStart=s.indexStart+s.indexCount),r.indexStart!==-1&&r.indexStart+r.indexCount>this._maxIndexCount||r.vertexStart+r.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const p=this._visibility,m=this._active,g=this._matricesTexture,x=this._matricesTexture.image.data;p.push(!0),m.push(!0);const M=this._geometryCount;this._geometryCount++,GA.toArray(x,M*16),g.needsUpdate=!0,o.push(r),c.push({start:f?r.indexStart:r.vertexStart,count:-1}),u.push({boxInitialized:!1,box:new Vn,sphereInitialized:!1,sphere:new Un});const y=this.geometry.getAttribute(ga);for(let _=0;_<r.vertexCount;_++)y.setX(r.vertexStart+_,M);return y.needsUpdate=!0,this.setGeometryAt(M,e),M}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,r=n.getIndex()!==null,s=n.getIndex(),o=t.getIndex(),c=this._reservedRanges[e];if(r&&o.count>c.indexCount||t.attributes.position.count>c.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const u=c.vertexStart,h=c.vertexCount;for(const g in n.attributes){if(g===ga)continue;const x=t.getAttribute(g),M=n.getAttribute(g);WA(x,M,u);const y=x.itemSize;for(let _=x.count,w=h;_<w;_++){const E=u+_;for(let A=0;A<y;A++)M.setComponent(E,A,0)}M.needsUpdate=!0,M.addUpdateRange(u*y,h*y)}if(r){const g=c.indexStart;for(let x=0;x<o.count;x++)s.setX(g+x,u+o.getX(x));for(let x=o.count,M=c.indexCount;x<M;x++)s.setX(g+x,u);s.needsUpdate=!0,s.addUpdateRange(g,c.indexCount)}const f=this._bounds[e];t.boundingBox!==null?(f.box.copy(t.boundingBox),f.boxInitialized=!0):f.boxInitialized=!1,t.boundingSphere!==null?(f.sphere.copy(t.boundingSphere),f.sphereInitialized=!0):f.sphereInitialized=!1;const p=this._drawRanges[e],m=t.getAttribute("position");return p.count=r?o.count:m.count,this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._active;return e>=t.length||t[e]===!1?this:(t[e]=!1,this._visibilityChanged=!0,this)}getBoundingBoxAt(e,t){if(this._active[e]===!1)return null;const r=this._bounds[e],s=r.box,o=this.geometry;if(r.boxInitialized===!1){s.makeEmpty();const c=o.index,u=o.attributes.position,h=this._drawRanges[e];for(let f=h.start,p=h.start+h.count;f<p;f++){let m=f;c&&(m=c.getX(m)),s.expandByPoint(So.fromBufferAttribute(u,m))}r.boxInitialized=!0}return t.copy(s),t}getBoundingSphereAt(e,t){if(this._active[e]===!1)return null;const r=this._bounds[e],s=r.sphere,o=this.geometry;if(r.sphereInitialized===!1){s.makeEmpty(),this.getBoundingBoxAt(e,Hc),Hc.getCenter(s.center);const c=o.index,u=o.attributes.position,h=this._drawRanges[e];let f=0;for(let p=h.start,m=h.start+h.count;p<m;p++){let g=p;c&&(g=c.getX(g)),So.fromBufferAttribute(u,g),f=Math.max(f,s.center.distanceToSquared(So))}s.radius=Math.sqrt(f),r.sphereInitialized=!0}return t.copy(s),t}setMatrixAt(e,t){const n=this._active,r=this._matricesTexture,s=this._matricesTexture.image.data,o=this._geometryCount;return e>=o||n[e]===!1?this:(t.toArray(s,e*16),r.needsUpdate=!0,this)}getMatrixAt(e,t){const n=this._active,r=this._matricesTexture.image.data,s=this._geometryCount;return e>=s||n[e]===!1?null:t.fromArray(r,e*16)}setVisibleAt(e,t){const n=this._visibility,r=this._active,s=this._geometryCount;return e>=s||r[e]===!1||n[e]===t?this:(n[e]=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._visibility,n=this._active,r=this._geometryCount;return e>=r||n[e]===!1?!1:t[e]}raycast(e,t){const n=this._visibility,r=this._active,s=this._drawRanges,o=this._geometryCount,c=this.matrixWorld,u=this.geometry;Ln.material=this.material,Ln.geometry.index=u.index,Ln.geometry.attributes=u.attributes,Ln.geometry.boundingBox===null&&(Ln.geometry.boundingBox=new Vn),Ln.geometry.boundingSphere===null&&(Ln.geometry.boundingSphere=new Un);for(let h=0;h<o;h++){if(!n[h]||!r[h])continue;const f=s[h];Ln.geometry.setDrawRange(f.start,f.count),this.getMatrixAt(h,Ln.matrixWorld).premultiply(c),this.getBoundingBoxAt(h,Ln.geometry.boundingBox),this.getBoundingSphereAt(h,Ln.geometry.boundingSphere),Ln.raycast(e,Vc);for(let p=0,m=Vc.length;p<m;p++){const g=Vc[p];g.object=this,g.batchId=h,t.push(g)}Vc.length=0}Ln.material=null,Ln.geometry.index=null,Ln.geometry.attributes={},Ln.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map(t=>({...t})),this._reservedRanges=e._reservedRanges.map(t=>({...t})),this._visibility=e._visibility.slice(),this._active=e._active.slice(),this._bounds=e._bounds.map(t=>({boxInitialized:t.boxInitialized,box:t.box.clone(),sphereInitialized:t.sphereInitialized,sphere:t.sphere.clone()})),this._maxGeometryCount=e._maxGeometryCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.slice(),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this}onBeforeRender(e,t,n,r,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=r.getIndex(),c=o===null?1:o.array.BYTES_PER_ELEMENT,u=this._active,h=this._visibility,f=this._multiDrawStarts,p=this._multiDrawCounts,m=this._drawRanges,g=this.perObjectFrustumCulled;g&&(Av.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Uf.setFromProjectionMatrix(Av,e.coordinateSystem));let x=0;if(this.sortObjects){Tv.copy(this.matrixWorld).invert(),So.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Tv);for(let _=0,w=h.length;_<w;_++)if(h[_]&&u[_]){this.getMatrixAt(_,Ir),this.getBoundingSphereAt(_,as).applyMatrix4(Ir);let E=!1;if(g&&(E=!Uf.intersectsSphere(as)),!E){const A=So.distanceTo(as.center);Df.push(m[_],A)}}const M=Df.list,y=this.customSort;y===null?M.sort(s.transparent?HA:kA):y.call(this,M,n);for(let _=0,w=M.length;_<w;_++){const E=M[_];f[x]=E.start*c,p[x]=E.count,x++}Df.reset()}else for(let M=0,y=h.length;M<y;M++)if(h[M]&&u[M]){let _=!1;if(g&&(this.getMatrixAt(M,Ir),this.getBoundingSphereAt(M,as).applyMatrix4(Ir),_=!Uf.intersectsSphere(as)),!_){const w=m[M];f[x]=w.start*c,p[x]=w.count,x++}}this._multiDrawCount=x,this._visibilityChanged=!1}onBeforeShadow(e,t,n,r,s,o){this.onBeforeRender(e,null,r,s,o)}}class Gn extends vn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Pe(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const bv=new D,Cv=new D,Rv=new $e,Nf=new za,Gc=new Un;class kr extends Ct{constructor(e=new ut,t=new Gn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let r=1,s=t.count;r<s;r++)bv.fromBufferAttribute(t,r-1),Cv.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=bv.distanceTo(Cv);e.setAttribute("lineDistance",new ze(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Gc.copy(n.boundingSphere),Gc.applyMatrix4(r),Gc.radius+=s,e.ray.intersectsSphere(Gc)===!1)return;Rv.copy(r).invert(),Nf.copy(e.ray).applyMatrix4(Rv);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new D,f=new D,p=new D,m=new D,g=this.isLineSegments?2:1,x=n.index,y=n.attributes.position;if(x!==null){const _=Math.max(0,o.start),w=Math.min(x.count,o.start+o.count);for(let E=_,A=w-1;E<A;E+=g){const N=x.getX(E),P=x.getX(E+1);if(h.fromBufferAttribute(y,N),f.fromBufferAttribute(y,P),Nf.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const B=e.ray.origin.distanceTo(m);B<e.near||B>e.far||t.push({distance:B,point:p.clone().applyMatrix4(this.matrixWorld),index:E,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,o.start),w=Math.min(y.count,o.start+o.count);for(let E=_,A=w-1;E<A;E+=g){if(h.fromBufferAttribute(y,E),f.fromBufferAttribute(y,E+1),Nf.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const P=e.ray.origin.distanceTo(m);P<e.near||P>e.far||t.push({distance:P,point:p.clone().applyMatrix4(this.matrixWorld),index:E,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const c=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const Pv=new D,Iv=new D;class Ki extends kr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let r=0,s=t.count;r<s;r+=2)Pv.fromBufferAttribute(t,r),Iv.fromBufferAttribute(t,r+1),n[r]=r===0?0:n[r-1],n[r+1]=n[r]+Pv.distanceTo(Iv);e.setAttribute("lineDistance",new ze(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class ux extends kr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Mp extends vn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Pe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Lv=new $e,Vd=new za,Wc=new Un,Xc=new D;class hx extends Ct{constructor(e=new ut,t=new Mp){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Wc.copy(n.boundingSphere),Wc.applyMatrix4(r),Wc.radius+=s,e.ray.intersectsSphere(Wc)===!1)return;Lv.copy(r).invert(),Vd.copy(e.ray).applyMatrix4(Lv);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,o.start),g=Math.min(h.count,o.start+o.count);for(let x=m,M=g;x<M;x++){const y=h.getX(x);Xc.fromBufferAttribute(p,y),Uv(Xc,y,u,r,e,t,this)}}else{const m=Math.max(0,o.start),g=Math.min(p.count,o.start+o.count);for(let x=m,M=g;x<M;x++)Xc.fromBufferAttribute(p,x),Uv(Xc,x,u,r,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const c=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function Uv(i,e,t,n,r,s,o){const c=Vd.distanceSqToPoint(i);if(c<t){const u=new D;Vd.closestPointToPoint(i,u),u.applyMatrix4(n);const h=r.ray.origin.distanceTo(u);if(h<r.near||h>r.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:o})}}class XA extends Bt{constructor(e,t,n,r,s,o,c,u,h){super(e,t,n,r,s,o,c,u,h),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:qt,this.magFilter=s!==void 0?s:qt,this.generateMipmaps=!1;const f=this;function p(){f.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class qA extends Bt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=en,this.minFilter=en,this.generateMipmaps=!1,this.needsUpdate=!0}}class Lu extends Bt{constructor(e,t,n,r,s,o,c,u,h,f,p,m){super(null,o,c,u,h,f,r,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class YA extends Lu{constructor(e,t,n,r,s,o){super(e,t,n,s,o),this.isCompressedArrayTexture=!0,this.image.depth=r,this.wrapR=Mi}}class ZA extends Lu{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,dr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class jA extends Bt{constructor(e,t,n,r,s,o,c,u,h){super(e,t,n,r,s,o,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Di{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,r=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(r),t.push(s),r=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let r=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(r=Math.floor(c+(u-c)/2),h=n[r]-o,h<0)c=r+1;else if(h>0)u=r-1;else{u=r;break}if(r=u,n[r]===o)return r/(s-1);const f=n[r],m=n[r+1]-f,g=(o-f)/m;return(r+g)/(s-1)}getTangent(e,t){let r=e-1e-4,s=e+1e-4;r<0&&(r=0),s>1&&(s=1);const o=this.getPoint(r),c=this.getPoint(s),u=t||(o.isVector2?new oe:new D);return u.copy(c).sub(o).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new D,r=[],s=[],o=[],c=new D,u=new $e;for(let g=0;g<=e;g++){const x=g/e;r[g]=this.getTangentAt(x,new D)}s[0]=new D,o[0]=new D;let h=Number.MAX_VALUE;const f=Math.abs(r[0].x),p=Math.abs(r[0].y),m=Math.abs(r[0].z);f<=h&&(h=f,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(r[0],n).normalize(),s[0].crossVectors(r[0],c),o[0].crossVectors(r[0],s[0]);for(let g=1;g<=e;g++){if(s[g]=s[g-1].clone(),o[g]=o[g-1].clone(),c.crossVectors(r[g-1],r[g]),c.length()>Number.EPSILON){c.normalize();const x=Math.acos(Qt(r[g-1].dot(r[g]),-1,1));s[g].applyMatrix4(u.makeRotationAxis(c,x))}o[g].crossVectors(r[g],s[g])}if(t===!0){let g=Math.acos(Qt(s[0].dot(s[e]),-1,1));g/=e,r[0].dot(c.crossVectors(s[0],s[e]))>0&&(g=-g);for(let x=1;x<=e;x++)s[x].applyMatrix4(u.makeRotationAxis(r[x],g*x)),o[x].crossVectors(r[x],s[x])}return{tangents:r,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Uu extends Di{constructor(e=0,t=0,n=1,r=1,s=0,o=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=c,this.aRotation=u}getPoint(e,t=new oe){const n=t,r=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=r;for(;s>r;)s-=r;s<Number.EPSILON&&(o?s=0:s=r),this.aClockwise===!0&&!o&&(s===r?s=-r:s=s-r);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const f=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,g=h-this.aY;u=m*f-g*p+this.aX,h=m*p+g*f+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class fx extends Uu{constructor(e,t,n,r,s,o){super(e,t,n,n,r,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Ep(){let i=0,e=0,t=0,n=0;function r(s,o,c,u){i=s,e=c,t=-3*s+3*o-2*c-u,n=2*s-2*o+c+u}return{initCatmullRom:function(s,o,c,u,h){r(o,c,h*(c-s),h*(u-o))},initNonuniformCatmullRom:function(s,o,c,u,h,f,p){let m=(o-s)/h-(c-s)/(h+f)+(c-o)/f,g=(c-o)/f-(u-o)/(f+p)+(u-c)/p;m*=f,g*=f,r(o,c,m,g)},calc:function(s){const o=s*s,c=o*s;return i+e*s+t*o+n*c}}}const qc=new D,Ff=new Ep,Of=new Ep,Bf=new Ep;class dx extends Di{constructor(e=[],t=!1,n="centripetal",r=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=r}getPoint(e,t=new D){const n=t,r=this.points,s=r.length,o=(s-(this.closed?0:1))*e;let c=Math.floor(o),u=o-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,f;this.closed||c>0?h=r[(c-1)%s]:(qc.subVectors(r[0],r[1]).add(r[0]),h=qc);const p=r[c%s],m=r[(c+1)%s];if(this.closed||c+2<s?f=r[(c+2)%s]:(qc.subVectors(r[s-1],r[s-2]).add(r[s-1]),f=qc),this.curveType==="centripetal"||this.curveType==="chordal"){const g=this.curveType==="chordal"?.5:.25;let x=Math.pow(h.distanceToSquared(p),g),M=Math.pow(p.distanceToSquared(m),g),y=Math.pow(m.distanceToSquared(f),g);M<1e-4&&(M=1),x<1e-4&&(x=M),y<1e-4&&(y=M),Ff.initNonuniformCatmullRom(h.x,p.x,m.x,f.x,x,M,y),Of.initNonuniformCatmullRom(h.y,p.y,m.y,f.y,x,M,y),Bf.initNonuniformCatmullRom(h.z,p.z,m.z,f.z,x,M,y)}else this.curveType==="catmullrom"&&(Ff.initCatmullRom(h.x,p.x,m.x,f.x,this.tension),Of.initCatmullRom(h.y,p.y,m.y,f.y,this.tension),Bf.initCatmullRom(h.z,p.z,m.z,f.z,this.tension));return n.set(Ff.calc(u),Of.calc(u),Bf.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(new D().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Dv(i,e,t,n,r){const s=(n-e)*.5,o=(r-t)*.5,c=i*i,u=i*c;return(2*t-2*n+s+o)*u+(-3*t+3*n-2*s-o)*c+s*i+t}function JA(i,e){const t=1-i;return t*t*e}function KA(i,e){return 2*(1-i)*i*e}function QA(i,e){return i*i*e}function Lo(i,e,t,n){return JA(i,e)+KA(i,t)+QA(i,n)}function $A(i,e){const t=1-i;return t*t*t*e}function eb(i,e){const t=1-i;return 3*t*t*i*e}function tb(i,e){return 3*(1-i)*i*i*e}function nb(i,e){return i*i*i*e}function Uo(i,e,t,n,r){return $A(i,e)+eb(i,t)+tb(i,n)+nb(i,r)}class wp extends Di{constructor(e=new oe,t=new oe,n=new oe,r=new oe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new oe){const n=t,r=this.v0,s=this.v1,o=this.v2,c=this.v3;return n.set(Uo(e,r.x,s.x,o.x,c.x),Uo(e,r.y,s.y,o.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class px extends Di{constructor(e=new D,t=new D,n=new D,r=new D){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new D){const n=t,r=this.v0,s=this.v1,o=this.v2,c=this.v3;return n.set(Uo(e,r.x,s.x,o.x,c.x),Uo(e,r.y,s.y,o.y,c.y),Uo(e,r.z,s.z,o.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Tp extends Di{constructor(e=new oe,t=new oe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new oe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new oe){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class mx extends Di{constructor(e=new D,t=new D){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new D){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new D){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ap extends Di{constructor(e=new oe,t=new oe,n=new oe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new oe){const n=t,r=this.v0,s=this.v1,o=this.v2;return n.set(Lo(e,r.x,s.x,o.x),Lo(e,r.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class bp extends Di{constructor(e=new D,t=new D,n=new D){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new D){const n=t,r=this.v0,s=this.v1,o=this.v2;return n.set(Lo(e,r.x,s.x,o.x),Lo(e,r.y,s.y,o.y),Lo(e,r.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Cp extends Di{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new oe){const n=t,r=this.points,s=(r.length-1)*e,o=Math.floor(s),c=s-o,u=r[o===0?o:o-1],h=r[o],f=r[o>r.length-2?r.length-1:o+1],p=r[o>r.length-3?r.length-1:o+2];return n.set(Dv(c,u.x,h.x,f.x,p.x),Dv(c,u.y,h.y,f.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(new oe().fromArray(r))}return this}}var xu=Object.freeze({__proto__:null,ArcCurve:fx,CatmullRomCurve3:dx,CubicBezierCurve:wp,CubicBezierCurve3:px,EllipseCurve:Uu,LineCurve:Tp,LineCurve3:mx,QuadraticBezierCurve:Ap,QuadraticBezierCurve3:bp,SplineCurve:Cp});class gx extends Di{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new xu[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),r=this.getCurveLengths();let s=0;for(;s<r.length;){if(r[s]>=n){const o=r[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-o/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let r=0,s=this.curves;r<s.length;r++){const o=s[r],c=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,u=o.getPoints(c);for(let h=0;h<u.length;h++){const f=u[h];n&&n.equals(f)||(t.push(f),n=f)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const r=this.curves[t];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const r=e.curves[t];this.curves.push(new xu[r.type]().fromJSON(r))}return this}}class Zo extends gx{constructor(e){super(),this.type="Path",this.currentPoint=new oe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Tp(this.currentPoint.clone(),new oe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,r){const s=new Ap(this.currentPoint.clone(),new oe(e,t),new oe(n,r));return this.curves.push(s),this.currentPoint.set(n,r),this}bezierCurveTo(e,t,n,r,s,o){const c=new wp(this.currentPoint.clone(),new oe(e,t),new oe(n,r),new oe(s,o));return this.curves.push(c),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Cp(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,r,s,o){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,r,s,o),this}absarc(e,t,n,r,s,o){return this.absellipse(e,t,n,n,r,s,o),this}ellipse(e,t,n,r,s,o,c,u){const h=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(e+h,t+f,n,r,s,o,c,u),this}absellipse(e,t,n,r,s,o,c,u){const h=new Uu(e,t,n,r,s,o,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const f=h.getPoint(1);return this.currentPoint.copy(f),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class ol extends ut{constructor(e=[new oe(0,-.5),new oe(.5,0),new oe(0,.5)],t=12,n=0,r=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=Math.floor(t),r=Qt(r,0,Math.PI*2);const s=[],o=[],c=[],u=[],h=[],f=1/t,p=new D,m=new oe,g=new D,x=new D,M=new D;let y=0,_=0;for(let w=0;w<=e.length-1;w++)switch(w){case 0:y=e[w+1].x-e[w].x,_=e[w+1].y-e[w].y,g.x=_*1,g.y=-y,g.z=_*0,M.copy(g),g.normalize(),u.push(g.x,g.y,g.z);break;case e.length-1:u.push(M.x,M.y,M.z);break;default:y=e[w+1].x-e[w].x,_=e[w+1].y-e[w].y,g.x=_*1,g.y=-y,g.z=_*0,x.copy(g),g.x+=M.x,g.y+=M.y,g.z+=M.z,g.normalize(),u.push(g.x,g.y,g.z),M.copy(x)}for(let w=0;w<=t;w++){const E=n+w*f*r,A=Math.sin(E),N=Math.cos(E);for(let P=0;P<=e.length-1;P++){p.x=e[P].x*A,p.y=e[P].y,p.z=e[P].x*N,o.push(p.x,p.y,p.z),m.x=w/t,m.y=P/(e.length-1),c.push(m.x,m.y);const I=u[3*P+0]*A,B=u[3*P+1],C=u[3*P+0]*N;h.push(I,B,C)}}for(let w=0;w<t;w++)for(let E=0;E<e.length-1;E++){const A=E+w*e.length,N=A,P=A+e.length,I=A+e.length+1,B=A+1;s.push(N,P,B),s.push(I,B,P)}this.setIndex(s),this.setAttribute("position",new ze(o,3)),this.setAttribute("uv",new ze(c,2)),this.setAttribute("normal",new ze(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ol(e.points,e.segments,e.phiStart,e.phiLength)}}class Du extends ol{constructor(e=1,t=1,n=4,r=8){const s=new Zo;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),r),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:r}}static fromJSON(e){return new Du(e.radius,e.length,e.capSegments,e.radialSegments)}}class Nu extends ut{constructor(e=1,t=32,n=0,r=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},t=Math.max(3,t);const s=[],o=[],c=[],u=[],h=new D,f=new oe;o.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const g=n+p/t*r;h.x=e*Math.cos(g),h.y=e*Math.sin(g),o.push(h.x,h.y,h.z),c.push(0,0,1),f.x=(o[m]/e+1)/2,f.y=(o[m+1]/e+1)/2,u.push(f.x,f.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new ze(o,3)),this.setAttribute("normal",new ze(c,3)),this.setAttribute("uv",new ze(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Nu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Ga extends ut{constructor(e=1,t=1,n=1,r=32,s=1,o=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:c,thetaLength:u};const h=this;r=Math.floor(r),s=Math.floor(s);const f=[],p=[],m=[],g=[];let x=0;const M=[],y=n/2;let _=0;w(),o===!1&&(e>0&&E(!0),t>0&&E(!1)),this.setIndex(f),this.setAttribute("position",new ze(p,3)),this.setAttribute("normal",new ze(m,3)),this.setAttribute("uv",new ze(g,2));function w(){const A=new D,N=new D;let P=0;const I=(t-e)/n;for(let B=0;B<=s;B++){const C=[],b=B/s,F=b*(t-e)+e;for(let W=0;W<=r;W++){const k=W/r,j=k*u+c,K=Math.sin(j),le=Math.cos(j);N.x=F*K,N.y=-b*n+y,N.z=F*le,p.push(N.x,N.y,N.z),A.set(K,I,le).normalize(),m.push(A.x,A.y,A.z),g.push(k,1-b),C.push(x++)}M.push(C)}for(let B=0;B<r;B++)for(let C=0;C<s;C++){const b=M[C][B],F=M[C+1][B],W=M[C+1][B+1],k=M[C][B+1];f.push(b,F,k),f.push(F,W,k),P+=6}h.addGroup(_,P,0),_+=P}function E(A){const N=x,P=new oe,I=new D;let B=0;const C=A===!0?e:t,b=A===!0?1:-1;for(let W=1;W<=r;W++)p.push(0,y*b,0),m.push(0,b,0),g.push(.5,.5),x++;const F=x;for(let W=0;W<=r;W++){const j=W/r*u+c,K=Math.cos(j),le=Math.sin(j);I.x=C*le,I.y=y*b,I.z=C*K,p.push(I.x,I.y,I.z),m.push(0,b,0),P.x=K*.5+.5,P.y=le*.5*b+.5,g.push(P.x,P.y),x++}for(let W=0;W<r;W++){const k=N+W,j=F+W;A===!0?f.push(j,j+1,k):f.push(j+1,j,k),B+=3}h.addGroup(_,B,A===!0?1:2),_+=B}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ga(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Fu extends Ga{constructor(e=1,t=1,n=32,r=1,s=!1,o=0,c=Math.PI*2){super(0,e,t,n,r,s,o,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:c}}static fromJSON(e){return new Fu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Gr extends ut{constructor(e=[],t=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r};const s=[],o=[];c(r),h(n),f(),this.setAttribute("position",new ze(s,3)),this.setAttribute("normal",new ze(s.slice(),3)),this.setAttribute("uv",new ze(o,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function c(w){const E=new D,A=new D,N=new D;for(let P=0;P<t.length;P+=3)g(t[P+0],E),g(t[P+1],A),g(t[P+2],N),u(E,A,N,w)}function u(w,E,A,N){const P=N+1,I=[];for(let B=0;B<=P;B++){I[B]=[];const C=w.clone().lerp(A,B/P),b=E.clone().lerp(A,B/P),F=P-B;for(let W=0;W<=F;W++)W===0&&B===P?I[B][W]=C:I[B][W]=C.clone().lerp(b,W/F)}for(let B=0;B<P;B++)for(let C=0;C<2*(P-B)-1;C++){const b=Math.floor(C/2);C%2===0?(m(I[B][b+1]),m(I[B+1][b]),m(I[B][b])):(m(I[B][b+1]),m(I[B+1][b+1]),m(I[B+1][b]))}}function h(w){const E=new D;for(let A=0;A<s.length;A+=3)E.x=s[A+0],E.y=s[A+1],E.z=s[A+2],E.normalize().multiplyScalar(w),s[A+0]=E.x,s[A+1]=E.y,s[A+2]=E.z}function f(){const w=new D;for(let E=0;E<s.length;E+=3){w.x=s[E+0],w.y=s[E+1],w.z=s[E+2];const A=y(w)/2/Math.PI+.5,N=_(w)/Math.PI+.5;o.push(A,1-N)}x(),p()}function p(){for(let w=0;w<o.length;w+=6){const E=o[w+0],A=o[w+2],N=o[w+4],P=Math.max(E,A,N),I=Math.min(E,A,N);P>.9&&I<.1&&(E<.2&&(o[w+0]+=1),A<.2&&(o[w+2]+=1),N<.2&&(o[w+4]+=1))}}function m(w){s.push(w.x,w.y,w.z)}function g(w,E){const A=w*3;E.x=e[A+0],E.y=e[A+1],E.z=e[A+2]}function x(){const w=new D,E=new D,A=new D,N=new D,P=new oe,I=new oe,B=new oe;for(let C=0,b=0;C<s.length;C+=9,b+=6){w.set(s[C+0],s[C+1],s[C+2]),E.set(s[C+3],s[C+4],s[C+5]),A.set(s[C+6],s[C+7],s[C+8]),P.set(o[b+0],o[b+1]),I.set(o[b+2],o[b+3]),B.set(o[b+4],o[b+5]),N.copy(w).add(E).add(A).divideScalar(3);const F=y(N);M(P,b+0,w,F),M(I,b+2,E,F),M(B,b+4,A,F)}}function M(w,E,A,N){N<0&&w.x===1&&(o[E]=w.x-1),A.x===0&&A.z===0&&(o[E]=N/2/Math.PI+.5)}function y(w){return Math.atan2(w.z,-w.x)}function _(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Gr(e.vertices,e.indices,e.radius,e.details)}}class Ou extends Gr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,r=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ou(e.radius,e.detail)}}const Yc=new D,Zc=new D,zf=new D,jc=new ui;class vx extends ut{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const r=Math.pow(10,4),s=Math.cos(Ms*t),o=e.getIndex(),c=e.getAttribute("position"),u=o?o.count:c.count,h=[0,0,0],f=["a","b","c"],p=new Array(3),m={},g=[];for(let x=0;x<u;x+=3){o?(h[0]=o.getX(x),h[1]=o.getX(x+1),h[2]=o.getX(x+2)):(h[0]=x,h[1]=x+1,h[2]=x+2);const{a:M,b:y,c:_}=jc;if(M.fromBufferAttribute(c,h[0]),y.fromBufferAttribute(c,h[1]),_.fromBufferAttribute(c,h[2]),jc.getNormal(zf),p[0]=`${Math.round(M.x*r)},${Math.round(M.y*r)},${Math.round(M.z*r)}`,p[1]=`${Math.round(y.x*r)},${Math.round(y.y*r)},${Math.round(y.z*r)}`,p[2]=`${Math.round(_.x*r)},${Math.round(_.y*r)},${Math.round(_.z*r)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let w=0;w<3;w++){const E=(w+1)%3,A=p[w],N=p[E],P=jc[f[w]],I=jc[f[E]],B=`${A}_${N}`,C=`${N}_${A}`;C in m&&m[C]?(zf.dot(m[C].normal)<=s&&(g.push(P.x,P.y,P.z),g.push(I.x,I.y,I.z)),m[C]=null):B in m||(m[B]={index0:h[w],index1:h[E],normal:zf.clone()})}}for(const x in m)if(m[x]){const{index0:M,index1:y}=m[x];Yc.fromBufferAttribute(c,M),Zc.fromBufferAttribute(c,y),g.push(Yc.x,Yc.y,Yc.z),g.push(Zc.x,Zc.y,Zc.z)}this.setAttribute("position",new ze(g,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class ws extends Zo{constructor(e){super(e),this.uuid=fi(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const r=e.holes[t];this.holes.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const r=this.holes[t];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const r=e.holes[t];this.holes.push(new Zo().fromJSON(r))}return this}}const ib={triangulate:function(i,e,t=2){const n=e&&e.length,r=n?e[0]*t:i.length;let s=_x(i,0,r,t,!0);const o=[];if(!s||s.next===s.prev)return o;let c,u,h,f,p,m,g;if(n&&(s=lb(i,e,s,t)),i.length>80*t){c=h=i[0],u=f=i[1];for(let x=t;x<r;x+=t)p=i[x],m=i[x+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>f&&(f=m);g=Math.max(h-c,f-u),g=g!==0?32767/g:0}return jo(s,o,t,c,u,g,0),o}};function _x(i,e,t,n,r){let s,o;if(r===xb(i,e,t,n)>0)for(s=e;s<t;s+=n)o=Nv(s,i[s],i[s+1],o);else for(s=t-n;s>=e;s-=n)o=Nv(s,i[s],i[s+1],o);return o&&Bu(o,o.next)&&(Ko(o),o=o.next),o}function bs(i,e){if(!i)return i;e||(e=i);let t=i,n;do if(n=!1,!t.steiner&&(Bu(t,t.next)||Zt(t.prev,t,t.next)===0)){if(Ko(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function jo(i,e,t,n,r,s,o){if(!i)return;!o&&s&&db(i,n,r,s);let c=i,u,h;for(;i.prev!==i.next;){if(u=i.prev,h=i.next,s?sb(i,n,r,s):rb(i)){e.push(u.i/t|0),e.push(i.i/t|0),e.push(h.i/t|0),Ko(i),i=h.next,c=h.next;continue}if(i=h,i===c){o?o===1?(i=ab(bs(i),e,t),jo(i,e,t,n,r,s,2)):o===2&&ob(i,e,t,n,r,s):jo(bs(i),e,t,n,r,s,1);break}}}function rb(i){const e=i.prev,t=i,n=i.next;if(Zt(e,t,n)>=0)return!1;const r=e.x,s=t.x,o=n.x,c=e.y,u=t.y,h=n.y,f=r<s?r<o?r:o:s<o?s:o,p=c<u?c<h?c:h:u<h?u:h,m=r>s?r>o?r:o:s>o?s:o,g=c>u?c>h?c:h:u>h?u:h;let x=n.next;for(;x!==e;){if(x.x>=f&&x.x<=m&&x.y>=p&&x.y<=g&&Ca(r,c,s,u,o,h,x.x,x.y)&&Zt(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function sb(i,e,t,n){const r=i.prev,s=i,o=i.next;if(Zt(r,s,o)>=0)return!1;const c=r.x,u=s.x,h=o.x,f=r.y,p=s.y,m=o.y,g=c<u?c<h?c:h:u<h?u:h,x=f<p?f<m?f:m:p<m?p:m,M=c>u?c>h?c:h:u>h?u:h,y=f>p?f>m?f:m:p>m?p:m,_=Gd(g,x,e,t,n),w=Gd(M,y,e,t,n);let E=i.prevZ,A=i.nextZ;for(;E&&E.z>=_&&A&&A.z<=w;){if(E.x>=g&&E.x<=M&&E.y>=x&&E.y<=y&&E!==r&&E!==o&&Ca(c,f,u,p,h,m,E.x,E.y)&&Zt(E.prev,E,E.next)>=0||(E=E.prevZ,A.x>=g&&A.x<=M&&A.y>=x&&A.y<=y&&A!==r&&A!==o&&Ca(c,f,u,p,h,m,A.x,A.y)&&Zt(A.prev,A,A.next)>=0))return!1;A=A.nextZ}for(;E&&E.z>=_;){if(E.x>=g&&E.x<=M&&E.y>=x&&E.y<=y&&E!==r&&E!==o&&Ca(c,f,u,p,h,m,E.x,E.y)&&Zt(E.prev,E,E.next)>=0)return!1;E=E.prevZ}for(;A&&A.z<=w;){if(A.x>=g&&A.x<=M&&A.y>=x&&A.y<=y&&A!==r&&A!==o&&Ca(c,f,u,p,h,m,A.x,A.y)&&Zt(A.prev,A,A.next)>=0)return!1;A=A.nextZ}return!0}function ab(i,e,t){let n=i;do{const r=n.prev,s=n.next.next;!Bu(r,s)&&xx(r,n,n.next,s)&&Jo(r,s)&&Jo(s,r)&&(e.push(r.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),Ko(n),Ko(n.next),n=i=s),n=n.next}while(n!==i);return bs(n)}function ob(i,e,t,n,r,s){let o=i;do{let c=o.next.next;for(;c!==o.prev;){if(o.i!==c.i&&gb(o,c)){let u=yx(o,c);o=bs(o,o.next),u=bs(u,u.next),jo(o,e,t,n,r,s,0),jo(u,e,t,n,r,s,0);return}c=c.next}o=o.next}while(o!==i)}function lb(i,e,t,n){const r=[];let s,o,c,u,h;for(s=0,o=e.length;s<o;s++)c=e[s]*n,u=s<o-1?e[s+1]*n:i.length,h=_x(i,c,u,n,!1),h===h.next&&(h.steiner=!0),r.push(mb(h));for(r.sort(cb),s=0;s<r.length;s++)t=ub(r[s],t);return t}function cb(i,e){return i.x-e.x}function ub(i,e){const t=hb(i,e);if(!t)return e;const n=yx(t,i);return bs(n,n.next),bs(t,t.next)}function hb(i,e){let t=e,n=-1/0,r;const s=i.x,o=i.y;do{if(o<=t.y&&o>=t.next.y&&t.next.y!==t.y){const m=t.x+(o-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,r=t.x<t.next.x?t:t.next,m===s))return r}t=t.next}while(t!==e);if(!r)return null;const c=r,u=r.x,h=r.y;let f=1/0,p;t=r;do s>=t.x&&t.x>=u&&s!==t.x&&Ca(o<h?s:n,o,u,h,o<h?n:s,o,t.x,t.y)&&(p=Math.abs(o-t.y)/(s-t.x),Jo(t,i)&&(p<f||p===f&&(t.x>r.x||t.x===r.x&&fb(r,t)))&&(r=t,f=p)),t=t.next;while(t!==c);return r}function fb(i,e){return Zt(i.prev,i,e.prev)<0&&Zt(e.next,i,i.next)<0}function db(i,e,t,n){let r=i;do r.z===0&&(r.z=Gd(r.x,r.y,e,t,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==i);r.prevZ.nextZ=null,r.prevZ=null,pb(r)}function pb(i){let e,t,n,r,s,o,c,u,h=1;do{for(t=i,i=null,s=null,o=0;t;){for(o++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(r=t,t=t.nextZ,c--):(r=n,n=n.nextZ,u--),s?s.nextZ=r:i=r,r.prevZ=s,s=r;t=n}s.nextZ=null,h*=2}while(o>1);return i}function Gd(i,e,t,n,r){return i=(i-t)*r|0,e=(e-n)*r|0,i=(i|i<<8)&16711935,i=(i|i<<4)&252645135,i=(i|i<<2)&858993459,i=(i|i<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,i|e<<1}function mb(i){let e=i,t=i;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==i);return t}function Ca(i,e,t,n,r,s,o,c){return(r-o)*(e-c)>=(i-o)*(s-c)&&(i-o)*(n-c)>=(t-o)*(e-c)&&(t-o)*(s-c)>=(r-o)*(n-c)}function gb(i,e){return i.next.i!==e.i&&i.prev.i!==e.i&&!vb(i,e)&&(Jo(i,e)&&Jo(e,i)&&_b(i,e)&&(Zt(i.prev,i,e.prev)||Zt(i,e.prev,e))||Bu(i,e)&&Zt(i.prev,i,i.next)>0&&Zt(e.prev,e,e.next)>0)}function Zt(i,e,t){return(e.y-i.y)*(t.x-e.x)-(e.x-i.x)*(t.y-e.y)}function Bu(i,e){return i.x===e.x&&i.y===e.y}function xx(i,e,t,n){const r=Kc(Zt(i,e,t)),s=Kc(Zt(i,e,n)),o=Kc(Zt(t,n,i)),c=Kc(Zt(t,n,e));return!!(r!==s&&o!==c||r===0&&Jc(i,t,e)||s===0&&Jc(i,n,e)||o===0&&Jc(t,i,n)||c===0&&Jc(t,e,n))}function Jc(i,e,t){return e.x<=Math.max(i.x,t.x)&&e.x>=Math.min(i.x,t.x)&&e.y<=Math.max(i.y,t.y)&&e.y>=Math.min(i.y,t.y)}function Kc(i){return i>0?1:i<0?-1:0}function vb(i,e){let t=i;do{if(t.i!==i.i&&t.next.i!==i.i&&t.i!==e.i&&t.next.i!==e.i&&xx(t,t.next,i,e))return!0;t=t.next}while(t!==i);return!1}function Jo(i,e){return Zt(i.prev,i,i.next)<0?Zt(i,e,i.next)>=0&&Zt(i,i.prev,e)>=0:Zt(i,e,i.prev)<0||Zt(i,i.next,e)<0}function _b(i,e){let t=i,n=!1;const r=(i.x+e.x)/2,s=(i.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&r<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==i);return n}function yx(i,e){const t=new Wd(i.i,i.x,i.y),n=new Wd(e.i,e.x,e.y),r=i.next,s=e.prev;return i.next=e,e.prev=i,t.next=r,r.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function Nv(i,e,t,n){const r=new Wd(i,e,t);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function Ko(i){i.next.prev=i.prev,i.prev.next=i.next,i.prevZ&&(i.prevZ.nextZ=i.nextZ),i.nextZ&&(i.nextZ.prevZ=i.prevZ)}function Wd(i,e,t){this.i=i,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function xb(i,e,t,n){let r=0;for(let s=e,o=t-n;s<t;s+=n)r+=(i[o]-i[s])*(i[s+1]+i[o+1]),o=s;return r}class Yi{static area(e){const t=e.length;let n=0;for(let r=t-1,s=0;s<t;r=s++)n+=e[r].x*e[s].y-e[s].x*e[r].y;return n*.5}static isClockWise(e){return Yi.area(e)<0}static triangulateShape(e,t){const n=[],r=[],s=[];Fv(e),Ov(n,e);let o=e.length;t.forEach(Fv);for(let u=0;u<t.length;u++)r.push(o),o+=t[u].length,Ov(n,t[u]);const c=ib.triangulate(n,r);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function Fv(i){const e=i.length;e>2&&i[e-1].equals(i[0])&&i.pop()}function Ov(i,e){for(let t=0;t<e.length;t++)i.push(e[t].x),i.push(e[t].y)}class zu extends ut{constructor(e=new ws([new oe(.5,.5),new oe(-.5,.5),new oe(-.5,-.5),new oe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,r=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];o(h)}this.setAttribute("position",new ze(r,3)),this.setAttribute("uv",new ze(s,2)),this.computeVertexNormals();function o(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,f=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,g=t.bevelThickness!==void 0?t.bevelThickness:.2,x=t.bevelSize!==void 0?t.bevelSize:g-.1,M=t.bevelOffset!==void 0?t.bevelOffset:0,y=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,w=t.UVGenerator!==void 0?t.UVGenerator:yb;let E,A=!1,N,P,I,B;_&&(E=_.getSpacedPoints(f),A=!0,m=!1,N=_.computeFrenetFrames(f,!1),P=new D,I=new D,B=new D),m||(y=0,g=0,x=0,M=0);const C=c.extractPoints(h);let b=C.shape;const F=C.holes;if(!Yi.isClockWise(b)){b=b.reverse();for(let ce=0,re=F.length;ce<re;ce++){const _e=F[ce];Yi.isClockWise(_e)&&(F[ce]=_e.reverse())}}const k=Yi.triangulateShape(b,F),j=b;for(let ce=0,re=F.length;ce<re;ce++){const _e=F[ce];b=b.concat(_e)}function K(ce,re,_e){return re||console.error("THREE.ExtrudeGeometry: vec does not exist"),ce.clone().addScaledVector(re,_e)}const le=b.length,ge=k.length;function H(ce,re,_e){let ve,xe,U;const R=ce.x-re.x,Y=ce.y-re.y,se=_e.x-ce.x,ue=_e.y-ce.y,de=R*R+Y*Y,Xe=R*ue-Y*se;if(Math.abs(Xe)>Number.EPSILON){const pe=Math.sqrt(de),ke=Math.sqrt(se*se+ue*ue),je=re.x-Y/pe,Se=re.y+R/pe,Ue=_e.x-ue/ke,it=_e.y+se/ke,Oe=((Ue-je)*ue-(it-Se)*se)/(R*ue-Y*se);ve=je+R*Oe-ce.x,xe=Se+Y*Oe-ce.y;const Be=ve*ve+xe*xe;if(Be<=2)return new oe(ve,xe);U=Math.sqrt(Be/2)}else{let pe=!1;R>Number.EPSILON?se>Number.EPSILON&&(pe=!0):R<-Number.EPSILON?se<-Number.EPSILON&&(pe=!0):Math.sign(Y)===Math.sign(ue)&&(pe=!0),pe?(ve=-Y,xe=R,U=Math.sqrt(de)):(ve=R,xe=Y,U=Math.sqrt(de/2))}return new oe(ve/U,xe/U)}const Q=[];for(let ce=0,re=j.length,_e=re-1,ve=ce+1;ce<re;ce++,_e++,ve++)_e===re&&(_e=0),ve===re&&(ve=0),Q[ce]=H(j[ce],j[_e],j[ve]);const Z=[];let fe,we=Q.concat();for(let ce=0,re=F.length;ce<re;ce++){const _e=F[ce];fe=[];for(let ve=0,xe=_e.length,U=xe-1,R=ve+1;ve<xe;ve++,U++,R++)U===xe&&(U=0),R===xe&&(R=0),fe[ve]=H(_e[ve],_e[U],_e[R]);Z.push(fe),we=we.concat(fe)}for(let ce=0;ce<y;ce++){const re=ce/y,_e=g*Math.cos(re*Math.PI/2),ve=x*Math.sin(re*Math.PI/2)+M;for(let xe=0,U=j.length;xe<U;xe++){const R=K(j[xe],Q[xe],ve);ye(R.x,R.y,-_e)}for(let xe=0,U=F.length;xe<U;xe++){const R=F[xe];fe=Z[xe];for(let Y=0,se=R.length;Y<se;Y++){const ue=K(R[Y],fe[Y],ve);ye(ue.x,ue.y,-_e)}}}const Le=x+M;for(let ce=0;ce<le;ce++){const re=m?K(b[ce],we[ce],Le):b[ce];A?(I.copy(N.normals[0]).multiplyScalar(re.x),P.copy(N.binormals[0]).multiplyScalar(re.y),B.copy(E[0]).add(I).add(P),ye(B.x,B.y,B.z)):ye(re.x,re.y,0)}for(let ce=1;ce<=f;ce++)for(let re=0;re<le;re++){const _e=m?K(b[re],we[re],Le):b[re];A?(I.copy(N.normals[ce]).multiplyScalar(_e.x),P.copy(N.binormals[ce]).multiplyScalar(_e.y),B.copy(E[ce]).add(I).add(P),ye(B.x,B.y,B.z)):ye(_e.x,_e.y,p/f*ce)}for(let ce=y-1;ce>=0;ce--){const re=ce/y,_e=g*Math.cos(re*Math.PI/2),ve=x*Math.sin(re*Math.PI/2)+M;for(let xe=0,U=j.length;xe<U;xe++){const R=K(j[xe],Q[xe],ve);ye(R.x,R.y,p+_e)}for(let xe=0,U=F.length;xe<U;xe++){const R=F[xe];fe=Z[xe];for(let Y=0,se=R.length;Y<se;Y++){const ue=K(R[Y],fe[Y],ve);A?ye(ue.x,ue.y+E[f-1].y,E[f-1].x+_e):ye(ue.x,ue.y,p+_e)}}}te(),me();function te(){const ce=r.length/3;if(m){let re=0,_e=le*re;for(let ve=0;ve<ge;ve++){const xe=k[ve];Ye(xe[2]+_e,xe[1]+_e,xe[0]+_e)}re=f+y*2,_e=le*re;for(let ve=0;ve<ge;ve++){const xe=k[ve];Ye(xe[0]+_e,xe[1]+_e,xe[2]+_e)}}else{for(let re=0;re<ge;re++){const _e=k[re];Ye(_e[2],_e[1],_e[0])}for(let re=0;re<ge;re++){const _e=k[re];Ye(_e[0]+le*f,_e[1]+le*f,_e[2]+le*f)}}n.addGroup(ce,r.length/3-ce,0)}function me(){const ce=r.length/3;let re=0;Ae(j,re),re+=j.length;for(let _e=0,ve=F.length;_e<ve;_e++){const xe=F[_e];Ae(xe,re),re+=xe.length}n.addGroup(ce,r.length/3-ce,1)}function Ae(ce,re){let _e=ce.length;for(;--_e>=0;){const ve=_e;let xe=_e-1;xe<0&&(xe=ce.length-1);for(let U=0,R=f+y*2;U<R;U++){const Y=le*U,se=le*(U+1),ue=re+ve+Y,de=re+xe+Y,Xe=re+xe+se,pe=re+ve+se;tt(ue,de,Xe,pe)}}}function ye(ce,re,_e){u.push(ce),u.push(re),u.push(_e)}function Ye(ce,re,_e){Fe(ce),Fe(re),Fe(_e);const ve=r.length/3,xe=w.generateTopUV(n,r,ve-3,ve-2,ve-1);V(xe[0]),V(xe[1]),V(xe[2])}function tt(ce,re,_e,ve){Fe(ce),Fe(re),Fe(ve),Fe(re),Fe(_e),Fe(ve);const xe=r.length/3,U=w.generateSideWallUV(n,r,xe-6,xe-3,xe-2,xe-1);V(U[0]),V(U[1]),V(U[3]),V(U[1]),V(U[2]),V(U[3])}function Fe(ce){r.push(u[ce*3+0]),r.push(u[ce*3+1]),r.push(u[ce*3+2])}function V(ce){s.push(ce.x),s.push(ce.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Sb(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++){const c=t[e.shapes[s]];n.push(c)}const r=e.options.extrudePath;return r!==void 0&&(e.options.extrudePath=new xu[r.type]().fromJSON(r)),new zu(n,e.options)}}const yb={generateTopUV:function(i,e,t,n,r){const s=e[t*3],o=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[r*3],f=e[r*3+1];return[new oe(s,o),new oe(c,u),new oe(h,f)]},generateSideWallUV:function(i,e,t,n,r,s){const o=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],f=e[n*3+1],p=e[n*3+2],m=e[r*3],g=e[r*3+1],x=e[r*3+2],M=e[s*3],y=e[s*3+1],_=e[s*3+2];return Math.abs(c-f)<Math.abs(o-h)?[new oe(o,1-u),new oe(h,1-p),new oe(m,1-x),new oe(M,1-_)]:[new oe(c,1-u),new oe(f,1-p),new oe(g,1-x),new oe(y,1-_)]}};function Sb(i,e,t){if(t.shapes=[],Array.isArray(i))for(let n=0,r=i.length;n<r;n++){const s=i[n];t.shapes.push(s.uuid)}else t.shapes.push(i.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class ku extends Gr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ku(e.radius,e.detail)}}class ll extends Gr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,r,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ll(e.radius,e.detail)}}class Hu extends ut{constructor(e=.5,t=1,n=32,r=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:s,thetaLength:o},n=Math.max(3,n),r=Math.max(1,r);const c=[],u=[],h=[],f=[];let p=e;const m=(t-e)/r,g=new D,x=new oe;for(let M=0;M<=r;M++){for(let y=0;y<=n;y++){const _=s+y/n*o;g.x=p*Math.cos(_),g.y=p*Math.sin(_),u.push(g.x,g.y,g.z),h.push(0,0,1),x.x=(g.x/t+1)/2,x.y=(g.y/t+1)/2,f.push(x.x,x.y)}p+=m}for(let M=0;M<r;M++){const y=M*(n+1);for(let _=0;_<n;_++){const w=_+y,E=w,A=w+n+1,N=w+n+2,P=w+1;c.push(E,A,P),c.push(A,N,P)}}this.setIndex(c),this.setAttribute("position",new ze(u,3)),this.setAttribute("normal",new ze(h,3)),this.setAttribute("uv",new ze(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Hu(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Vu extends ut{constructor(e=new ws([new oe(0,.5),new oe(-.5,-.5),new oe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],r=[],s=[],o=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let f=0;f<e.length;f++)h(e[f]),this.addGroup(c,u,f),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new ze(r,3)),this.setAttribute("normal",new ze(s,3)),this.setAttribute("uv",new ze(o,2));function h(f){const p=r.length/3,m=f.extractPoints(t);let g=m.shape;const x=m.holes;Yi.isClockWise(g)===!1&&(g=g.reverse());for(let y=0,_=x.length;y<_;y++){const w=x[y];Yi.isClockWise(w)===!0&&(x[y]=w.reverse())}const M=Yi.triangulateShape(g,x);for(let y=0,_=x.length;y<_;y++){const w=x[y];g=g.concat(w)}for(let y=0,_=g.length;y<_;y++){const w=g[y];r.push(w.x,w.y,0),s.push(0,0,1),o.push(w.x,w.y)}for(let y=0,_=M.length;y<_;y++){const w=M[y],E=w[0]+p,A=w[1]+p,N=w[2]+p;n.push(E,A,N),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return Mb(t,e)}static fromJSON(e,t){const n=[];for(let r=0,s=e.shapes.length;r<s;r++){const o=t[e.shapes[r]];n.push(o)}return new Vu(n,e.curveSegments)}}function Mb(i,e){if(e.shapes=[],Array.isArray(i))for(let t=0,n=i.length;t<n;t++){const r=i[t];e.shapes.push(r.uuid)}else e.shapes.push(i.uuid);return e}class cl extends ut{constructor(e=1,t=32,n=16,r=0,s=Math.PI*2,o=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:s,thetaStart:o,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(o+c,Math.PI);let h=0;const f=[],p=new D,m=new D,g=[],x=[],M=[],y=[];for(let _=0;_<=n;_++){const w=[],E=_/n;let A=0;_===0&&o===0?A=.5/t:_===n&&u===Math.PI&&(A=-.5/t);for(let N=0;N<=t;N++){const P=N/t;p.x=-e*Math.cos(r+P*s)*Math.sin(o+E*c),p.y=e*Math.cos(o+E*c),p.z=e*Math.sin(r+P*s)*Math.sin(o+E*c),x.push(p.x,p.y,p.z),m.copy(p).normalize(),M.push(m.x,m.y,m.z),y.push(P+A,1-E),w.push(h++)}f.push(w)}for(let _=0;_<n;_++)for(let w=0;w<t;w++){const E=f[_][w+1],A=f[_][w],N=f[_+1][w],P=f[_+1][w+1];(_!==0||o>0)&&g.push(E,A,P),(_!==n-1||u<Math.PI)&&g.push(A,N,P)}this.setIndex(g),this.setAttribute("position",new ze(x,3)),this.setAttribute("normal",new ze(M,3)),this.setAttribute("uv",new ze(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new cl(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Gu extends Gr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,r,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Gu(e.radius,e.detail)}}class Wu extends ut{constructor(e=1,t=.4,n=12,r=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:s},n=Math.floor(n),r=Math.floor(r);const o=[],c=[],u=[],h=[],f=new D,p=new D,m=new D;for(let g=0;g<=n;g++)for(let x=0;x<=r;x++){const M=x/r*s,y=g/n*Math.PI*2;p.x=(e+t*Math.cos(y))*Math.cos(M),p.y=(e+t*Math.cos(y))*Math.sin(M),p.z=t*Math.sin(y),c.push(p.x,p.y,p.z),f.x=e*Math.cos(M),f.y=e*Math.sin(M),m.subVectors(p,f).normalize(),u.push(m.x,m.y,m.z),h.push(x/r),h.push(g/n)}for(let g=1;g<=n;g++)for(let x=1;x<=r;x++){const M=(r+1)*g+x-1,y=(r+1)*(g-1)+x-1,_=(r+1)*(g-1)+x,w=(r+1)*g+x;o.push(M,y,w),o.push(y,_,w)}this.setIndex(o),this.setAttribute("position",new ze(c,3)),this.setAttribute("normal",new ze(u,3)),this.setAttribute("uv",new ze(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Wu(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Xu extends ut{constructor(e=1,t=.4,n=64,r=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:s,q:o},n=Math.floor(n),r=Math.floor(r);const c=[],u=[],h=[],f=[],p=new D,m=new D,g=new D,x=new D,M=new D,y=new D,_=new D;for(let E=0;E<=n;++E){const A=E/n*s*Math.PI*2;w(A,s,o,e,g),w(A+.01,s,o,e,x),y.subVectors(x,g),_.addVectors(x,g),M.crossVectors(y,_),_.crossVectors(M,y),M.normalize(),_.normalize();for(let N=0;N<=r;++N){const P=N/r*Math.PI*2,I=-t*Math.cos(P),B=t*Math.sin(P);p.x=g.x+(I*_.x+B*M.x),p.y=g.y+(I*_.y+B*M.y),p.z=g.z+(I*_.z+B*M.z),u.push(p.x,p.y,p.z),m.subVectors(p,g).normalize(),h.push(m.x,m.y,m.z),f.push(E/n),f.push(N/r)}}for(let E=1;E<=n;E++)for(let A=1;A<=r;A++){const N=(r+1)*(E-1)+(A-1),P=(r+1)*E+(A-1),I=(r+1)*E+A,B=(r+1)*(E-1)+A;c.push(N,P,B),c.push(P,I,B)}this.setIndex(c),this.setAttribute("position",new ze(u,3)),this.setAttribute("normal",new ze(h,3)),this.setAttribute("uv",new ze(f,2));function w(E,A,N,P,I){const B=Math.cos(E),C=Math.sin(E),b=N/A*E,F=Math.cos(b);I.x=P*(2+F)*.5*B,I.y=P*(2+F)*C*.5,I.z=P*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class qu extends ut{constructor(e=new bp(new D(-1,-1,0),new D(-1,1,0),new D(1,1,0)),t=64,n=1,r=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const c=new D,u=new D,h=new oe;let f=new D;const p=[],m=[],g=[],x=[];M(),this.setIndex(x),this.setAttribute("position",new ze(p,3)),this.setAttribute("normal",new ze(m,3)),this.setAttribute("uv",new ze(g,2));function M(){for(let E=0;E<t;E++)y(E);y(s===!1?t:0),w(),_()}function y(E){f=e.getPointAt(E/t,f);const A=o.normals[E],N=o.binormals[E];for(let P=0;P<=r;P++){const I=P/r*Math.PI*2,B=Math.sin(I),C=-Math.cos(I);u.x=C*A.x+B*N.x,u.y=C*A.y+B*N.y,u.z=C*A.z+B*N.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=f.x+n*u.x,c.y=f.y+n*u.y,c.z=f.z+n*u.z,p.push(c.x,c.y,c.z)}}function _(){for(let E=1;E<=t;E++)for(let A=1;A<=r;A++){const N=(r+1)*(E-1)+(A-1),P=(r+1)*E+(A-1),I=(r+1)*E+A,B=(r+1)*(E-1)+A;x.push(N,P,B),x.push(P,I,B)}}function w(){for(let E=0;E<=t;E++)for(let A=0;A<=r;A++)h.x=E/t,h.y=A/r,g.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new qu(new xu[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Sx extends ut{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,r=new D,s=new D;if(e.index!==null){const o=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,f=u.length;h<f;++h){const p=u[h],m=p.start,g=p.count;for(let x=m,M=m+g;x<M;x+=3)for(let y=0;y<3;y++){const _=c.getX(x+y),w=c.getX(x+(y+1)%3);r.fromBufferAttribute(o,_),s.fromBufferAttribute(o,w),Bv(r,s,n)===!0&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let c=0,u=o.count/3;c<u;c++)for(let h=0;h<3;h++){const f=3*c+h,p=3*c+(h+1)%3;r.fromBufferAttribute(o,f),s.fromBufferAttribute(o,p),Bv(r,s,n)===!0&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new ze(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Bv(i,e,t){const n=`${i.x},${i.y},${i.z}-${e.x},${e.y},${e.z}`,r=`${e.x},${e.y},${e.z}-${i.x},${i.y},${i.z}`;return t.has(n)===!0||t.has(r)===!0?!1:(t.add(n),t.add(r),!0)}var zv=Object.freeze({__proto__:null,BoxGeometry:Ps,CapsuleGeometry:Du,CircleGeometry:Nu,ConeGeometry:Fu,CylinderGeometry:Ga,DodecahedronGeometry:Ou,EdgesGeometry:vx,ExtrudeGeometry:zu,IcosahedronGeometry:ku,LatheGeometry:ol,OctahedronGeometry:ll,PlaneGeometry:Ha,PolyhedronGeometry:Gr,RingGeometry:Hu,ShapeGeometry:Vu,SphereGeometry:cl,TetrahedronGeometry:Gu,TorusGeometry:Wu,TorusKnotGeometry:Xu,TubeGeometry:qu,WireframeGeometry:Sx});class Mx extends vn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Pe(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Ex extends nn{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Rp extends vn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Pe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Kn,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Pp extends Rp{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new oe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Qt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Pe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Pe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Pe(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class wx extends vn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Pe(16777215),this.specular=new Pe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Kn,this.combine=il,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Tx extends vn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Pe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Ip extends vn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Ax extends vn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Pe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Pe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Kn,this.combine=il,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class bx extends vn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Pe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hr,this.normalScale=new oe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Cx extends Gn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function _s(i,e,t){return!i||!t&&i.constructor===e?i:typeof e.BYTES_PER_ELEMENT=="number"?new e(i):Array.prototype.slice.call(i)}function Rx(i){return ArrayBuffer.isView(i)&&!(i instanceof DataView)}function Px(i){function e(r,s){return i[r]-i[s]}const t=i.length,n=new Array(t);for(let r=0;r!==t;++r)n[r]=r;return n.sort(e),n}function Xd(i,e,t){const n=i.length,r=new i.constructor(n);for(let s=0,o=0;o!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)r[o++]=i[c+u]}return r}function Lp(i,e,t,n){let r=1,s=i[0];for(;s!==void 0&&s[n]===void 0;)s=i[r++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=i[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=i[r++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=i[r++];while(s!==void 0)}function Eb(i,e,t,n,r=30){const s=i.clone();s.name=e;const o=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],f=h.getValueSize(),p=[],m=[];for(let g=0;g<h.times.length;++g){const x=h.times[g]*r;if(!(x<t||x>=n)){p.push(h.times[g]);for(let M=0;M<f;++M)m.push(h.values[g*f+M])}}p.length!==0&&(h.times=_s(p,h.times.constructor),h.values=_s(m,h.values.constructor),o.push(h))}s.tracks=o;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function wb(i,e=0,t=i,n=30){n<=0&&(n=30);const r=t.tracks.length,s=e/n;for(let o=0;o<r;++o){const c=t.tracks[o],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=i.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===u});if(h===void 0)continue;let f=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);let m=0;const g=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=g/3);const x=c.times.length-1;let M;if(s<=c.times[0]){const _=f,w=p-f;M=c.values.slice(_,w)}else if(s>=c.times[x]){const _=x*p+f,w=_+p-f;M=c.values.slice(_,w)}else{const _=c.createInterpolant(),w=f,E=p-f;_.evaluate(s),M=_.resultBuffer.slice(w,E)}u==="quaternion"&&new Jn().fromArray(M).normalize().conjugate().toArray(M);const y=h.times.length;for(let _=0;_<y;++_){const w=_*g+m;if(u==="quaternion")Jn.multiplyQuaternionsFlat(h.values,w,M,0,h.values,w);else{const E=g-m*2;for(let A=0;A<E;++A)h.values[w+A]-=M[A]}}}return i.blendMode=hp,i}const Tb={convertArray:_s,isTypedArray:Rx,getKeyframeOrder:Px,sortedArray:Xd,flattenJSON:Lp,subclip:Eb,makeClipAdditive:wb};class ul{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,r=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<r)){for(let c=n+2;;){if(r===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=r,r=t[++n],e<r)break t}o=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(r=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const c=n+o>>>1;e<t[c]?o=c:n=c+1}if(r=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(r===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,r)}return this.interpolate_(n,s,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,s=e*r;for(let o=0;o!==r;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Ix extends ul{constructor(e,t,n,r){super(e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ms,endingEnd:ms}}intervalChanged_(e,t,n){const r=this.parameterPositions;let s=e-2,o=e+1,c=r[s],u=r[o];if(c===void 0)switch(this.getSettings_().endingStart){case gs:s=e,c=2*t-n;break;case Ho:s=r.length-2,c=t+r[s]-r[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case gs:o=e,u=2*n-t;break;case Ho:o=1,u=n+r[1]-r[0];break;default:o=e-1,u=t}const h=(n-t)*.5,f=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*f,this._offsetNext=o*f}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,g=this._weightNext,x=(n-t)/(r-t),M=x*x,y=M*x,_=-m*y+2*m*M-m*x,w=(1+m)*y+(-1.5-2*m)*M+(-.5+m)*x+1,E=(-1-g)*y+(1.5+g)*M+.5*x,A=g*y-g*M;for(let N=0;N!==c;++N)s[N]=_*o[f+N]+w*o[h+N]+E*o[u+N]+A*o[p+N];return s}}class Up extends ul{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=(n-t)/(r-t),p=1-f;for(let m=0;m!==c;++m)s[m]=o[h+m]*p+o[u+m]*f;return s}}class Lx extends ul{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class Ni{constructor(e,t,n,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=_s(t,this.TimeBufferType),this.values=_s(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:_s(e.times,Array),values:_s(e.values,Array)};const r=e.getInterpolation();r!==e.DefaultInterpolation&&(n.interpolation=r)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Lx(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Up(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Ix(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case zo:t=this.InterpolantFactoryMethodDiscrete;break;case ko:t=this.InterpolantFactoryMethodLinear;break;case pu:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return zo;case this.InterpolantFactoryMethodLinear:return ko;case this.InterpolantFactoryMethodSmooth:return pu}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]*=e}return this}trim(e,t){const n=this.times,r=n.length;let s=0,o=r-1;for(;s!==r&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==r){s>=o&&(o=Math.max(o,1),s=o-1);const c=this.getValueSize();this.times=n.slice(s,o),this.values=this.values.slice(s*c,o*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,r=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(o!==null&&o>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,o),e=!1;break}o=u}if(r!==void 0&&Rx(r))for(let c=0,u=r.length;c!==u;++c){const h=r[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),r=this.getInterpolation()===pu,s=e.length-1;let o=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],f=e[c+1];if(h!==f&&(c!==1||h!==e[0]))if(r)u=!0;else{const p=c*n,m=p-n,g=p+n;for(let x=0;x!==n;++x){const M=t[p+x];if(M!==t[m+x]||M!==t[g+x]){u=!0;break}}}if(u){if(c!==o){e[o]=e[c];const p=c*n,m=o*n;for(let g=0;g!==n;++g)t[m+g]=t[p+g]}++o}}if(s>0){e[o]=e[s];for(let c=s*n,u=o*n,h=0;h!==n;++h)t[u+h]=t[c+h];++o}return o!==e.length?(this.times=e.slice(0,o),this.values=t.slice(0,o*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,r=new n(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}Ni.prototype.TimeBufferType=Float32Array;Ni.prototype.ValueBufferType=Float32Array;Ni.prototype.DefaultInterpolation=ko;class Ls extends Ni{}Ls.prototype.ValueTypeName="bool";Ls.prototype.ValueBufferType=Array;Ls.prototype.DefaultInterpolation=zo;Ls.prototype.InterpolantFactoryMethodLinear=void 0;Ls.prototype.InterpolantFactoryMethodSmooth=void 0;class Dp extends Ni{}Dp.prototype.ValueTypeName="color";class Qo extends Ni{}Qo.prototype.ValueTypeName="number";class Ux extends ul{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=(n-t)/(r-t);let h=e*c;for(let f=h+c;h!==f;h+=4)Jn.slerpFlat(s,0,o,h-c,o,h,u);return s}}class Wa extends Ni{InterpolantFactoryMethodLinear(e){return new Ux(this.times,this.values,this.getValueSize(),e)}}Wa.prototype.ValueTypeName="quaternion";Wa.prototype.DefaultInterpolation=ko;Wa.prototype.InterpolantFactoryMethodSmooth=void 0;class Us extends Ni{}Us.prototype.ValueTypeName="string";Us.prototype.ValueBufferType=Array;Us.prototype.DefaultInterpolation=zo;Us.prototype.InterpolantFactoryMethodLinear=void 0;Us.prototype.InterpolantFactoryMethodSmooth=void 0;class $o extends Ni{}$o.prototype.ValueTypeName="vector";class el{constructor(e="",t=-1,n=[],r=Eu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=r,this.uuid=fi(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,r=1/(e.fps||1);for(let o=0,c=n.length;o!==c;++o)t.push(bb(n[o]).scale(r));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(Ni.toJSON(n[s]));return r}static CreateFromMorphTargetSequence(e,t,n,r){const s=t.length,o=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const f=Px(u);u=Xd(u,1,f),h=Xd(h,1,f),!r&&u[0]===0&&(u.push(s),h.push(h[0])),o.push(new Qo(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const r=e;n=r.geometry&&r.geometry.animations||r.animations}for(let r=0;r<n.length;r++)if(n[r].name===t)return n[r];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const r={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.name.match(s);if(f&&f.length>1){const p=f[1];let m=r[p];m||(r[p]=m=[]),m.push(h)}}const o=[];for(const c in r)o.push(this.CreateFromMorphTargetSequence(c,r[c],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,g,x,M){if(g.length!==0){const y=[],_=[];Lp(g,y,_,x),y.length!==0&&M.push(new p(m,y,_))}},r=[],s=e.name||"default",o=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const g={};let x;for(x=0;x<m.length;x++)if(m[x].morphTargets)for(let M=0;M<m[x].morphTargets.length;M++)g[m[x].morphTargets[M]]=-1;for(const M in g){const y=[],_=[];for(let w=0;w!==m[x].morphTargets.length;++w){const E=m[x];y.push(E.time),_.push(E.morphTarget===M?1:0)}r.push(new Qo(".morphTargetInfluence["+M+"]",y,_))}u=g.length*o}else{const g=".bones["+t[p].name+"]";n($o,g+".position",m,"pos",r),n(Wa,g+".quaternion",m,"rot",r),n($o,g+".scale",m,"scl",r)}}return r.length===0?null:new this(s,u,r,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,r=e.length;n!==r;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Ab(i){switch(i.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Qo;case"vector":case"vector2":case"vector3":case"vector4":return $o;case"color":return Dp;case"quaternion":return Wa;case"bool":case"boolean":return Ls;case"string":return Us}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+i)}function bb(i){if(i.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Ab(i.type);if(i.times===void 0){const t=[],n=[];Lp(i.keys,t,n,"value"),i.times=t,i.values=n}return e.parse!==void 0?e.parse(i):new e(i.name,i.times,i.values,i.interpolation)}const fr={enabled:!1,files:{},add:function(i,e){this.enabled!==!1&&(this.files[i]=e)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class Np{constructor(e,t,n){const r=this;let s=!1,o=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(f){c++,s===!1&&r.onStart!==void 0&&r.onStart(f,o,c),s=!0},this.itemEnd=function(f){o++,r.onProgress!==void 0&&r.onProgress(f,o,c),o===c&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(f){r.onError!==void 0&&r.onError(f)},this.resolveURL=function(f){return u?u(f):f},this.setURLModifier=function(f){return u=f,this},this.addHandler=function(f,p){return h.push(f,p),this},this.removeHandler=function(f){const p=h.indexOf(f);return p!==-1&&h.splice(p,2),this},this.getHandler=function(f){for(let p=0,m=h.length;p<m;p+=2){const g=h[p],x=h[p+1];if(g.global&&(g.lastIndex=0),g.test(f))return x}return null}}}const Dx=new Np;class Qn{constructor(e){this.manager=e!==void 0?e:Dx,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(r,s){n.load(e,r,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Qn.DEFAULT_MATERIAL_NAME="__DEFAULT";const ur={};class Cb extends Error{constructor(e,t){super(e),this.response=t}}class pr extends Qn{constructor(e){super(e)}load(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=fr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(ur[e]!==void 0){ur[e].push({onLoad:t,onProgress:n,onError:r});return}ur[e]=[],ur[e].push({onLoad:t,onProgress:n,onError:r});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(o).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const f=ur[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),g=m?parseInt(m):0,x=g!==0;let M=0;const y=new ReadableStream({start(_){w();function w(){p.read().then(({done:E,value:A})=>{if(E)_.close();else{M+=A.byteLength;const N=new ProgressEvent("progress",{lengthComputable:x,loaded:M,total:g});for(let P=0,I=f.length;P<I;P++){const B=f[P];B.onProgress&&B.onProgress(N)}_.enqueue(A),w()}})}}});return new Response(y)}else throw new Cb(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(f=>new DOMParser().parseFromString(f,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,g=new TextDecoder(m);return h.arrayBuffer().then(x=>g.decode(x))}}}).then(h=>{fr.add(e,h);const f=ur[e];delete ur[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onLoad&&g.onLoad(h)}}).catch(h=>{const f=ur[e];if(f===void 0)throw this.manager.itemError(e),h;delete ur[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onError&&g.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Rb extends Qn{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new pr(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){r?r(u):console.error(u),s.manager.itemError(e)}},n,r)}parse(e){const t=[];for(let n=0;n<e.length;n++){const r=el.parse(e[n]);t.push(r)}return t}}class Pb extends Qn{constructor(e){super(e)}load(e,t,n,r){const s=this,o=[],c=new Lu,u=new pr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function f(p){u.load(e[p],function(m){const g=s.parse(m,!0);o[p]={width:g.width,height:g.height,format:g.format,mipmaps:g.mipmaps},h+=1,h===6&&(g.mipmapCount===1&&(c.minFilter=qt),c.image=o,c.format=g.format,c.needsUpdate=!0,t&&t(c))},n,r)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)f(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const g=m.mipmaps.length/m.mipmapCount;for(let x=0;x<g;x++){o[x]={mipmaps:[]};for(let M=0;M<m.mipmapCount;M++)o[x].mipmaps.push(m.mipmaps[x*m.mipmapCount+M]),o[x].format=m.format,o[x].width=m.width,o[x].height=m.height}c.image=o}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=qt),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,r);return c}}class tl extends Qn{constructor(e){super(e)}load(e,t,n,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=fr.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const c=Yo("img");function u(){f(),fr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){f(),r&&r(p),s.manager.itemError(e),s.manager.itemEnd(e)}function f(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class Fp extends Qn{constructor(e){super(e)}load(e,t,n,r){const s=new sl;s.colorSpace=yt;const o=new tl(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let c=0;function u(h){o.load(e[h],function(f){s.images[h]=f,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,r)}for(let h=0;h<e.length;++h)u(h);return s}}class Ib extends Qn{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new Or,c=new pr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(f){if(r!==void 0)r(f);else{console.error(f);return}}h.image!==void 0?o.image=h.image:h.data!==void 0&&(o.image.width=h.width,o.image.height=h.height,o.image.data=h.data),o.wrapS=h.wrapS!==void 0?h.wrapS:Mi,o.wrapT=h.wrapT!==void 0?h.wrapT:Mi,o.magFilter=h.magFilter!==void 0?h.magFilter:qt,o.minFilter=h.minFilter!==void 0?h.minFilter:qt,o.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0&&(o.colorSpace=h.colorSpace),h.flipY!==void 0&&(o.flipY=h.flipY),h.format!==void 0&&(o.format=h.format),h.type!==void 0&&(o.type=h.type),h.mipmaps!==void 0&&(o.mipmaps=h.mipmaps,o.minFilter=Xi),h.mipmapCount===1&&(o.minFilter=qt),h.generateMipmaps!==void 0&&(o.generateMipmaps=h.generateMipmaps),o.needsUpdate=!0,t&&t(o,h)},n,r),o}}class Yu extends Qn{constructor(e){super(e)}load(e,t,n,r){const s=new Bt,o=new tl(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,r),s}}class Wr extends Ct{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Pe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class Nx extends Wr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ct.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Pe(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const kf=new $e,kv=new D,Hv=new D;class Op{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new oe(512,512),this.map=null,this.mapPass=null,this.matrix=new $e,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new al,this._frameExtents=new oe(1,1),this._viewportCount=1,this._viewports=[new It(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;kv.setFromMatrixPosition(e.matrixWorld),t.position.copy(kv),Hv.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Hv),t.updateMatrixWorld(),kf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(kf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(kf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Lb extends Op{constructor(){super(new $t(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=La*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||r!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=r,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Fx extends Wr{constructor(e,t,n=0,r=Math.PI/3,s=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Ct.DEFAULT_UP),this.updateMatrix(),this.target=new Ct,this.distance=n,this.angle=r,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new Lb}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Vv=new $e,Mo=new D,Hf=new D;class Ub extends Op{constructor(){super(new $t(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new oe(4,2),this._viewportCount=6,this._viewports=[new It(2,1,1,1),new It(0,1,1,1),new It(3,1,1,1),new It(1,1,1,1),new It(3,0,1,1),new It(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,r=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Mo.setFromMatrixPosition(e.matrixWorld),n.position.copy(Mo),Hf.copy(n.position),Hf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Hf),n.updateMatrixWorld(),r.makeTranslation(-Mo.x,-Mo.y,-Mo.z),Vv.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Vv)}}class Ox extends Wr{constructor(e,t,n=0,r=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new Ub}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Db extends Op{constructor(){super(new Is(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Bx extends Wr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ct.DEFAULT_UP),this.updateMatrix(),this.target=new Ct,this.shadow=new Db}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class zx extends Wr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class kx extends Wr{constructor(e,t,n=10,r=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Hx{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new D)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*r),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*r)),t.addScaledVector(o[5],1.092548*(r*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-r*r)),t}getIrradianceAt(e,t){const n=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*r),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*r),t.addScaledVector(o[5],2*.429043*r*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(e,t+r*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(e,t+r*3);return e}static getBasisAt(e,t){const n=e.x,r=e.y,s=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-r*r)}}class Vx extends Wr{constructor(e=new Hx,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Zu extends Qn{constructor(e){super(e),this.textures={}}load(e,t,n,r){const s=this,o=new pr(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){r?r(u):console.error(u),s.manager.itemError(e)}},n,r)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const r=Zu.createMaterialFromType(e.type);if(e.uuid!==void 0&&(r.uuid=e.uuid),e.name!==void 0&&(r.name=e.name),e.color!==void 0&&r.color!==void 0&&r.color.setHex(e.color),e.roughness!==void 0&&(r.roughness=e.roughness),e.metalness!==void 0&&(r.metalness=e.metalness),e.sheen!==void 0&&(r.sheen=e.sheen),e.sheenColor!==void 0&&(r.sheenColor=new Pe().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(r.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&r.emissive!==void 0&&r.emissive.setHex(e.emissive),e.specular!==void 0&&r.specular!==void 0&&r.specular.setHex(e.specular),e.specularIntensity!==void 0&&(r.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&r.specularColor!==void 0&&r.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(r.shininess=e.shininess),e.clearcoat!==void 0&&(r.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(r.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(r.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(r.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(r.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(r.transmission=e.transmission),e.thickness!==void 0&&(r.thickness=e.thickness),e.attenuationDistance!==void 0&&(r.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&r.attenuationColor!==void 0&&r.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(r.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(r.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(r.fog=e.fog),e.flatShading!==void 0&&(r.flatShading=e.flatShading),e.blending!==void 0&&(r.blending=e.blending),e.combine!==void 0&&(r.combine=e.combine),e.side!==void 0&&(r.side=e.side),e.shadowSide!==void 0&&(r.shadowSide=e.shadowSide),e.opacity!==void 0&&(r.opacity=e.opacity),e.transparent!==void 0&&(r.transparent=e.transparent),e.alphaTest!==void 0&&(r.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(r.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(r.depthFunc=e.depthFunc),e.depthTest!==void 0&&(r.depthTest=e.depthTest),e.depthWrite!==void 0&&(r.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(r.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(r.blendSrc=e.blendSrc),e.blendDst!==void 0&&(r.blendDst=e.blendDst),e.blendEquation!==void 0&&(r.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(r.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(r.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(r.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&r.blendColor!==void 0&&r.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(r.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(r.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(r.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(r.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(r.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(r.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(r.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(r.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(r.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(r.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(r.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(r.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(r.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(r.rotation=e.rotation),e.linewidth!==void 0&&(r.linewidth=e.linewidth),e.dashSize!==void 0&&(r.dashSize=e.dashSize),e.gapSize!==void 0&&(r.gapSize=e.gapSize),e.scale!==void 0&&(r.scale=e.scale),e.polygonOffset!==void 0&&(r.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(r.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(r.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(r.dithering=e.dithering),e.alphaToCoverage!==void 0&&(r.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(r.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(r.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(r.visible=e.visible),e.toneMapped!==void 0&&(r.toneMapped=e.toneMapped),e.userData!==void 0&&(r.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(r.uniforms[s]={},o.type){case"t":r.uniforms[s].value=n(o.value);break;case"c":r.uniforms[s].value=new Pe().setHex(o.value);break;case"v2":r.uniforms[s].value=new oe().fromArray(o.value);break;case"v3":r.uniforms[s].value=new D().fromArray(o.value);break;case"v4":r.uniforms[s].value=new It().fromArray(o.value);break;case"m3":r.uniforms[s].value=new lt().fromArray(o.value);break;case"m4":r.uniforms[s].value=new $e().fromArray(o.value);break;default:r.uniforms[s].value=o.value}}if(e.defines!==void 0&&(r.defines=e.defines),e.vertexShader!==void 0&&(r.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(r.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(r.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)r.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(r.lights=e.lights),e.clipping!==void 0&&(r.clipping=e.clipping),e.size!==void 0&&(r.size=e.size),e.sizeAttenuation!==void 0&&(r.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(r.map=n(e.map)),e.matcap!==void 0&&(r.matcap=n(e.matcap)),e.alphaMap!==void 0&&(r.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(r.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(r.bumpScale=e.bumpScale),e.normalMap!==void 0&&(r.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(r.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),r.normalScale=new oe().fromArray(s)}return e.displacementMap!==void 0&&(r.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(r.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(r.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(r.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(r.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(r.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(r.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(r.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(r.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(r.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(r.envMap=n(e.envMap)),e.envMapRotation!==void 0&&r.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(r.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(r.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(r.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(r.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(r.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(r.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(r.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(r.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(r.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(r.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(r.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(r.clearcoatNormalScale=new oe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(r.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(r.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(r.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(r.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(r.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(r.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(r.sheenRoughnessMap=n(e.sheenRoughnessMap)),r}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:Mx,SpriteMaterial:yp,RawShaderMaterial:Ex,ShaderMaterial:nn,PointsMaterial:Mp,MeshPhysicalMaterial:Pp,MeshStandardMaterial:Rp,MeshPhongMaterial:wx,MeshToonMaterial:Tx,MeshNormalMaterial:Ip,MeshLambertMaterial:Ax,MeshDepthMaterial:_p,MeshDistanceMaterial:xp,MeshBasicMaterial:Vr,MeshMatcapMaterial:bx,LineDashedMaterial:Cx,LineBasicMaterial:Gn,Material:vn};return new t[e]}}class qd{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,r=e.length;n<r;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Gx extends ut{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Wx extends Qn{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new pr(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){r?r(u):console.error(u),s.manager.itemError(e)}},n,r)}parse(e){const t={},n={};function r(g,x){if(t[x]!==void 0)return t[x];const y=g.interleavedBuffers[x],_=s(g,y.buffer),w=Ta(y.type,_),E=new Pu(w,y.stride);return E.uuid=y.uuid,t[x]=E,E}function s(g,x){if(n[x]!==void 0)return n[x];const y=g.arrayBuffers[x],_=new Uint32Array(y).buffer;return n[x]=_,_}const o=e.isInstancedBufferGeometry?new Gx:new ut,c=e.data.index;if(c!==void 0){const g=Ta(c.type,c.array);o.setIndex(new St(g,1))}const u=e.data.attributes;for(const g in u){const x=u[g];let M;if(x.isInterleavedBufferAttribute){const y=r(e.data,x.data);M=new As(y,x.itemSize,x.offset,x.normalized)}else{const y=Ta(x.type,x.array),_=x.isInstancedBufferAttribute?Na:St;M=new _(y,x.itemSize,x.normalized)}x.name!==void 0&&(M.name=x.name),x.usage!==void 0&&M.setUsage(x.usage),o.setAttribute(g,M)}const h=e.data.morphAttributes;if(h)for(const g in h){const x=h[g],M=[];for(let y=0,_=x.length;y<_;y++){const w=x[y];let E;if(w.isInterleavedBufferAttribute){const A=r(e.data,w.data);E=new As(A,w.itemSize,w.offset,w.normalized)}else{const A=Ta(w.type,w.array);E=new St(A,w.itemSize,w.normalized)}w.name!==void 0&&(E.name=w.name),M.push(E)}o.morphAttributes[g]=M}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let g=0,x=p.length;g!==x;++g){const M=p[g];o.addGroup(M.start,M.count,M.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const g=new D;m.center!==void 0&&g.fromArray(m.center),o.boundingSphere=new Un(g,m.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class Nb extends Qn{constructor(e){super(e)}load(e,t,n,r){const s=this,o=this.path===""?qd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const c=new pr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){r!==void 0&&r(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const f=h.metadata;if(f===void 0||f.type===void 0||f.type.toLowerCase()==="geometry"){r!==void 0&&r(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,r)}async loadAsync(e,t){const n=this,r=this.path===""?qd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const s=new pr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),c=JSON.parse(o),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,r),o=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,o),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),f=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,f),t!==void 0){let p=!1;for(const m in o)if(o[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,o),u=this.parseObject(e.object,r,c,o,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,r=e.length;n<r;n++){const s=new ws().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},r={};if(t.traverse(function(s){s.isBone&&(r[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const c=new Iu().fromJSON(e[s],r);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const r=new Wx;for(let s=0,o=e.length;s<o;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=r.parse(u);break;default:u.type in zv?c=zv[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},r={};if(e!==void 0){const s=new Zu;s.setTextures(t);for(let o=0,c=e.length;o<c;o++){const u=e[o];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),r[u.uuid]=n[u.uuid]}}return r}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const r=e[n],s=el.parse(r);t[s.uuid]=s}return t}parseImages(e,t){const n=this,r={};let s;function o(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return o(f)}else return u.data?{data:Ta(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new Np(t);s=new tl(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,f=e.length;h<f;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const g=[];for(let x=0,M=m.length;x<M;x++){const y=m[x],_=c(y);_!==null&&(_ instanceof HTMLImageElement?g.push(_):g.push(new Or(_.data,_.width,_.height)))}r[p.uuid]=new vs(g)}else{const g=c(p.url);r[p.uuid]=new vs(g)}}}return r}async parseImagesAsync(e){const t=this,n={};let r;async function s(o){if(typeof o=="string"){const c=o,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await r.loadAsync(u)}else return o.data?{data:Ta(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){r=new tl(this.manager),r.setCrossOrigin(this.crossOrigin);for(let o=0,c=e.length;o<c;o++){const u=e[o],h=u.url;if(Array.isArray(h)){const f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p],x=await s(g);x!==null&&(x instanceof HTMLImageElement?f.push(x):f.push(new Or(x.data,x.width,x.height)))}n[u.uuid]=new vs(f)}else{const f=await s(u.url);n[u.uuid]=new vs(f)}}}return n}parseTextures(e,t){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const r={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let f;Array.isArray(h)?(f=new sl,h.length===6&&(f.needsUpdate=!0)):(h&&h.data?f=new Or:f=new Bt,h&&(f.needsUpdate=!0)),f.source=u,f.uuid=c.uuid,c.name!==void 0&&(f.name=c.name),c.mapping!==void 0&&(f.mapping=n(c.mapping,Fb)),c.channel!==void 0&&(f.channel=c.channel),c.offset!==void 0&&f.offset.fromArray(c.offset),c.repeat!==void 0&&f.repeat.fromArray(c.repeat),c.center!==void 0&&f.center.fromArray(c.center),c.rotation!==void 0&&(f.rotation=c.rotation),c.wrap!==void 0&&(f.wrapS=n(c.wrap[0],Gv),f.wrapT=n(c.wrap[1],Gv)),c.format!==void 0&&(f.format=c.format),c.internalFormat!==void 0&&(f.internalFormat=c.internalFormat),c.type!==void 0&&(f.type=c.type),c.colorSpace!==void 0&&(f.colorSpace=c.colorSpace),c.minFilter!==void 0&&(f.minFilter=n(c.minFilter,Wv)),c.magFilter!==void 0&&(f.magFilter=n(c.magFilter,Wv)),c.anisotropy!==void 0&&(f.anisotropy=c.anisotropy),c.flipY!==void 0&&(f.flipY=c.flipY),c.generateMipmaps!==void 0&&(f.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(f.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(f.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(f.compareFunction=c.compareFunction),c.userData!==void 0&&(f.userData=c.userData),r[c.uuid]=f}return r}parseObject(e,t,n,r,s){let o;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const g=[];for(let x=0,M=m.length;x<M;x++){const y=m[x];n[y]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",y),g.push(n[y])}return g}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return r[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),r[m]}let f,p;switch(e.type){case"Scene":o=new Da,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Pe(e.background):o.background=h(e.background)),e.environment!==void 0&&(o.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Ru(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Cu(e.fog.color,e.fog.density)),e.fog.name!==""&&(o.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&o.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(o.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&o.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":o=new $t(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new Is(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new zx(e.color,e.intensity);break;case"DirectionalLight":o=new Bx(e.color,e.intensity);break;case"PointLight":o=new Ox(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new kx(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new Fx(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new Nx(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new Vx().fromJSON(e);break;case"SkinnedMesh":f=c(e.geometry),p=u(e.material),o=new ox(f,p),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":f=c(e.geometry),p=u(e.material),o=new an(f,p);break;case"InstancedMesh":f=c(e.geometry),p=u(e.material);const m=e.count,g=e.instanceMatrix,x=e.instanceColor;o=new lx(f,p,m),o.instanceMatrix=new Na(new Float32Array(g.array),16),x!==void 0&&(o.instanceColor=new Na(new Float32Array(x.array),x.itemSize));break;case"BatchedMesh":f=c(e.geometry),p=u(e.material),o=new cx(e.maxGeometryCount,e.maxVertexCount,e.maxIndexCount,p),o.geometry=f,o.perObjectFrustumCulled=e.perObjectFrustumCulled,o.sortObjects=e.sortObjects,o._drawRanges=e.drawRanges,o._reservedRanges=e.reservedRanges,o._visibility=e.visibility,o._active=e.active,o._bounds=e.bounds.map(M=>{const y=new Vn;y.min.fromArray(M.boxMin),y.max.fromArray(M.boxMax);const _=new Un;return _.radius=M.sphereRadius,_.center.fromArray(M.sphereCenter),{boxInitialized:M.boxInitialized,box:y,sphereInitialized:M.sphereInitialized,sphere:_}}),o._maxGeometryCount=e.maxGeometryCount,o._maxVertexCount=e.maxVertexCount,o._maxIndexCount=e.maxIndexCount,o._geometryInitialized=e.geometryInitialized,o._geometryCount=e.geometryCount,o._matricesTexture=h(e.matricesTexture.uuid);break;case"LOD":o=new ax;break;case"Line":o=new kr(c(e.geometry),u(e.material));break;case"LineLoop":o=new ux(c(e.geometry),u(e.material));break;case"LineSegments":o=new Ki(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":o=new hx(c(e.geometry),u(e.material));break;case"Sprite":o=new sx(u(e.material));break;case"Group":o=new ba;break;case"Bone":o=new Sp;break;default:o=new Ct}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let g=0;g<m.length;g++)o.add(this.parseObject(m[g],t,n,r,s))}if(e.animations!==void 0){const m=e.animations;for(let g=0;g<m.length;g++){const x=m[g];o.animations.push(s[x])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const m=e.levels;for(let g=0;g<m.length;g++){const x=m[g],M=o.getObjectByProperty("uuid",x.object);M!==void 0&&o.addLevel(M,x.distance,x.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const r=t[n.skeleton];r===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(r,n.bindMatrix)}})}}const Fb={UVMapping:Mu,CubeReflectionMapping:dr,CubeRefractionMapping:Br,EquirectangularReflectionMapping:No,EquirectangularRefractionMapping:Fo,CubeUVReflectionMapping:Ba},Gv={RepeatWrapping:Oo,ClampToEdgeWrapping:Mi,MirroredRepeatWrapping:Bo},Wv={NearestFilter:en,NearestMipmapNearestFilter:tp,NearestMipmapLinearFilter:wa,LinearFilter:qt,LinearMipmapNearestFilter:Po,LinearMipmapLinearFilter:Xi};class Ob extends Qn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=fr.get(e);if(o!==void 0){if(s.manager.itemStart(e),o.then){o.then(h=>{t&&t(h),s.manager.itemEnd(e)}).catch(h=>{r&&r(h)});return}return setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const u=fetch(e,c).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(h){return fr.add(e,h),t&&t(h),s.manager.itemEnd(e),h}).catch(function(h){r&&r(h),fr.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});fr.add(e,u),s.manager.itemStart(e)}}let Qc;class Bp{static getContext(){return Qc===void 0&&(Qc=new(window.AudioContext||window.webkitAudioContext)),Qc}static setContext(e){Qc=e}}class Bb extends Qn{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new pr(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(u){try{const h=u.slice(0);Bp.getContext().decodeAudioData(h,function(p){t(p)}).catch(c)}catch(h){c(h)}},n,r);function c(u){r?r(u):console.error(u),s.manager.itemError(e)}}}const Xv=new $e,qv=new $e,os=new $e;class zb{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new $t,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new $t,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,os.copy(e.projectionMatrix);const r=t.eyeSep/2,s=r*t.near/t.focus,o=t.near*Math.tan(Ms*t.fov*.5)/t.zoom;let c,u;qv.elements[12]=-r,Xv.elements[12]=r,c=-o*t.aspect+s,u=o*t.aspect+s,os.elements[0]=2*t.near/(u-c),os.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(os),c=-o*t.aspect-s,u=o*t.aspect-s,os.elements[0]=2*t.near/(u-c),os.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(os)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(qv),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Xv)}}class zp{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Yv(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Yv();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Yv(){return(typeof performance>"u"?Date:performance).now()}const ls=new D,Zv=new Jn,kb=new D,cs=new D;class Hb extends Ct{constructor(){super(),this.type="AudioListener",this.context=Bp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new zp}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ls,Zv,kb),cs.set(0,0,-1).applyQuaternion(Zv),t.positionX){const r=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(ls.x,r),t.positionY.linearRampToValueAtTime(ls.y,r),t.positionZ.linearRampToValueAtTime(ls.z,r),t.forwardX.linearRampToValueAtTime(cs.x,r),t.forwardY.linearRampToValueAtTime(cs.y,r),t.forwardZ.linearRampToValueAtTime(cs.z,r),t.upX.linearRampToValueAtTime(n.x,r),t.upY.linearRampToValueAtTime(n.y,r),t.upZ.linearRampToValueAtTime(n.z,r)}else t.setPosition(ls.x,ls.y,ls.z),t.setOrientation(cs.x,cs.y,cs.z,n.x,n.y,n.z)}}class Xx extends Ct{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const us=new D,jv=new Jn,Vb=new D,hs=new D;class Gb extends Xx{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(us,jv,Vb),hs.set(0,0,1).applyQuaternion(jv);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(us.x,n),t.positionY.linearRampToValueAtTime(us.y,n),t.positionZ.linearRampToValueAtTime(us.z,n),t.orientationX.linearRampToValueAtTime(hs.x,n),t.orientationY.linearRampToValueAtTime(hs.y,n),t.orientationZ.linearRampToValueAtTime(hs.z,n)}else t.setPosition(us.x,us.y,us.z),t.setOrientation(hs.x,hs.y,hs.z)}}class Wb{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class qx{constructor(e,t,n){this.binding=e,this.valueSize=n;let r,s,o;switch(t){case"quaternion":r=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":r=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:r=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,r=this.valueSize,s=e*r+r;let o=this.cumulativeWeight;if(o===0){for(let c=0;c!==r;++c)n[s+c]=n[c];o=t}else{o+=t;const c=t/o;this._mixBufferRegion(n,s,0,c,r)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,r=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,r=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,r,u,1-s,t)}o>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,r);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,r=n*this._origIndex;e.getValue(t,r);for(let s=n,o=r;s!==o;++s)t[s]=t[r+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,r,s){if(r>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,r){Jn.slerpFlat(e,t,e,t,e,n,r)}_slerpAdditive(e,t,n,r,s){const o=this._workIndex*s;Jn.multiplyQuaternionsFlat(e,o,e,t,e,n),Jn.slerpFlat(e,t,e,t,e,o,r)}_lerp(e,t,n,r,s){const o=1-r;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*o+e[n+c]*r}}_lerpAdditive(e,t,n,r,s){for(let o=0;o!==s;++o){const c=t+o;e[c]=e[c]+e[n+o]*r}}}const kp="\\[\\]\\.:\\/",Xb=new RegExp("["+kp+"]","g"),Hp="[^"+kp+"]",qb="[^"+kp.replace("\\.","")+"]",Yb=/((?:WC+[\/:])*)/.source.replace("WC",Hp),Zb=/(WCOD+)?/.source.replace("WCOD",qb),jb=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Hp),Jb=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Hp),Kb=new RegExp("^"+Yb+Zb+jb+Jb+"$"),Qb=["material","materials","bones","map"];class $b{constructor(e,t,n){const r=n||xt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];r!==void 0&&r.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,s=n.length;r!==s;++r)n[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class xt{constructor(e,t,n){this.path=t,this.parsedPath=n||xt.parseTrackName(t),this.node=xt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new xt.Composite(e,t,n):new xt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Xb,"")}static parseTrackName(e){const t=Kb.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){const s=n.nodeName.substring(r+1);Qb.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const c=s[o];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},r=n(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)e[t++]=n[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,r=t.propertyName;let s=t.propertyIndex;if(e||(e=xt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===h){h=f;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const o=e[r];if(o===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+r+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(u=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=r;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}xt.Composite=$b;xt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};xt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};xt.prototype.GetterByBindingType=[xt.prototype._getValue_direct,xt.prototype._getValue_array,xt.prototype._getValue_arrayElement,xt.prototype._getValue_toArray];xt.prototype.SetterByBindingTypeAndVersioning=[[xt.prototype._setValue_direct,xt.prototype._setValue_direct_setNeedsUpdate,xt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[xt.prototype._setValue_array,xt.prototype._setValue_array_setNeedsUpdate,xt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[xt.prototype._setValue_arrayElement,xt.prototype._setValue_arrayElement_setNeedsUpdate,xt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[xt.prototype._setValue_fromArray,xt.prototype._setValue_fromArray_setNeedsUpdate,xt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class eC{constructor(){this.isAnimationObjectGroup=!0,this.uuid=fi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,r=arguments.length;n!==r;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let f=0,p=arguments.length;f!==p;++f){const m=arguments[f],g=m.uuid;let x=t[g];if(x===void 0){x=u++,t[g]=x,e.push(m);for(let M=0,y=o;M!==y;++M)s[M].push(new xt(m,n[M],r[M]))}else if(x<h){c=e[x];const M=--h,y=e[M];t[y.uuid]=x,e[x]=y,t[g]=M,e[M]=m;for(let _=0,w=o;_!==w;++_){const E=s[_],A=E[M];let N=E[x];E[x]=A,N===void 0&&(N=new xt(m,n[_],r[_])),E[M]=N}}else e[x]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length;let s=this.nCachedObjects_;for(let o=0,c=arguments.length;o!==c;++o){const u=arguments[o],h=u.uuid,f=t[h];if(f!==void 0&&f>=s){const p=s++,m=e[p];t[m.uuid]=f,e[f]=m,t[h]=p,e[p]=u;for(let g=0,x=r;g!==x;++g){const M=n[g],y=M[p],_=M[f];M[f]=y,M[p]=_}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length;let s=this.nCachedObjects_,o=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],f=h.uuid,p=t[f];if(p!==void 0)if(delete t[f],p<s){const m=--s,g=e[m],x=--o,M=e[x];t[g.uuid]=p,e[p]=g,t[M.uuid]=m,e[m]=M,e.pop();for(let y=0,_=r;y!==_;++y){const w=n[y],E=w[m],A=w[x];w[p]=E,w[m]=A,w.pop()}}else{const m=--o,g=e[m];m>0&&(t[g.uuid]=p),e[p]=g,e.pop();for(let x=0,M=r;x!==M;++x){const y=n[x];y[p]=y[m],y.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let r=n[e];const s=this._bindings;if(r!==void 0)return s[r];const o=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,f=this.nCachedObjects_,p=new Array(h);r=s.length,n[e]=r,o.push(e),c.push(t),s.push(p);for(let m=f,g=u.length;m!==g;++m){const x=u[m];p[m]=new xt(x,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const r=this._paths,s=this._parsedPaths,o=this._bindings,c=o.length-1,u=o[c],h=e[c];t[h]=n,o[n]=u,o.pop(),s[n]=s[c],s.pop(),r[n]=r[c],r.pop()}}}class Yx{constructor(e,t,n=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=r;const s=t.tracks,o=s.length,c=new Array(o),u={endingStart:ms,endingEnd:ms};for(let h=0;h!==o;++h){const f=s[h].createInterpolant(null);c[h]=f,f.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=C_,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const r=this._clip.duration,s=e._clip.duration,o=s/r,c=r/s;e.warp(1,o,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const r=this._mixer,s=r.time,o=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=r._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/o,h[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,r){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const o=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case hp:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(o),h[f].accumulateAdditive(c);break;case Eu:default:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(o),h[f].accumulate(r,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let r=this.time+e,s=this._loopCount;const o=n===R_;if(e===0)return s===-1?r:o&&(s&1)===1?t-r:r;if(n===b_){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),r>=t||r<0){const c=Math.floor(r/t);r-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=r;if(o&&(s&1)===1)return t-r}return r}_setEndings(e,t,n){const r=this._interpolantSettings;n?(r.endingStart=gs,r.endingEnd=gs):(e?r.endingStart=this.zeroSlopeAtStart?gs:ms:r.endingStart=Ho,t?r.endingEnd=this.zeroSlopeAtEnd?gs:ms:r.endingEnd=Ho)}_scheduleFading(e,t,n){const r=this._mixer,s=r.time;let o=this._weightInterpolant;o===null&&(o=r._lendControlInterpolant(),this._weightInterpolant=o);const c=o.parameterPositions,u=o.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const tC=new Float32Array(1);class nC extends Ei{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,r=e._clip.tracks,s=r.length,o=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let f=h[u];f===void 0&&(f={},h[u]=f);for(let p=0;p!==s;++p){const m=r[p],g=m.name;let x=f[g];if(x!==void 0)++x.referenceCount,o[p]=x;else{if(x=o[p],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,u,g));continue}const M=t&&t._propertyBindings[p].binding.parsedPath;x=new qx(xt.create(n,g,M),m.ValueTypeName,m.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,u,g),o[p]=x}c[p].resultBuffer=x.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,r=e._clip.uuid,s=this._actionsByClip[r];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,r,n)}const t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const r=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const c=o.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=r.length,r.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,c=o[s],u=c.knownActions,h=u[u.length-1],f=e._byClipCacheIndex;h._byClipCacheIndex=f,u[f]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const r=this._bindingsByRootAndName,s=this._bindings;let o=r[t];o===void 0&&(o={},r[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,r=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,c=o[r],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete o[r]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Up(new Float32Array(2),new Float32Array(2),1,tC),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,s=t[r];e.__cacheIndex=r,t[r]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const r=t||this._root,s=r.uuid;let o=typeof e=="string"?el.findByName(r,e):e;const c=o!==null?o.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(o!==null?n=o.blendMode:n=Eu),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],o===null&&(o=h._clip)}if(o===null)return null;const f=new Yx(this,o,t,n);return this._bindAction(f,h),this._addInactiveAction(f,c,s),f}existingAction(e,t){const n=t||this._root,r=n.uuid,s=typeof e=="string"?el.findByName(n,e):e,o=s?s.uuid:e,c=this._actionsByClip[o];return c!==void 0&&c.actionByRoot[r]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,r=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(r,e,s,o);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,r=this._actionsByClip,s=r[n];if(s!==void 0){const o=s.knownActions;for(let c=0,u=o.length;c!==u;++c){const h=o[c];this._deactivateAction(h);const f=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=f,t[f]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete r[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const c=n[o].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const r=this._bindingsByRootAndName,s=r[t];if(s!==void 0)for(const o in s){const c=s[o];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Ze{constructor(e){this.value=e}clone(){return new Ze(this.value.clone===void 0?this.value:this.value.clone())}}let iC=0;class rC extends Ei{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:iC++}),this.name="",this.usage=Xo,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,r=t.length;n<r;n++){const s=Array.isArray(t[n])?t[n]:[t[n]];for(let o=0;o<s.length;o++)this.uniforms.push(s[o].clone())}return this}clone(){return new this.constructor().copy(this)}}class sC extends Pu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class aC{constructor(e,t,n,r,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=r,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const Jv=new $e;class Zx{constructor(e,t,n=0,r=1/0){this.ray=new za(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new Es,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return Jv.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Jv),this}intersectObject(e,t=!0,n=[]){return Yd(e,this,n,t),n.sort(Kv),n}intersectObjects(e,t=!0,n=[]){for(let r=0,s=e.length;r<s;r++)Yd(e[r],this,n,t);return n.sort(Kv),n}}function Kv(i,e){return i.distance-e.distance}function Yd(i,e,t,n){if(i.layers.test(e.layers)&&i.raycast(e,t),n===!0){const r=i.children;for(let s=0,o=r.length;s<o;s++)Yd(r[s],e,t,!0)}}class oC{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Qt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class lC{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const Qv=new oe;class cC{constructor(e=new oe(1/0,1/0),t=new oe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Qv.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Qv).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const $v=new D,$c=new D;class uC{constructor(e=new D,t=new D){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){$v.subVectors(e,this.start),$c.subVectors(this.end,this.start);const n=$c.dot($c);let s=$c.dot($v)/n;return t&&(s=Qt(s,0,1)),s}closestPointToPoint(e,t,n){const r=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const e0=new D;class hC extends Ct{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new ut,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,c=1,u=32;o<u;o++,c++){const h=o/u*Math.PI*2,f=c/u*Math.PI*2;r.push(Math.cos(h),Math.sin(h),1,Math.cos(f),Math.sin(f),1)}n.setAttribute("position",new ze(r,3));const s=new Gn({fog:!1,toneMapped:!1});this.cone=new Ki(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),e0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(e0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Lr=new D,eu=new $e,Vf=new $e;class fC extends Ki{constructor(e){const t=jx(e),n=new ut,r=[],s=[],o=new Pe(0,0,1),c=new Pe(0,1,0);for(let h=0;h<t.length;h++){const f=t[h];f.parent&&f.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(o.r,o.g,o.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new ze(r,3)),n.setAttribute("color",new ze(s,3));const u=new Gn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,r=n.getAttribute("position");Vf.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(eu.multiplyMatrices(Vf,c.matrixWorld),Lr.setFromMatrixPosition(eu),r.setXYZ(o,Lr.x,Lr.y,Lr.z),eu.multiplyMatrices(Vf,c.parent.matrixWorld),Lr.setFromMatrixPosition(eu),r.setXYZ(o+1,Lr.x,Lr.y,Lr.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function jx(i){const e=[];i.isBone===!0&&e.push(i);for(let t=0;t<i.children.length;t++)e.push.apply(e,jx(i.children[t]));return e}class dC extends an{constructor(e,t,n){const r=new cl(t,4,2),s=new Vr({wireframe:!0,fog:!1,toneMapped:!1});super(r,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const pC=new D,t0=new Pe,n0=new Pe;class mC extends Ct{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const r=new ll(t);r.rotateY(Math.PI*.5),this.material=new Vr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=r.getAttribute("position"),o=new Float32Array(s.count*3);r.setAttribute("color",new St(o,3)),this.add(new an(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");t0.copy(this.light.color),n0.copy(this.light.groundColor);for(let n=0,r=t.count;n<r;n++){const s=n<r/2?t0:n0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(pC.setFromMatrixPosition(this.light.matrixWorld).negate())}}class gC extends Ki{constructor(e=10,t=10,n=4473924,r=8947848){n=new Pe(n),r=new Pe(r);const s=t/2,o=e/t,c=e/2,u=[],h=[];for(let m=0,g=0,x=-c;m<=t;m++,x+=o){u.push(-c,0,x,c,0,x),u.push(x,0,-c,x,0,c);const M=m===s?n:r;M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3}const f=new ut;f.setAttribute("position",new ze(u,3)),f.setAttribute("color",new ze(h,3));const p=new Gn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class vC extends Ki{constructor(e=10,t=16,n=8,r=64,s=4473924,o=8947848){s=new Pe(s),o=new Pe(o);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),g=Math.sin(m)*e,x=Math.cos(m)*e;c.push(0,0,0),c.push(g,0,x);const M=p&1?s:o;u.push(M.r,M.g,M.b),u.push(M.r,M.g,M.b)}for(let p=0;p<n;p++){const m=p&1?s:o,g=e-e/n*p;for(let x=0;x<r;x++){let M=x/r*(Math.PI*2),y=Math.sin(M)*g,_=Math.cos(M)*g;c.push(y,0,_),u.push(m.r,m.g,m.b),M=(x+1)/r*(Math.PI*2),y=Math.sin(M)*g,_=Math.cos(M)*g,c.push(y,0,_),u.push(m.r,m.g,m.b)}}const h=new ut;h.setAttribute("position",new ze(c,3)),h.setAttribute("color",new ze(u,3));const f=new Gn({vertexColors:!0,toneMapped:!1});super(h,f),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const i0=new D,tu=new D,r0=new D;class _C extends Ct{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let r=new ut;r.setAttribute("position",new ze([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Gn({fog:!1,toneMapped:!1});this.lightPlane=new kr(r,s),this.add(this.lightPlane),r=new ut,r.setAttribute("position",new ze([0,0,0,0,0,1],3)),this.targetLine=new kr(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),i0.setFromMatrixPosition(this.light.matrixWorld),tu.setFromMatrixPosition(this.light.target.matrixWorld),r0.subVectors(tu,i0),this.lightPlane.lookAt(tu),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(tu),this.targetLine.scale.z=r0.length()}}const nu=new D,Kt=new ka;class xC extends Ki{constructor(e){const t=new ut,n=new Gn({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],o={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(x,M){u(x),u(M)}function u(x){r.push(0,0,0),s.push(0,0,0),o[x]===void 0&&(o[x]=[]),o[x].push(r.length/3-1)}t.setAttribute("position",new ze(r,3)),t.setAttribute("color",new ze(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const h=new Pe(16755200),f=new Pe(16711680),p=new Pe(43775),m=new Pe(16777215),g=new Pe(3355443);this.setColors(h,f,p,m,g)}setColors(e,t,n,r,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,r.r,r.g,r.b),c.setXYZ(39,r.r,r.g,r.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,r=1;Kt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),sn("c",t,e,Kt,0,0,-1),sn("t",t,e,Kt,0,0,1),sn("n1",t,e,Kt,-n,-r,-1),sn("n2",t,e,Kt,n,-r,-1),sn("n3",t,e,Kt,-n,r,-1),sn("n4",t,e,Kt,n,r,-1),sn("f1",t,e,Kt,-n,-r,1),sn("f2",t,e,Kt,n,-r,1),sn("f3",t,e,Kt,-n,r,1),sn("f4",t,e,Kt,n,r,1),sn("u1",t,e,Kt,n*.7,r*1.1,-1),sn("u2",t,e,Kt,-n*.7,r*1.1,-1),sn("u3",t,e,Kt,0,r*2,-1),sn("cf1",t,e,Kt,-n,0,1),sn("cf2",t,e,Kt,n,0,1),sn("cf3",t,e,Kt,0,-r,1),sn("cf4",t,e,Kt,0,r,1),sn("cn1",t,e,Kt,-n,0,-1),sn("cn2",t,e,Kt,n,0,-1),sn("cn3",t,e,Kt,0,-r,-1),sn("cn4",t,e,Kt,0,r,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function sn(i,e,t,n,r,s,o){nu.set(r,s,o).unproject(n);const c=e[i];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,f=c.length;h<f;h++)u.setXYZ(c[h],nu.x,nu.y,nu.z)}}const iu=new Vn;class yC extends Ki{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(8*3),s=new ut;s.setIndex(new St(n,1)),s.setAttribute("position",new St(r,3)),super(s,new Gn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&iu.setFromObject(this.object),iu.isEmpty())return;const t=iu.min,n=iu.max,r=this.geometry.attributes.position,s=r.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class SC extends Ki{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new ut;s.setIndex(new St(n,1)),s.setAttribute("position",new ze(r,3)),super(s,new Gn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class MC extends kr{constructor(e,t=1,n=16776960){const r=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new ut;o.setAttribute("position",new ze(s,3)),o.computeBoundingSphere(),super(o,new Gn({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new ut;u.setAttribute("position",new ze(c,3)),u.computeBoundingSphere(),this.add(new an(u,new Vr({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const s0=new D;let ru,Gf;class EC extends Ct{constructor(e=new D(0,0,1),t=new D(0,0,0),n=1,r=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",ru===void 0&&(ru=new ut,ru.setAttribute("position",new ze([0,0,0,0,1,0],3)),Gf=new Ga(0,.5,1,5,1),Gf.translate(0,-.5,0)),this.position.copy(t),this.line=new kr(ru,new Gn({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new an(Gf,new Vr({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{s0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(s0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class wC extends Ki{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new ut;r.setAttribute("position",new ze(t,3)),r.setAttribute("color",new ze(n,3));const s=new Gn({vertexColors:!0,toneMapped:!1});super(r,s),this.type="AxesHelper"}setColors(e,t,n){const r=new Pe,s=this.geometry.attributes.color.array;return r.set(e),r.toArray(s,0),r.toArray(s,3),r.set(t),r.toArray(s,6),r.toArray(s,9),r.set(n),r.toArray(s,12),r.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class TC{constructor(){this.type="ShapePath",this.color=new Pe,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Zo,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,r){return this.currentPath.quadraticCurveTo(e,t,n,r),this}bezierCurveTo(e,t,n,r,s,o){return this.currentPath.bezierCurveTo(e,t,n,r,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const w=[];for(let E=0,A=_.length;E<A;E++){const N=_[E],P=new ws;P.curves=N.curves,w.push(P)}return w}function n(_,w){const E=w.length;let A=!1;for(let N=E-1,P=0;P<E;N=P++){let I=w[N],B=w[P],C=B.x-I.x,b=B.y-I.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(I=w[P],C=-C,B=w[N],b=-b),_.y<I.y||_.y>B.y)continue;if(_.y===I.y){if(_.x===I.x)return!0}else{const F=b*(_.x-I.x)-C*(_.y-I.y);if(F===0)return!0;if(F<0)continue;A=!A}}else{if(_.y!==I.y)continue;if(B.x<=_.x&&_.x<=I.x||I.x<=_.x&&_.x<=B.x)return!0}}return A}const r=Yi.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,c,u;const h=[];if(s.length===1)return c=s[0],u=new ws,u.curves=c.curves,h.push(u),h;let f=!r(s[0].getPoints());f=e?!f:f;const p=[],m=[];let g=[],x=0,M;m[x]=void 0,g[x]=[];for(let _=0,w=s.length;_<w;_++)c=s[_],M=c.getPoints(),o=r(M),o=e?!o:o,o?(!f&&m[x]&&x++,m[x]={s:new ws,p:M},m[x].s.curves=c.curves,f&&x++,g[x]=[]):g[x].push({h:c,p:M[0]});if(!m[0])return t(s);if(m.length>1){let _=!1,w=0;for(let E=0,A=m.length;E<A;E++)p[E]=[];for(let E=0,A=m.length;E<A;E++){const N=g[E];for(let P=0;P<N.length;P++){const I=N[P];let B=!0;for(let C=0;C<m.length;C++)n(I.p,m[C].p)&&(E!==C&&w++,B?(B=!1,p[C].push(I)):_=!0);B&&p[E].push(I)}}w>0&&_===!1&&(g=p)}let y;for(let _=0,w=m.length;_<w;_++){u=m[_].s,h.push(u),y=g[_];for(let E=0,A=y.length;E<A;E++)u.holes.push(y[E].h)}return h}}class AC extends tn{constructor(e=1,t=1,n=1,r={}){console.warn('THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the "count" parameter to enable MRT.'),super(e,t,{...r,count:n}),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Cs}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Cs);const bC=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:ep,AddEquation:Fr,AddOperation:u_,AdditiveAnimationBlendMode:hp,AdditiveBlending:cd,AgXToneMapping:m_,AlphaFormat:S_,AlwaysCompare:B_,AlwaysDepth:i_,AlwaysStencilFunc:Bd,AmbientLight:zx,AnimationAction:Yx,AnimationClip:el,AnimationLoader:Rb,AnimationMixer:nC,AnimationObjectGroup:eC,AnimationUtils:Tb,ArcCurve:fx,ArrayCamera:nx,ArrowHelper:EC,AttachedBindMode:fd,Audio:Xx,AudioAnalyser:Wb,AudioContext:Bp,AudioListener:Hb,AudioLoader:Bb,AxesHelper:wC,BackSide:fn,BasicDepthPacking:Ji,BasicShadowMap:O0,BatchedMesh:cx,Bone:Sp,BooleanKeyframeTrack:Ls,Box2:cC,Box3:Vn,Box3Helper:SC,BoxGeometry:Ps,BoxHelper:yC,BufferAttribute:St,BufferGeometry:ut,BufferGeometryLoader:Wx,ByteType:__,Cache:fr,Camera:ka,CameraHelper:xC,CanvasTexture:jA,CapsuleGeometry:Du,CatmullRomCurve3:dx,CineonToneMapping:d_,CircleGeometry:Nu,ClampToEdgeWrapping:Mi,Clock:zp,Color:Pe,ColorKeyframeTrack:Dp,ColorManagement:Ut,CompressedArrayTexture:YA,CompressedCubeTexture:ZA,CompressedTexture:Lu,CompressedTextureLoader:Pb,ConeGeometry:Fu,ConstantAlphaFactor:e_,ConstantColorFactor:Q0,CubeCamera:Y_,CubeReflectionMapping:dr,CubeRefractionMapping:Br,CubeTexture:sl,CubeTextureLoader:Fp,CubeUVReflectionMapping:Ba,CubicBezierCurve:wp,CubicBezierCurve3:px,CubicInterpolant:Ix,CullFaceBack:ld,CullFaceFront:F0,CullFaceFrontBack:FS,CullFaceNone:N0,Curve:Di,CurvePath:gx,CustomBlending:B0,CustomToneMapping:p_,CylinderGeometry:Ga,Cylindrical:lC,Data3DTexture:pp,DataArrayTexture:Tu,DataTexture:Or,DataTextureLoader:Ib,DataUtils:WM,DecrementStencilOp:YS,DecrementWrapStencilOp:jS,DefaultLoadingManager:Dx,DepthFormat:Ss,DepthStencilFormat:Ts,DepthTexture:Au,DetachedBindMode:v_,DirectionalLight:Bx,DirectionalLightHelper:_C,DiscreteInterpolant:Lx,DisplayP3ColorSpace:wu,DodecahedronGeometry:Ou,DoubleSide:kn,DstAlphaFactor:Y0,DstColorFactor:j0,DynamicCopyUsage:uM,DynamicDrawUsage:rM,DynamicReadUsage:oM,EdgesGeometry:vx,EllipseCurve:Uu,EqualCompare:D_,EqualDepth:s_,EqualStencilFunc:$S,EquirectangularReflectionMapping:No,EquirectangularRefractionMapping:Fo,Euler:Kn,EventDispatcher:Ei,ExtrudeGeometry:zu,FileLoader:pr,Float16BufferAttribute:JM,Float32BufferAttribute:ze,FloatType:hi,Fog:Ru,FogExp2:Cu,FramebufferTexture:qA,FrontSide:ji,Frustum:al,GLBufferAttribute:aC,GLSL1:fM,GLSL3:zd,GreaterCompare:N_,GreaterDepth:o_,GreaterEqualCompare:O_,GreaterEqualDepth:a_,GreaterEqualStencilFunc:iM,GreaterStencilFunc:tM,GridHelper:gC,Group:ba,HalfFloatType:Ia,HemisphereLight:Nx,HemisphereLightHelper:mC,IcosahedronGeometry:ku,ImageBitmapLoader:Ob,ImageLoader:tl,ImageUtils:V_,IncrementStencilOp:qS,IncrementWrapStencilOp:ZS,InstancedBufferAttribute:Na,InstancedBufferGeometry:Gx,InstancedInterleavedBuffer:sC,InstancedMesh:lx,Int16BufferAttribute:ZM,Int32BufferAttribute:jM,Int8BufferAttribute:XM,IntType:ip,InterleavedBuffer:Pu,InterleavedBufferAttribute:As,Interpolant:ul,InterpolateDiscrete:zo,InterpolateLinear:ko,InterpolateSmooth:pu,InvertStencilOp:JS,KeepStencilOp:fs,KeyframeTrack:Ni,LOD:ax,LatheGeometry:ol,Layers:Es,LessCompare:U_,LessDepth:r_,LessEqualCompare:fp,LessEqualDepth:Do,LessEqualStencilFunc:eM,LessStencilFunc:QS,Light:Wr,LightProbe:Vx,Line:kr,Line3:uC,LineBasicMaterial:Gn,LineCurve:Tp,LineCurve3:mx,LineDashedMaterial:Cx,LineLoop:ux,LineSegments:Ki,LinearDisplayP3ColorSpace:rl,LinearFilter:qt,LinearInterpolant:Up,LinearMipMapLinearFilter:kS,LinearMipMapNearestFilter:zS,LinearMipmapLinearFilter:Xi,LinearMipmapNearestFilter:Po,LinearSRGBColorSpace:Ui,LinearToneMapping:h_,LinearTransfer:Vo,Loader:Qn,LoaderUtils:qd,LoadingManager:Np,LoopOnce:b_,LoopPingPong:R_,LoopRepeat:C_,LuminanceAlphaFormat:w_,LuminanceFormat:E_,MOUSE:DS,Material:vn,MaterialLoader:Zu,MathUtils:ya,Matrix3:lt,Matrix4:$e,MaxEquation:V0,Mesh:an,MeshBasicMaterial:Vr,MeshDepthMaterial:_p,MeshDistanceMaterial:xp,MeshLambertMaterial:Ax,MeshMatcapMaterial:bx,MeshNormalMaterial:Ip,MeshPhongMaterial:wx,MeshPhysicalMaterial:Pp,MeshStandardMaterial:Rp,MeshToonMaterial:Tx,MinEquation:H0,MirroredRepeatWrapping:Bo,MixOperation:c_,MultiplyBlending:hd,MultiplyOperation:il,NearestFilter:en,NearestMipMapLinearFilter:BS,NearestMipMapNearestFilter:OS,NearestMipmapLinearFilter:wa,NearestMipmapNearestFilter:tp,NeutralToneMapping:g_,NeverCompare:L_,NeverDepth:n_,NeverStencilFunc:KS,NoBlending:pn,NoColorSpace:Ii,NoToneMapping:Li,NormalAnimationBlendMode:Eu,NormalBlending:ys,NotEqualCompare:F_,NotEqualDepth:l_,NotEqualStencilFunc:nM,NumberKeyframeTrack:Qo,Object3D:Ct,ObjectLoader:Nb,ObjectSpaceNormalMap:I_,OctahedronGeometry:ll,OneFactor:W0,OneMinusConstantAlphaFactor:t_,OneMinusConstantColorFactor:$0,OneMinusDstAlphaFactor:Z0,OneMinusDstColorFactor:J0,OneMinusSrcAlphaFactor:_u,OneMinusSrcColorFactor:q0,OrthographicCamera:Is,P3Primaries:Wo,PCFShadowMap:Su,PCFSoftShadowMap:Ro,PMREMGenerator:kd,Path:Zo,PerspectiveCamera:$t,Plane:Nr,PlaneGeometry:Ha,PlaneHelper:MC,PointLight:Ox,PointLightHelper:dC,Points:hx,PointsMaterial:Mp,PolarGridHelper:vC,PolyhedronGeometry:Gr,PositionalAudio:Gb,PropertyBinding:xt,PropertyMixer:qx,QuadraticBezierCurve:Ap,QuadraticBezierCurve3:bp,Quaternion:Jn,QuaternionKeyframeTrack:Wa,QuaternionLinearInterpolant:Ux,RED_GREEN_RGTC2_Format:Fd,RED_RGTC1_Format:A_,REVISION:Cs,RGBADepthPacking:P_,RGBAFormat:jn,RGBAIntegerFormat:cp,RGBA_ASTC_10x10_Format:Pd,RGBA_ASTC_10x5_Format:bd,RGBA_ASTC_10x6_Format:Cd,RGBA_ASTC_10x8_Format:Rd,RGBA_ASTC_12x10_Format:Id,RGBA_ASTC_12x12_Format:Ld,RGBA_ASTC_4x4_Format:xd,RGBA_ASTC_5x4_Format:yd,RGBA_ASTC_5x5_Format:Sd,RGBA_ASTC_6x5_Format:Md,RGBA_ASTC_6x6_Format:Ed,RGBA_ASTC_8x5_Format:wd,RGBA_ASTC_8x6_Format:Td,RGBA_ASTC_8x8_Format:Ad,RGBA_BPTC_Format:du,RGBA_ETC2_EAC_Format:_d,RGBA_PVRTC_2BPPV1_Format:gd,RGBA_PVRTC_4BPPV1_Format:md,RGBA_S3TC_DXT1_Format:uu,RGBA_S3TC_DXT3_Format:hu,RGBA_S3TC_DXT5_Format:fu,RGBFormat:M_,RGB_BPTC_SIGNED_Format:Ud,RGB_BPTC_UNSIGNED_Format:Dd,RGB_ETC1_Format:up,RGB_ETC2_Format:vd,RGB_PVRTC_2BPPV1_Format:pd,RGB_PVRTC_4BPPV1_Format:dd,RGB_S3TC_DXT1_Format:cu,RGFormat:T_,RGIntegerFormat:lp,RawShaderMaterial:Ex,Ray:za,Raycaster:Zx,Rec709Primaries:Go,RectAreaLight:kx,RedFormat:ap,RedIntegerFormat:op,ReinhardToneMapping:f_,RenderTarget:G_,RepeatWrapping:Oo,ReplaceStencilOp:XS,ReverseSubtractEquation:k0,RingGeometry:Hu,SIGNED_RED_GREEN_RGTC2_Format:Od,SIGNED_RED_RGTC1_Format:Nd,SRGBColorSpace:yt,SRGBTransfer:Ht,Scene:Da,ShaderChunk:ht,ShaderLib:Pi,ShaderMaterial:nn,ShadowMaterial:Mx,Shape:ws,ShapeGeometry:Vu,ShapePath:TC,ShapeUtils:Yi,ShortType:x_,Skeleton:Iu,SkeletonHelper:fC,SkinnedMesh:ox,Source:vs,Sphere:Un,SphereGeometry:cl,Spherical:oC,SphericalHarmonics3:Hx,SplineCurve:Cp,SpotLight:Fx,SpotLightHelper:hC,Sprite:sx,SpriteMaterial:yp,SrcAlphaFactor:vu,SrcAlphaSaturateFactor:K0,SrcColorFactor:X0,StaticCopyUsage:cM,StaticDrawUsage:Xo,StaticReadUsage:aM,StereoCamera:zb,StreamCopyUsage:hM,StreamDrawUsage:sM,StreamReadUsage:lM,StringKeyframeTrack:Us,SubtractEquation:z0,SubtractiveBlending:ud,TOUCH:NS,TangentSpaceNormalMap:Hr,TetrahedronGeometry:Gu,Texture:Bt,TextureLoader:Yu,TorusGeometry:Wu,TorusKnotGeometry:Xu,Triangle:ui,TriangleFanDrawMode:GS,TriangleStripDrawMode:VS,TrianglesDrawMode:HS,TubeGeometry:qu,UVMapping:Mu,Uint16BufferAttribute:mp,Uint32BufferAttribute:gp,Uint8BufferAttribute:qM,Uint8ClampedBufferAttribute:YM,Uniform:Ze,UniformsGroup:rC,UniformsLib:be,UniformsUtils:q_,UnsignedByteType:un,UnsignedInt248Type:Rs,UnsignedInt5999Type:y_,UnsignedIntType:zr,UnsignedShort4444Type:rp,UnsignedShort5551Type:sp,UnsignedShortType:np,VSMShadowMap:Ri,Vector2:oe,Vector3:D,Vector4:It,VectorKeyframeTrack:$o,VideoTexture:XA,WebGL3DRenderTarget:DM,WebGLArrayRenderTarget:UM,WebGLCoordinateSystem:qi,WebGLCubeRenderTarget:Z_,WebGLMultipleRenderTargets:AC,WebGLRenderTarget:tn,WebGLRenderer:ix,WebGLUtils:tx,WebGPUCoordinateSystem:qo,WireframeGeometry:Sx,WrapAroundEnding:Ho,ZeroCurvatureEnding:ms,ZeroFactor:G0,ZeroSlopeEnding:gs,ZeroStencilOp:WS,createCanvasElement:k_},Symbol.toStringTag,{value:"Module"}));var Jx={exports:{}},Ds={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Ds.ConcurrentRoot=1;Ds.ContinuousEventPriority=4;Ds.DefaultEventPriority=16;Ds.DiscreteEventPriority=1;Ds.IdleEventPriority=536870912;Ds.LegacyRoot=0;Jx.exports=Ds;var Ra=Jx.exports;function CC(i){let e;const t=new Set,n=(h,f)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=f?p:Object.assign({},e,p),t.forEach(g=>g(e,m))}},r=()=>e,s=(h,f=r,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=f(e);function g(){const x=f(e);if(!p(m,x)){const M=m;h(m=x,M)}}return t.add(g),()=>t.delete(g)},u={setState:n,getState:r,subscribe:(h,f,p)=>f||p?s(h,f,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=i(n,r,u),u}const RC=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),a0=RC?he.useEffect:he.useLayoutEffect;function PC(i){const e=typeof i=="function"?CC(i):i,t=(n=e.getState,r=Object.is)=>{const[,s]=he.useReducer(y=>y+1,0),o=e.getState(),c=he.useRef(o),u=he.useRef(n),h=he.useRef(r),f=he.useRef(!1),p=he.useRef();p.current===void 0&&(p.current=n(o));let m,g=!1;(c.current!==o||u.current!==n||h.current!==r||f.current)&&(m=n(o),g=!r(p.current,m)),a0(()=>{g&&(p.current=m),c.current=o,u.current=n,h.current=r,f.current=!1});const x=he.useRef(o);a0(()=>{const y=()=>{try{const w=e.getState(),E=u.current(w);h.current(p.current,E)||(c.current=w,p.current=E,s())}catch{f.current=!0,s()}},_=e.subscribe(y);return e.getState()!==x.current&&y(),_},[]);const M=g?m:p.current;return he.useDebugValue(M),M};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const r=n.length<=0;return{value:n.shift(),done:r}}}},t}var Kx={exports:{}},Qx={exports:{}},$x={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(i){function e(H,Q){var Z=H.length;H.push(Q);e:for(;0<Z;){var fe=Z-1>>>1,we=H[fe];if(0<r(we,Q))H[fe]=Q,H[Z]=we,Z=fe;else break e}}function t(H){return H.length===0?null:H[0]}function n(H){if(H.length===0)return null;var Q=H[0],Z=H.pop();if(Z!==Q){H[0]=Z;e:for(var fe=0,we=H.length,Le=we>>>1;fe<Le;){var te=2*(fe+1)-1,me=H[te],Ae=te+1,ye=H[Ae];if(0>r(me,Z))Ae<we&&0>r(ye,me)?(H[fe]=ye,H[Ae]=Z,fe=Ae):(H[fe]=me,H[te]=Z,fe=te);else if(Ae<we&&0>r(ye,Z))H[fe]=ye,H[Ae]=Z,fe=Ae;else break e}}return Q}function r(H,Q){var Z=H.sortIndex-Q.sortIndex;return Z!==0?Z:H.id-Q.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;i.unstable_now=function(){return s.now()}}else{var o=Date,c=o.now();i.unstable_now=function(){return o.now()-c}}var u=[],h=[],f=1,p=null,m=3,g=!1,x=!1,M=!1,y=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function E(H){for(var Q=t(h);Q!==null;){if(Q.callback===null)n(h);else if(Q.startTime<=H)n(h),Q.sortIndex=Q.expirationTime,e(u,Q);else break;Q=t(h)}}function A(H){if(M=!1,E(H),!x)if(t(u)!==null)x=!0,le(N);else{var Q=t(h);Q!==null&&ge(A,Q.startTime-H)}}function N(H,Q){x=!1,M&&(M=!1,_(B),B=-1),g=!0;var Z=m;try{for(E(Q),p=t(u);p!==null&&(!(p.expirationTime>Q)||H&&!F());){var fe=p.callback;if(typeof fe=="function"){p.callback=null,m=p.priorityLevel;var we=fe(p.expirationTime<=Q);Q=i.unstable_now(),typeof we=="function"?p.callback=we:p===t(u)&&n(u),E(Q)}else n(u);p=t(u)}if(p!==null)var Le=!0;else{var te=t(h);te!==null&&ge(A,te.startTime-Q),Le=!1}return Le}finally{p=null,m=Z,g=!1}}var P=!1,I=null,B=-1,C=5,b=-1;function F(){return!(i.unstable_now()-b<C)}function W(){if(I!==null){var H=i.unstable_now();b=H;var Q=!0;try{Q=I(!0,H)}finally{Q?k():(P=!1,I=null)}}else P=!1}var k;if(typeof w=="function")k=function(){w(W)};else if(typeof MessageChannel<"u"){var j=new MessageChannel,K=j.port2;j.port1.onmessage=W,k=function(){K.postMessage(null)}}else k=function(){y(W,0)};function le(H){I=H,P||(P=!0,k())}function ge(H,Q){B=y(function(){H(i.unstable_now())},Q)}i.unstable_IdlePriority=5,i.unstable_ImmediatePriority=1,i.unstable_LowPriority=4,i.unstable_NormalPriority=3,i.unstable_Profiling=null,i.unstable_UserBlockingPriority=2,i.unstable_cancelCallback=function(H){H.callback=null},i.unstable_continueExecution=function(){x||g||(x=!0,le(N))},i.unstable_forceFrameRate=function(H){0>H||125<H?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<H?Math.floor(1e3/H):5},i.unstable_getCurrentPriorityLevel=function(){return m},i.unstable_getFirstCallbackNode=function(){return t(u)},i.unstable_next=function(H){switch(m){case 1:case 2:case 3:var Q=3;break;default:Q=m}var Z=m;m=Q;try{return H()}finally{m=Z}},i.unstable_pauseExecution=function(){},i.unstable_requestPaint=function(){},i.unstable_runWithPriority=function(H,Q){switch(H){case 1:case 2:case 3:case 4:case 5:break;default:H=3}var Z=m;m=H;try{return Q()}finally{m=Z}},i.unstable_scheduleCallback=function(H,Q,Z){var fe=i.unstable_now();switch(typeof Z=="object"&&Z!==null?(Z=Z.delay,Z=typeof Z=="number"&&0<Z?fe+Z:fe):Z=fe,H){case 1:var we=-1;break;case 2:we=250;break;case 5:we=1073741823;break;case 4:we=1e4;break;default:we=5e3}return we=Z+we,H={id:f++,callback:Q,priorityLevel:H,startTime:Z,expirationTime:we,sortIndex:-1},Z>fe?(H.sortIndex=Z,e(h,H),t(u)===null&&H===t(h)&&(M?(_(B),B=-1):M=!0,ge(A,Z-fe))):(H.sortIndex=we,e(u,H),x||g||(x=!0,le(N))),H},i.unstable_shouldYield=F,i.unstable_wrapCallback=function(H){var Q=m;return function(){var Z=m;m=Q;try{return H.apply(this,arguments)}finally{m=Z}}}})($x);Qx.exports=$x;var Zd=Qx.exports;/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var IC=function(e){var t={},n=he,r=Zd,s=Object.assign;function o(a){for(var l="https://reactjs.org/docs/error-decoder.html?invariant="+a,d=1;d<arguments.length;d++)l+="&args[]="+encodeURIComponent(arguments[d]);return"Minified React error #"+a+"; visit "+l+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),f=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),g=Symbol.for("react.provider"),x=Symbol.for("react.context"),M=Symbol.for("react.forward_ref"),y=Symbol.for("react.suspense"),_=Symbol.for("react.suspense_list"),w=Symbol.for("react.memo"),E=Symbol.for("react.lazy"),A=Symbol.for("react.offscreen"),N=Symbol.iterator;function P(a){return a===null||typeof a!="object"?null:(a=N&&a[N]||a["@@iterator"],typeof a=="function"?a:null)}function I(a){if(a==null)return null;if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a;switch(a){case f:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case y:return"Suspense";case _:return"SuspenseList"}if(typeof a=="object")switch(a.$$typeof){case x:return(a.displayName||"Context")+".Consumer";case g:return(a._context.displayName||"Context")+".Provider";case M:var l=a.render;return a=a.displayName,a||(a=l.displayName||l.name||"",a=a!==""?"ForwardRef("+a+")":"ForwardRef"),a;case w:return l=a.displayName||null,l!==null?l:I(a.type)||"Memo";case E:l=a._payload,a=a._init;try{return I(a(l))}catch{}}return null}function B(a){var l=a.type;switch(a.tag){case 24:return"Cache";case 9:return(l.displayName||"Context")+".Consumer";case 10:return(l._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return a=l.render,a=a.displayName||a.name||"",l.displayName||(a!==""?"ForwardRef("+a+")":"ForwardRef");case 7:return"Fragment";case 5:return l;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return I(l);case 8:return l===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof l=="function")return l.displayName||l.name||null;if(typeof l=="string")return l}return null}function C(a){var l=a,d=a;if(a.alternate)for(;l.return;)l=l.return;else{a=l;do l=a,l.flags&4098&&(d=l.return),a=l.return;while(a)}return l.tag===3?d:null}function b(a){if(C(a)!==a)throw Error(o(188))}function F(a){var l=a.alternate;if(!l){if(l=C(a),l===null)throw Error(o(188));return l!==a?null:a}for(var d=a,v=l;;){var S=d.return;if(S===null)break;var T=S.alternate;if(T===null){if(v=S.return,v!==null){d=v;continue}break}if(S.child===T.child){for(T=S.child;T;){if(T===d)return b(S),a;if(T===v)return b(S),l;T=T.sibling}throw Error(o(188))}if(d.return!==v.return)d=S,v=T;else{for(var O=!1,G=S.child;G;){if(G===d){O=!0,d=S,v=T;break}if(G===v){O=!0,v=S,d=T;break}G=G.sibling}if(!O){for(G=T.child;G;){if(G===d){O=!0,d=T,v=S;break}if(G===v){O=!0,v=T,d=S;break}G=G.sibling}if(!O)throw Error(o(189))}}if(d.alternate!==v)throw Error(o(190))}if(d.tag!==3)throw Error(o(188));return d.stateNode.current===d?a:l}function W(a){return a=F(a),a!==null?k(a):null}function k(a){if(a.tag===5||a.tag===6)return a;for(a=a.child;a!==null;){var l=k(a);if(l!==null)return l;a=a.sibling}return null}function j(a){if(a.tag===5||a.tag===6)return a;for(a=a.child;a!==null;){if(a.tag!==4){var l=j(a);if(l!==null)return l}a=a.sibling}return null}var K=Array.isArray,le=e.getPublicInstance,ge=e.getRootHostContext,H=e.getChildHostContext,Q=e.prepareForCommit,Z=e.resetAfterCommit,fe=e.createInstance,we=e.appendInitialChild,Le=e.finalizeInitialChildren,te=e.prepareUpdate,me=e.shouldSetTextContent,Ae=e.createTextInstance,ye=e.scheduleTimeout,Ye=e.cancelTimeout,tt=e.noTimeout,Fe=e.isPrimaryRenderer,V=e.supportsMutation,ce=e.supportsPersistence,re=e.supportsHydration,_e=e.getInstanceFromNode,ve=e.preparePortalMount,xe=e.getCurrentEventPriority,U=e.detachDeletedInstance,R=e.supportsMicrotasks,Y=e.scheduleMicrotask,se=e.supportsTestSelectors,ue=e.findFiberRoot,de=e.getBoundingRect,Xe=e.getTextContent,pe=e.isHiddenSubtree,ke=e.matchAccessibilityRole,je=e.setFocusIfFocusable,Se=e.setupIntersectionObserver,Ue=e.appendChild,it=e.appendChildToContainer,Oe=e.commitTextUpdate,Be=e.commitMount,mt=e.commitUpdate,gt=e.insertBefore,Rt=e.insertInContainerBefore,Mt=e.removeChild,zt=e.removeChildFromContainer,Ve=e.resetTextContent,z=e.hideInstance,Te=e.hideTextInstance,Ee=e.unhideInstance,qe=e.unhideTextInstance,Je=e.clearContainer,Dt=e.cloneInstance,Ft=e.createContainerChildSet,kt=e.appendChildToContainerChildSet,_n=e.finalizeContainerChildren,Nt=e.replaceContainerChildren,ei=e.cloneHiddenInstance,ti=e.cloneHiddenTextInstance,Qi=e.canHydrateInstance,ml=e.canHydrateTextInstance,gl=e.canHydrateSuspenseInstance,vl=e.isSuspenseInstancePending,mr=e.isSuspenseInstanceFallback,_l=e.registerSuspenseInstanceRetry,Fi=e.getNextHydratableSibling,xl=e.getFirstHydratableChild,yl=e.getFirstHydratableChildWithinContainer,Ku=e.getFirstHydratableChildWithinSuspenseInstance,Qu=e.hydrateInstance,$u=e.hydrateTextInstance,L=e.hydrateSuspenseInstance,q=e.getNextHydratableInstanceAfterSuspenseInstance,ee=e.commitHydratedContainer,ne=e.commitHydratedSuspenseInstance,$=e.clearSuspenseBoundary,Re=e.clearSuspenseBoundaryFromContainer,Ge=e.shouldDeleteUnhydratedTailInstances,Qe=e.didNotMatchHydratedContainerTextInstance,nt=e.didNotMatchHydratedTextInstance,rt;function et(a){if(rt===void 0)try{throw Error()}catch(d){var l=d.stack.trim().match(/\n( *(at )?)/);rt=l&&l[1]||""}return`
`+rt+a}var st=!1;function Gt(a,l){if(!a||st)return"";st=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(l)if(l=function(){throw Error()},Object.defineProperty(l.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(l,[])}catch(Me){var v=Me}Reflect.construct(a,[],l)}else{try{l.call()}catch(Me){v=Me}a.call(l.prototype)}else{try{throw Error()}catch(Me){v=Me}a()}}catch(Me){if(Me&&v&&typeof Me.stack=="string"){for(var S=Me.stack.split(`
`),T=v.stack.split(`
`),O=S.length-1,G=T.length-1;1<=O&&0<=G&&S[O]!==T[G];)G--;for(;1<=O&&0<=G;O--,G--)if(S[O]!==T[G]){if(O!==1||G!==1)do if(O--,G--,0>G||S[O]!==T[G]){var ae=`
`+S[O].replace(" at new "," at ");return a.displayName&&ae.includes("<anonymous>")&&(ae=ae.replace("<anonymous>",a.displayName)),ae}while(1<=O&&0<=G);break}}}finally{st=!1,Error.prepareStackTrace=d}return(a=a?a.displayName||a.name:"")?et(a):""}var Dn=Object.prototype.hasOwnProperty,jt=[],Tn=-1;function Et(a){return{current:a}}function De(a){0>Tn||(a.current=jt[Tn],jt[Tn]=null,Tn--)}function Lt(a,l){Tn++,jt[Tn]=a.current,a.current=l}var _t={},Wt=Et(_t),En=Et(!1),ni=_t;function Oi(a,l){var d=a.type.contextTypes;if(!d)return _t;var v=a.stateNode;if(v&&v.__reactInternalMemoizedUnmaskedChildContext===l)return v.__reactInternalMemoizedMaskedChildContext;var S={},T;for(T in d)S[T]=l[T];return v&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=l,a.__reactInternalMemoizedMaskedChildContext=S),S}function Pt(a){return a=a.childContextTypes,a!=null}function ii(){De(En),De(Wt)}function Fs(a,l,d){if(Wt.current!==_t)throw Error(o(168));Lt(Wt,l),Lt(En,d)}function Nn(a,l,d){var v=a.stateNode;if(l=l.childContextTypes,typeof v.getChildContext!="function")return d;v=v.getChildContext();for(var S in v)if(!(S in l))throw Error(o(108,B(a)||"Unknown",S));return s({},d,v)}function gr(a){return a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||_t,ni=Wt.current,Lt(Wt,a),Lt(En,En.current),!0}function Sl(a,l,d){var v=a.stateNode;if(!v)throw Error(o(169));d?(a=Nn(a,l,ni),v.__reactInternalMemoizedMergedChildContext=a,De(En),De(Wt),Lt(Wt,a)):De(En),Lt(En,d)}var Wn=Math.clz32?Math.clz32:Dy,Ly=Math.log,Uy=Math.LN2;function Dy(a){return a>>>=0,a===0?32:31-(Ly(a)/Uy|0)|0}var Ml=64,El=4194304;function qa(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return a}}function wl(a,l){var d=a.pendingLanes;if(d===0)return 0;var v=0,S=a.suspendedLanes,T=a.pingedLanes,O=d&268435455;if(O!==0){var G=O&~S;G!==0?v=qa(G):(T&=O,T!==0&&(v=qa(T)))}else O=d&~S,O!==0?v=qa(O):T!==0&&(v=qa(T));if(v===0)return 0;if(l!==0&&l!==v&&!(l&S)&&(S=v&-v,T=l&-l,S>=T||S===16&&(T&4194240)!==0))return l;if(v&4&&(v|=d&16),l=a.entangledLanes,l!==0)for(a=a.entanglements,l&=v;0<l;)d=31-Wn(l),S=1<<d,v|=a[d],l&=~S;return v}function Ny(a,l){switch(a){case 1:case 2:case 4:return l+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return l+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Fy(a,l){for(var d=a.suspendedLanes,v=a.pingedLanes,S=a.expirationTimes,T=a.pendingLanes;0<T;){var O=31-Wn(T),G=1<<O,ae=S[O];ae===-1?(!(G&d)||G&v)&&(S[O]=Ny(G,l)):ae<=l&&(a.expiredLanes|=G),T&=~G}}function eh(a){return a=a.pendingLanes&-1073741825,a!==0?a:a&1073741824?1073741824:0}function th(a){for(var l=[],d=0;31>d;d++)l.push(a);return l}function Ya(a,l,d){a.pendingLanes|=l,l!==536870912&&(a.suspendedLanes=0,a.pingedLanes=0),a=a.eventTimes,l=31-Wn(l),a[l]=d}function Oy(a,l){var d=a.pendingLanes&~l;a.pendingLanes=l,a.suspendedLanes=0,a.pingedLanes=0,a.expiredLanes&=l,a.mutableReadLanes&=l,a.entangledLanes&=l,l=a.entanglements;var v=a.eventTimes;for(a=a.expirationTimes;0<d;){var S=31-Wn(d),T=1<<S;l[S]=0,v[S]=-1,a[S]=-1,d&=~T}}function nh(a,l){var d=a.entangledLanes|=l;for(a=a.entanglements;d;){var v=31-Wn(d),S=1<<v;S&l|a[v]&l&&(a[v]|=l),d&=~S}}var wt=0;function jp(a){return a&=-a,1<a?4<a?a&268435455?16:536870912:4:1}var ih=r.unstable_scheduleCallback,Jp=r.unstable_cancelCallback,By=r.unstable_shouldYield,zy=r.unstable_requestPaint,xn=r.unstable_now,rh=r.unstable_ImmediatePriority,ky=r.unstable_UserBlockingPriority,sh=r.unstable_NormalPriority,Hy=r.unstable_IdlePriority,Tl=null,Bi=null;function Vy(a){if(Bi&&typeof Bi.onCommitFiberRoot=="function")try{Bi.onCommitFiberRoot(Tl,a,void 0,(a.current.flags&128)===128)}catch{}}function Gy(a,l){return a===l&&(a!==0||1/a===1/l)||a!==a&&l!==l}var zi=typeof Object.is=="function"?Object.is:Gy,$i=null,Al=!1,ah=!1;function Kp(a){$i===null?$i=[a]:$i.push(a)}function Wy(a){Al=!0,Kp(a)}function ki(){if(!ah&&$i!==null){ah=!0;var a=0,l=wt;try{var d=$i;for(wt=1;a<d.length;a++){var v=d[a];do v=v(!0);while(v!==null)}$i=null,Al=!1}catch(S){throw $i!==null&&($i=$i.slice(a+1)),ih(rh,ki),S}finally{wt=l,ah=!1}}return null}var Xy=c.ReactCurrentBatchConfig;function bl(a,l){if(zi(a,l))return!0;if(typeof a!="object"||a===null||typeof l!="object"||l===null)return!1;var d=Object.keys(a),v=Object.keys(l);if(d.length!==v.length)return!1;for(v=0;v<d.length;v++){var S=d[v];if(!Dn.call(l,S)||!zi(a[S],l[S]))return!1}return!0}function qy(a){switch(a.tag){case 5:return et(a.type);case 16:return et("Lazy");case 13:return et("Suspense");case 19:return et("SuspenseList");case 0:case 2:case 15:return a=Gt(a.type,!1),a;case 11:return a=Gt(a.type.render,!1),a;case 1:return a=Gt(a.type,!0),a;default:return""}}function wi(a,l){if(a&&a.defaultProps){l=s({},l),a=a.defaultProps;for(var d in a)l[d]===void 0&&(l[d]=a[d]);return l}return l}var Cl=Et(null),Rl=null,Os=null,oh=null;function lh(){oh=Os=Rl=null}function Qp(a,l,d){Fe?(Lt(Cl,l._currentValue),l._currentValue=d):(Lt(Cl,l._currentValue2),l._currentValue2=d)}function ch(a){var l=Cl.current;De(Cl),Fe?a._currentValue=l:a._currentValue2=l}function uh(a,l,d){for(;a!==null;){var v=a.alternate;if((a.childLanes&l)!==l?(a.childLanes|=l,v!==null&&(v.childLanes|=l)):v!==null&&(v.childLanes&l)!==l&&(v.childLanes|=l),a===d)break;a=a.return}}function Bs(a,l){Rl=a,oh=Os=null,a=a.dependencies,a!==null&&a.firstContext!==null&&(a.lanes&l&&(ai=!0),a.firstContext=null)}function di(a){var l=Fe?a._currentValue:a._currentValue2;if(oh!==a)if(a={context:a,memoizedValue:l,next:null},Os===null){if(Rl===null)throw Error(o(308));Os=a,Rl.dependencies={lanes:0,firstContext:a}}else Os=Os.next=a;return l}var Hi=null,vr=!1;function hh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function $p(a,l){a=a.updateQueue,l.updateQueue===a&&(l.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function er(a,l){return{eventTime:a,lane:l,tag:0,payload:null,callback:null,next:null}}function _r(a,l){var d=a.updateQueue;d!==null&&(d=d.shared,on!==null&&a.mode&1&&!(dt&2)?(a=d.interleaved,a===null?(l.next=l,Hi===null?Hi=[d]:Hi.push(d)):(l.next=a.next,a.next=l),d.interleaved=l):(a=d.pending,a===null?l.next=l:(l.next=a.next,a.next=l),d.pending=l))}function Pl(a,l,d){if(l=l.updateQueue,l!==null&&(l=l.shared,(d&4194240)!==0)){var v=l.lanes;v&=a.pendingLanes,d|=v,l.lanes=d,nh(a,d)}}function em(a,l){var d=a.updateQueue,v=a.alternate;if(v!==null&&(v=v.updateQueue,d===v)){var S=null,T=null;if(d=d.firstBaseUpdate,d!==null){do{var O={eventTime:d.eventTime,lane:d.lane,tag:d.tag,payload:d.payload,callback:d.callback,next:null};T===null?S=T=O:T=T.next=O,d=d.next}while(d!==null);T===null?S=T=l:T=T.next=l}else S=T=l;d={baseState:v.baseState,firstBaseUpdate:S,lastBaseUpdate:T,shared:v.shared,effects:v.effects},a.updateQueue=d;return}a=d.lastBaseUpdate,a===null?d.firstBaseUpdate=l:a.next=l,d.lastBaseUpdate=l}function Il(a,l,d,v){var S=a.updateQueue;vr=!1;var T=S.firstBaseUpdate,O=S.lastBaseUpdate,G=S.shared.pending;if(G!==null){S.shared.pending=null;var ae=G,Me=ae.next;ae.next=null,O===null?T=Me:O.next=Me,O=ae;var Ne=a.alternate;Ne!==null&&(Ne=Ne.updateQueue,G=Ne.lastBaseUpdate,G!==O&&(G===null?Ne.firstBaseUpdate=Me:G.next=Me,Ne.lastBaseUpdate=ae))}if(T!==null){var at=S.baseState;O=0,Ne=Me=ae=null,G=T;do{var Ke=G.lane,Ot=G.eventTime;if((v&Ke)===Ke){Ne!==null&&(Ne=Ne.next={eventTime:Ot,lane:0,tag:G.tag,payload:G.payload,callback:G.callback,next:null});e:{var We=a,Rn=G;switch(Ke=l,Ot=d,Rn.tag){case 1:if(We=Rn.payload,typeof We=="function"){at=We.call(Ot,at,Ke);break e}at=We;break e;case 3:We.flags=We.flags&-65537|128;case 0:if(We=Rn.payload,Ke=typeof We=="function"?We.call(Ot,at,Ke):We,Ke==null)break e;at=s({},at,Ke);break e;case 2:vr=!0}}G.callback!==null&&G.lane!==0&&(a.flags|=64,Ke=S.effects,Ke===null?S.effects=[G]:Ke.push(G))}else Ot={eventTime:Ot,lane:Ke,tag:G.tag,payload:G.payload,callback:G.callback,next:null},Ne===null?(Me=Ne=Ot,ae=at):Ne=Ne.next=Ot,O|=Ke;if(G=G.next,G===null){if(G=S.shared.pending,G===null)break;Ke=G,G=Ke.next,Ke.next=null,S.lastBaseUpdate=Ke,S.shared.pending=null}}while(!0);if(Ne===null&&(ae=at),S.baseState=ae,S.firstBaseUpdate=Me,S.lastBaseUpdate=Ne,l=S.shared.interleaved,l!==null){S=l;do O|=S.lane,S=S.next;while(S!==l)}else T===null&&(S.shared.lanes=0);Ys|=O,a.lanes=O,a.memoizedState=at}}function tm(a,l,d){if(a=l.effects,l.effects=null,a!==null)for(l=0;l<a.length;l++){var v=a[l],S=v.callback;if(S!==null){if(v.callback=null,v=d,typeof S!="function")throw Error(o(191,S));S.call(v)}}}var nm=new n.Component().refs;function fh(a,l,d,v){l=a.memoizedState,d=d(v,l),d=d==null?l:s({},l,d),a.memoizedState=d,a.lanes===0&&(a.updateQueue.baseState=d)}var Ll={isMounted:function(a){return(a=a._reactInternals)?C(a)===a:!1},enqueueSetState:function(a,l,d){a=a._reactInternals;var v=On(),S=Sr(a),T=er(v,S);T.payload=l,d!=null&&(T.callback=d),_r(a,T),l=_i(a,S,v),l!==null&&Pl(l,a,S)},enqueueReplaceState:function(a,l,d){a=a._reactInternals;var v=On(),S=Sr(a),T=er(v,S);T.tag=1,T.payload=l,d!=null&&(T.callback=d),_r(a,T),l=_i(a,S,v),l!==null&&Pl(l,a,S)},enqueueForceUpdate:function(a,l){a=a._reactInternals;var d=On(),v=Sr(a),S=er(d,v);S.tag=2,l!=null&&(S.callback=l),_r(a,S),l=_i(a,v,d),l!==null&&Pl(l,a,v)}};function im(a,l,d,v,S,T,O){return a=a.stateNode,typeof a.shouldComponentUpdate=="function"?a.shouldComponentUpdate(v,T,O):l.prototype&&l.prototype.isPureReactComponent?!bl(d,v)||!bl(S,T):!0}function rm(a,l,d){var v=!1,S=_t,T=l.contextType;return typeof T=="object"&&T!==null?T=di(T):(S=Pt(l)?ni:Wt.current,v=l.contextTypes,T=(v=v!=null)?Oi(a,S):_t),l=new l(d,T),a.memoizedState=l.state!==null&&l.state!==void 0?l.state:null,l.updater=Ll,a.stateNode=l,l._reactInternals=a,v&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=S,a.__reactInternalMemoizedMaskedChildContext=T),l}function sm(a,l,d,v){a=l.state,typeof l.componentWillReceiveProps=="function"&&l.componentWillReceiveProps(d,v),typeof l.UNSAFE_componentWillReceiveProps=="function"&&l.UNSAFE_componentWillReceiveProps(d,v),l.state!==a&&Ll.enqueueReplaceState(l,l.state,null)}function dh(a,l,d,v){var S=a.stateNode;S.props=d,S.state=a.memoizedState,S.refs=nm,hh(a);var T=l.contextType;typeof T=="object"&&T!==null?S.context=di(T):(T=Pt(l)?ni:Wt.current,S.context=Oi(a,T)),S.state=a.memoizedState,T=l.getDerivedStateFromProps,typeof T=="function"&&(fh(a,l,T,d),S.state=a.memoizedState),typeof l.getDerivedStateFromProps=="function"||typeof S.getSnapshotBeforeUpdate=="function"||typeof S.UNSAFE_componentWillMount!="function"&&typeof S.componentWillMount!="function"||(l=S.state,typeof S.componentWillMount=="function"&&S.componentWillMount(),typeof S.UNSAFE_componentWillMount=="function"&&S.UNSAFE_componentWillMount(),l!==S.state&&Ll.enqueueReplaceState(S,S.state,null),Il(a,d,S,v),S.state=a.memoizedState),typeof S.componentDidMount=="function"&&(a.flags|=4194308)}var zs=[],ks=0,Ul=null,Dl=0,pi=[],mi=0,Xr=null,tr=1,nr="";function qr(a,l){zs[ks++]=Dl,zs[ks++]=Ul,Ul=a,Dl=l}function am(a,l,d){pi[mi++]=tr,pi[mi++]=nr,pi[mi++]=Xr,Xr=a;var v=tr;a=nr;var S=32-Wn(v)-1;v&=~(1<<S),d+=1;var T=32-Wn(l)+S;if(30<T){var O=S-S%5;T=(v&(1<<O)-1).toString(32),v>>=O,S-=O,tr=1<<32-Wn(l)+S|d<<S|v,nr=T+a}else tr=1<<T|d<<S|v,nr=a}function ph(a){a.return!==null&&(qr(a,1),am(a,1,0))}function mh(a){for(;a===Ul;)Ul=zs[--ks],zs[ks]=null,Dl=zs[--ks],zs[ks]=null;for(;a===Xr;)Xr=pi[--mi],pi[mi]=null,nr=pi[--mi],pi[mi]=null,tr=pi[--mi],pi[mi]=null}var ri=null,si=null,Xt=!1,Za=!1,Ti=null;function om(a,l){var d=xi(5,null,null,0);d.elementType="DELETED",d.stateNode=l,d.return=a,l=a.deletions,l===null?(a.deletions=[d],a.flags|=16):l.push(d)}function lm(a,l){switch(a.tag){case 5:return l=Qi(l,a.type,a.pendingProps),l!==null?(a.stateNode=l,ri=a,si=xl(l),!0):!1;case 6:return l=ml(l,a.pendingProps),l!==null?(a.stateNode=l,ri=a,si=null,!0):!1;case 13:if(l=gl(l),l!==null){var d=Xr!==null?{id:tr,overflow:nr}:null;return a.memoizedState={dehydrated:l,treeContext:d,retryLane:1073741824},d=xi(18,null,null,0),d.stateNode=l,d.return=a,a.child=d,ri=a,si=null,!0}return!1;default:return!1}}function gh(a){return(a.mode&1)!==0&&(a.flags&128)===0}function vh(a){if(Xt){var l=si;if(l){var d=l;if(!lm(a,l)){if(gh(a))throw Error(o(418));l=Fi(d);var v=ri;l&&lm(a,l)?om(v,d):(a.flags=a.flags&-4097|2,Xt=!1,ri=a)}}else{if(gh(a))throw Error(o(418));a.flags=a.flags&-4097|2,Xt=!1,ri=a}}}function cm(a){for(a=a.return;a!==null&&a.tag!==5&&a.tag!==3&&a.tag!==13;)a=a.return;ri=a}function ja(a){if(!re||a!==ri)return!1;if(!Xt)return cm(a),Xt=!0,!1;if(a.tag!==3&&(a.tag!==5||Ge(a.type)&&!me(a.type,a.memoizedProps))){var l=si;if(l){if(gh(a)){for(a=si;a;)a=Fi(a);throw Error(o(418))}for(;l;)om(a,l),l=Fi(l)}}if(cm(a),a.tag===13){if(!re)throw Error(o(316));if(a=a.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(o(317));si=q(a)}else si=ri?Fi(a.stateNode):null;return!0}function Hs(){re&&(si=ri=null,Za=Xt=!1)}function _h(a){Ti===null?Ti=[a]:Ti.push(a)}function Ja(a,l,d){if(a=d.ref,a!==null&&typeof a!="function"&&typeof a!="object"){if(d._owner){if(d=d._owner,d){if(d.tag!==1)throw Error(o(309));var v=d.stateNode}if(!v)throw Error(o(147,a));var S=v,T=""+a;return l!==null&&l.ref!==null&&typeof l.ref=="function"&&l.ref._stringRef===T?l.ref:(l=function(O){var G=S.refs;G===nm&&(G=S.refs={}),O===null?delete G[T]:G[T]=O},l._stringRef=T,l)}if(typeof a!="string")throw Error(o(284));if(!d._owner)throw Error(o(290,a))}return a}function Nl(a,l){throw a=Object.prototype.toString.call(l),Error(o(31,a==="[object Object]"?"object with keys {"+Object.keys(l).join(", ")+"}":a))}function um(a){var l=a._init;return l(a._payload)}function hm(a){function l(J,X){if(a){var ie=J.deletions;ie===null?(J.deletions=[X],J.flags|=16):ie.push(X)}}function d(J,X){if(!a)return null;for(;X!==null;)l(J,X),X=X.sibling;return null}function v(J,X){for(J=new Map;X!==null;)X.key!==null?J.set(X.key,X):J.set(X.index,X),X=X.sibling;return J}function S(J,X){return J=Er(J,X),J.index=0,J.sibling=null,J}function T(J,X,ie){return J.index=ie,a?(ie=J.alternate,ie!==null?(ie=ie.index,ie<X?(J.flags|=2,X):ie):(J.flags|=2,X)):(J.flags|=1048576,X)}function O(J){return a&&J.alternate===null&&(J.flags|=2),J}function G(J,X,ie,Ie){return X===null||X.tag!==6?(X=tf(ie,J.mode,Ie),X.return=J,X):(X=S(X,ie),X.return=J,X)}function ae(J,X,ie,Ie){var He=ie.type;return He===f?Ne(J,X,ie.props.children,Ie,ie.key):X!==null&&(X.elementType===He||typeof He=="object"&&He!==null&&He.$$typeof===E&&um(He)===X.type)?(Ie=S(X,ie.props),Ie.ref=Ja(J,X,ie),Ie.return=J,Ie):(Ie=fc(ie.type,ie.key,ie.props,null,J.mode,Ie),Ie.ref=Ja(J,X,ie),Ie.return=J,Ie)}function Me(J,X,ie,Ie){return X===null||X.tag!==4||X.stateNode.containerInfo!==ie.containerInfo||X.stateNode.implementation!==ie.implementation?(X=nf(ie,J.mode,Ie),X.return=J,X):(X=S(X,ie.children||[]),X.return=J,X)}function Ne(J,X,ie,Ie,He){return X===null||X.tag!==7?(X=$r(ie,J.mode,Ie,He),X.return=J,X):(X=S(X,ie),X.return=J,X)}function at(J,X,ie){if(typeof X=="string"&&X!==""||typeof X=="number")return X=tf(""+X,J.mode,ie),X.return=J,X;if(typeof X=="object"&&X!==null){switch(X.$$typeof){case u:return ie=fc(X.type,X.key,X.props,null,J.mode,ie),ie.ref=Ja(J,null,X),ie.return=J,ie;case h:return X=nf(X,J.mode,ie),X.return=J,X;case E:var Ie=X._init;return at(J,Ie(X._payload),ie)}if(K(X)||P(X))return X=$r(X,J.mode,ie,null),X.return=J,X;Nl(J,X)}return null}function Ke(J,X,ie,Ie){var He=X!==null?X.key:null;if(typeof ie=="string"&&ie!==""||typeof ie=="number")return He!==null?null:G(J,X,""+ie,Ie);if(typeof ie=="object"&&ie!==null){switch(ie.$$typeof){case u:return ie.key===He?ae(J,X,ie,Ie):null;case h:return ie.key===He?Me(J,X,ie,Ie):null;case E:return He=ie._init,Ke(J,X,He(ie._payload),Ie)}if(K(ie)||P(ie))return He!==null?null:Ne(J,X,ie,Ie,null);Nl(J,ie)}return null}function Ot(J,X,ie,Ie,He){if(typeof Ie=="string"&&Ie!==""||typeof Ie=="number")return J=J.get(ie)||null,G(X,J,""+Ie,He);if(typeof Ie=="object"&&Ie!==null){switch(Ie.$$typeof){case u:return J=J.get(Ie.key===null?ie:Ie.key)||null,ae(X,J,Ie,He);case h:return J=J.get(Ie.key===null?ie:Ie.key)||null,Me(X,J,Ie,He);case E:var ft=Ie._init;return Ot(J,X,ie,ft(Ie._payload),He)}if(K(Ie)||P(Ie))return J=J.get(ie)||null,Ne(X,J,Ie,He,null);Nl(X,Ie)}return null}function We(J,X,ie,Ie){for(var He=null,ft=null,ot=X,Tt=X=0,Sn=null;ot!==null&&Tt<ie.length;Tt++){ot.index>Tt?(Sn=ot,ot=null):Sn=ot.sibling;var At=Ke(J,ot,ie[Tt],Ie);if(At===null){ot===null&&(ot=Sn);break}a&&ot&&At.alternate===null&&l(J,ot),X=T(At,X,Tt),ft===null?He=At:ft.sibling=At,ft=At,ot=Sn}if(Tt===ie.length)return d(J,ot),Xt&&qr(J,Tt),He;if(ot===null){for(;Tt<ie.length;Tt++)ot=at(J,ie[Tt],Ie),ot!==null&&(X=T(ot,X,Tt),ft===null?He=ot:ft.sibling=ot,ft=ot);return Xt&&qr(J,Tt),He}for(ot=v(J,ot);Tt<ie.length;Tt++)Sn=Ot(ot,J,Tt,ie[Tt],Ie),Sn!==null&&(a&&Sn.alternate!==null&&ot.delete(Sn.key===null?Tt:Sn.key),X=T(Sn,X,Tt),ft===null?He=Sn:ft.sibling=Sn,ft=Sn);return a&&ot.forEach(function(wr){return l(J,wr)}),Xt&&qr(J,Tt),He}function Rn(J,X,ie,Ie){var He=P(ie);if(typeof He!="function")throw Error(o(150));if(ie=He.call(ie),ie==null)throw Error(o(151));for(var ft=He=null,ot=X,Tt=X=0,Sn=null,At=ie.next();ot!==null&&!At.done;Tt++,At=ie.next()){ot.index>Tt?(Sn=ot,ot=null):Sn=ot.sibling;var wr=Ke(J,ot,At.value,Ie);if(wr===null){ot===null&&(ot=Sn);break}a&&ot&&wr.alternate===null&&l(J,ot),X=T(wr,X,Tt),ft===null?He=wr:ft.sibling=wr,ft=wr,ot=Sn}if(At.done)return d(J,ot),Xt&&qr(J,Tt),He;if(ot===null){for(;!At.done;Tt++,At=ie.next())At=at(J,At.value,Ie),At!==null&&(X=T(At,X,Tt),ft===null?He=At:ft.sibling=At,ft=At);return Xt&&qr(J,Tt),He}for(ot=v(J,ot);!At.done;Tt++,At=ie.next())At=Ot(ot,J,Tt,At.value,Ie),At!==null&&(a&&At.alternate!==null&&ot.delete(At.key===null?Tt:At.key),X=T(At,X,Tt),ft===null?He=At:ft.sibling=At,ft=At);return a&&ot.forEach(function(MS){return l(J,MS)}),Xt&&qr(J,Tt),He}function yi(J,X,ie,Ie){if(typeof ie=="object"&&ie!==null&&ie.type===f&&ie.key===null&&(ie=ie.props.children),typeof ie=="object"&&ie!==null){switch(ie.$$typeof){case u:e:{for(var He=ie.key,ft=X;ft!==null;){if(ft.key===He){if(He=ie.type,He===f){if(ft.tag===7){d(J,ft.sibling),X=S(ft,ie.props.children),X.return=J,J=X;break e}}else if(ft.elementType===He||typeof He=="object"&&He!==null&&He.$$typeof===E&&um(He)===ft.type){d(J,ft.sibling),X=S(ft,ie.props),X.ref=Ja(J,ft,ie),X.return=J,J=X;break e}d(J,ft);break}else l(J,ft);ft=ft.sibling}ie.type===f?(X=$r(ie.props.children,J.mode,Ie,ie.key),X.return=J,J=X):(Ie=fc(ie.type,ie.key,ie.props,null,J.mode,Ie),Ie.ref=Ja(J,X,ie),Ie.return=J,J=Ie)}return O(J);case h:e:{for(ft=ie.key;X!==null;){if(X.key===ft)if(X.tag===4&&X.stateNode.containerInfo===ie.containerInfo&&X.stateNode.implementation===ie.implementation){d(J,X.sibling),X=S(X,ie.children||[]),X.return=J,J=X;break e}else{d(J,X);break}else l(J,X);X=X.sibling}X=nf(ie,J.mode,Ie),X.return=J,J=X}return O(J);case E:return ft=ie._init,yi(J,X,ft(ie._payload),Ie)}if(K(ie))return We(J,X,ie,Ie);if(P(ie))return Rn(J,X,ie,Ie);Nl(J,ie)}return typeof ie=="string"&&ie!==""||typeof ie=="number"?(ie=""+ie,X!==null&&X.tag===6?(d(J,X.sibling),X=S(X,ie),X.return=J,J=X):(d(J,X),X=tf(ie,J.mode,Ie),X.return=J,J=X),O(J)):d(J,X)}return yi}var Vs=hm(!0),fm=hm(!1),Ka={},gi=Et(Ka),Qa=Et(Ka),Gs=Et(Ka);function Vi(a){if(a===Ka)throw Error(o(174));return a}function xh(a,l){Lt(Gs,l),Lt(Qa,a),Lt(gi,Ka),a=ge(l),De(gi),Lt(gi,a)}function Ws(){De(gi),De(Qa),De(Gs)}function dm(a){var l=Vi(Gs.current),d=Vi(gi.current);l=H(d,a.type,l),d!==l&&(Lt(Qa,a),Lt(gi,l))}function yh(a){Qa.current===a&&(De(gi),De(Qa))}var Yt=Et(0);function Fl(a){for(var l=a;l!==null;){if(l.tag===13){var d=l.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||vl(d)||mr(d)))return l}else if(l.tag===19&&l.memoizedProps.revealOrder!==void 0){if(l.flags&128)return l}else if(l.child!==null){l.child.return=l,l=l.child;continue}if(l===a)break;for(;l.sibling===null;){if(l.return===null||l.return===a)return null;l=l.return}l.sibling.return=l.return,l=l.sibling}return null}var Sh=[];function Mh(){for(var a=0;a<Sh.length;a++){var l=Sh[a];Fe?l._workInProgressVersionPrimary=null:l._workInProgressVersionSecondary=null}Sh.length=0}var Ol=c.ReactCurrentDispatcher,vi=c.ReactCurrentBatchConfig,Xs=0,Jt=null,An=null,yn=null,Bl=!1,$a=!1,eo=0,Yy=0;function bn(){throw Error(o(321))}function Eh(a,l){if(l===null)return!1;for(var d=0;d<l.length&&d<a.length;d++)if(!zi(a[d],l[d]))return!1;return!0}function wh(a,l,d,v,S,T){if(Xs=T,Jt=l,l.memoizedState=null,l.updateQueue=null,l.lanes=0,Ol.current=a===null||a.memoizedState===null?Ky:Qy,a=d(v,S),$a){T=0;do{if($a=!1,eo=0,25<=T)throw Error(o(301));T+=1,yn=An=null,l.updateQueue=null,Ol.current=$y,a=d(v,S)}while($a)}if(Ol.current=Gl,l=An!==null&&An.next!==null,Xs=0,yn=An=Jt=null,Bl=!1,l)throw Error(o(300));return a}function Th(){var a=eo!==0;return eo=0,a}function ir(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return yn===null?Jt.memoizedState=yn=a:yn=yn.next=a,yn}function Gi(){if(An===null){var a=Jt.alternate;a=a!==null?a.memoizedState:null}else a=An.next;var l=yn===null?Jt.memoizedState:yn.next;if(l!==null)yn=l,An=a;else{if(a===null)throw Error(o(310));An=a,a={memoizedState:An.memoizedState,baseState:An.baseState,baseQueue:An.baseQueue,queue:An.queue,next:null},yn===null?Jt.memoizedState=yn=a:yn=yn.next=a}return yn}function Yr(a,l){return typeof l=="function"?l(a):l}function zl(a){var l=Gi(),d=l.queue;if(d===null)throw Error(o(311));d.lastRenderedReducer=a;var v=An,S=v.baseQueue,T=d.pending;if(T!==null){if(S!==null){var O=S.next;S.next=T.next,T.next=O}v.baseQueue=S=T,d.pending=null}if(S!==null){T=S.next,v=v.baseState;var G=O=null,ae=null,Me=T;do{var Ne=Me.lane;if((Xs&Ne)===Ne)ae!==null&&(ae=ae.next={lane:0,action:Me.action,hasEagerState:Me.hasEagerState,eagerState:Me.eagerState,next:null}),v=Me.hasEagerState?Me.eagerState:a(v,Me.action);else{var at={lane:Ne,action:Me.action,hasEagerState:Me.hasEagerState,eagerState:Me.eagerState,next:null};ae===null?(G=ae=at,O=v):ae=ae.next=at,Jt.lanes|=Ne,Ys|=Ne}Me=Me.next}while(Me!==null&&Me!==T);ae===null?O=v:ae.next=G,zi(v,l.memoizedState)||(ai=!0),l.memoizedState=v,l.baseState=O,l.baseQueue=ae,d.lastRenderedState=v}if(a=d.interleaved,a!==null){S=a;do T=S.lane,Jt.lanes|=T,Ys|=T,S=S.next;while(S!==a)}else S===null&&(d.lanes=0);return[l.memoizedState,d.dispatch]}function kl(a){var l=Gi(),d=l.queue;if(d===null)throw Error(o(311));d.lastRenderedReducer=a;var v=d.dispatch,S=d.pending,T=l.memoizedState;if(S!==null){d.pending=null;var O=S=S.next;do T=a(T,O.action),O=O.next;while(O!==S);zi(T,l.memoizedState)||(ai=!0),l.memoizedState=T,l.baseQueue===null&&(l.baseState=T),d.lastRenderedState=T}return[T,v]}function pm(){}function mm(a,l){var d=Jt,v=Gi(),S=l(),T=!zi(v.memoizedState,S);if(T&&(v.memoizedState=S,ai=!0),v=v.queue,no(_m.bind(null,d,v,a),[a]),v.getSnapshot!==l||T||yn!==null&&yn.memoizedState.tag&1){if(d.flags|=2048,to(9,vm.bind(null,d,v,S,l),void 0,null),on===null)throw Error(o(349));Xs&30||gm(d,l,S)}return S}function gm(a,l,d){a.flags|=16384,a={getSnapshot:l,value:d},l=Jt.updateQueue,l===null?(l={lastEffect:null,stores:null},Jt.updateQueue=l,l.stores=[a]):(d=l.stores,d===null?l.stores=[a]:d.push(a))}function vm(a,l,d,v){l.value=d,l.getSnapshot=v,xm(l)&&_i(a,1,-1)}function _m(a,l,d){return d(function(){xm(l)&&_i(a,1,-1)})}function xm(a){var l=a.getSnapshot;a=a.value;try{var d=l();return!zi(a,d)}catch{return!0}}function Ah(a){var l=ir();return typeof a=="function"&&(a=a()),l.memoizedState=l.baseState=a,a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Yr,lastRenderedState:a},l.queue=a,a=a.dispatch=Jy.bind(null,Jt,a),[l.memoizedState,a]}function to(a,l,d,v){return a={tag:a,create:l,destroy:d,deps:v,next:null},l=Jt.updateQueue,l===null?(l={lastEffect:null,stores:null},Jt.updateQueue=l,l.lastEffect=a.next=a):(d=l.lastEffect,d===null?l.lastEffect=a.next=a:(v=d.next,d.next=a,a.next=v,l.lastEffect=a)),a}function ym(){return Gi().memoizedState}function Hl(a,l,d,v){var S=ir();Jt.flags|=a,S.memoizedState=to(1|l,d,void 0,v===void 0?null:v)}function Vl(a,l,d,v){var S=Gi();v=v===void 0?null:v;var T=void 0;if(An!==null){var O=An.memoizedState;if(T=O.destroy,v!==null&&Eh(v,O.deps)){S.memoizedState=to(l,d,T,v);return}}Jt.flags|=a,S.memoizedState=to(1|l,d,T,v)}function bh(a,l){return Hl(8390656,8,a,l)}function no(a,l){return Vl(2048,8,a,l)}function Sm(a,l){return Vl(4,2,a,l)}function Mm(a,l){return Vl(4,4,a,l)}function Em(a,l){if(typeof l=="function")return a=a(),l(a),function(){l(null)};if(l!=null)return a=a(),l.current=a,function(){l.current=null}}function wm(a,l,d){return d=d!=null?d.concat([a]):null,Vl(4,4,Em.bind(null,l,a),d)}function Ch(){}function Tm(a,l){var d=Gi();l=l===void 0?null:l;var v=d.memoizedState;return v!==null&&l!==null&&Eh(l,v[1])?v[0]:(d.memoizedState=[a,l],a)}function Am(a,l){var d=Gi();l=l===void 0?null:l;var v=d.memoizedState;return v!==null&&l!==null&&Eh(l,v[1])?v[0]:(a=a(),d.memoizedState=[a,l],a)}function Zy(a,l){var d=wt;wt=d!==0&&4>d?d:4,a(!0);var v=vi.transition;vi.transition={};try{a(!1),l()}finally{wt=d,vi.transition=v}}function bm(){return Gi().memoizedState}function jy(a,l,d){var v=Sr(a);d={lane:v,action:d,hasEagerState:!1,eagerState:null,next:null},Cm(a)?Rm(l,d):(Pm(a,l,d),d=On(),a=_i(a,v,d),a!==null&&Im(a,l,v))}function Jy(a,l,d){var v=Sr(a),S={lane:v,action:d,hasEagerState:!1,eagerState:null,next:null};if(Cm(a))Rm(l,S);else{Pm(a,l,S);var T=a.alternate;if(a.lanes===0&&(T===null||T.lanes===0)&&(T=l.lastRenderedReducer,T!==null))try{var O=l.lastRenderedState,G=T(O,d);if(S.hasEagerState=!0,S.eagerState=G,zi(G,O))return}catch{}finally{}d=On(),a=_i(a,v,d),a!==null&&Im(a,l,v)}}function Cm(a){var l=a.alternate;return a===Jt||l!==null&&l===Jt}function Rm(a,l){$a=Bl=!0;var d=a.pending;d===null?l.next=l:(l.next=d.next,d.next=l),a.pending=l}function Pm(a,l,d){on!==null&&a.mode&1&&!(dt&2)?(a=l.interleaved,a===null?(d.next=d,Hi===null?Hi=[l]:Hi.push(l)):(d.next=a.next,a.next=d),l.interleaved=d):(a=l.pending,a===null?d.next=d:(d.next=a.next,a.next=d),l.pending=d)}function Im(a,l,d){if(d&4194240){var v=l.lanes;v&=a.pendingLanes,d|=v,l.lanes=d,nh(a,d)}}var Gl={readContext:di,useCallback:bn,useContext:bn,useEffect:bn,useImperativeHandle:bn,useInsertionEffect:bn,useLayoutEffect:bn,useMemo:bn,useReducer:bn,useRef:bn,useState:bn,useDebugValue:bn,useDeferredValue:bn,useTransition:bn,useMutableSource:bn,useSyncExternalStore:bn,useId:bn,unstable_isNewReconciler:!1},Ky={readContext:di,useCallback:function(a,l){return ir().memoizedState=[a,l===void 0?null:l],a},useContext:di,useEffect:bh,useImperativeHandle:function(a,l,d){return d=d!=null?d.concat([a]):null,Hl(4194308,4,Em.bind(null,l,a),d)},useLayoutEffect:function(a,l){return Hl(4194308,4,a,l)},useInsertionEffect:function(a,l){return Hl(4,2,a,l)},useMemo:function(a,l){var d=ir();return l=l===void 0?null:l,a=a(),d.memoizedState=[a,l],a},useReducer:function(a,l,d){var v=ir();return l=d!==void 0?d(l):l,v.memoizedState=v.baseState=l,a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:l},v.queue=a,a=a.dispatch=jy.bind(null,Jt,a),[v.memoizedState,a]},useRef:function(a){var l=ir();return a={current:a},l.memoizedState=a},useState:Ah,useDebugValue:Ch,useDeferredValue:function(a){var l=Ah(a),d=l[0],v=l[1];return bh(function(){var S=vi.transition;vi.transition={};try{v(a)}finally{vi.transition=S}},[a]),d},useTransition:function(){var a=Ah(!1),l=a[0];return a=Zy.bind(null,a[1]),ir().memoizedState=a,[l,a]},useMutableSource:function(){},useSyncExternalStore:function(a,l,d){var v=Jt,S=ir();if(Xt){if(d===void 0)throw Error(o(407));d=d()}else{if(d=l(),on===null)throw Error(o(349));Xs&30||gm(v,l,d)}S.memoizedState=d;var T={value:d,getSnapshot:l};return S.queue=T,bh(_m.bind(null,v,T,a),[a]),v.flags|=2048,to(9,vm.bind(null,v,T,d,l),void 0,null),d},useId:function(){var a=ir(),l=on.identifierPrefix;if(Xt){var d=nr,v=tr;d=(v&~(1<<32-Wn(v)-1)).toString(32)+d,l=":"+l+"R"+d,d=eo++,0<d&&(l+="H"+d.toString(32)),l+=":"}else d=Yy++,l=":"+l+"r"+d.toString(32)+":";return a.memoizedState=l},unstable_isNewReconciler:!1},Qy={readContext:di,useCallback:Tm,useContext:di,useEffect:no,useImperativeHandle:wm,useInsertionEffect:Sm,useLayoutEffect:Mm,useMemo:Am,useReducer:zl,useRef:ym,useState:function(){return zl(Yr)},useDebugValue:Ch,useDeferredValue:function(a){var l=zl(Yr),d=l[0],v=l[1];return no(function(){var S=vi.transition;vi.transition={};try{v(a)}finally{vi.transition=S}},[a]),d},useTransition:function(){var a=zl(Yr)[0],l=Gi().memoizedState;return[a,l]},useMutableSource:pm,useSyncExternalStore:mm,useId:bm,unstable_isNewReconciler:!1},$y={readContext:di,useCallback:Tm,useContext:di,useEffect:no,useImperativeHandle:wm,useInsertionEffect:Sm,useLayoutEffect:Mm,useMemo:Am,useReducer:kl,useRef:ym,useState:function(){return kl(Yr)},useDebugValue:Ch,useDeferredValue:function(a){var l=kl(Yr),d=l[0],v=l[1];return no(function(){var S=vi.transition;vi.transition={};try{v(a)}finally{vi.transition=S}},[a]),d},useTransition:function(){var a=kl(Yr)[0],l=Gi().memoizedState;return[a,l]},useMutableSource:pm,useSyncExternalStore:mm,useId:bm,unstable_isNewReconciler:!1};function Rh(a,l){try{var d="",v=l;do d+=qy(v),v=v.return;while(v);var S=d}catch(T){S=`
Error generating stack: `+T.message+`
`+T.stack}return{value:a,source:l,stack:S}}function Ph(a,l){try{console.error(l.value)}catch(d){setTimeout(function(){throw d})}}var eS=typeof WeakMap=="function"?WeakMap:Map;function Lm(a,l,d){d=er(-1,d),d.tag=3,d.payload={element:null};var v=l.value;return d.callback=function(){sc||(sc=!0,Zh=v),Ph(a,l)},d}function Um(a,l,d){d=er(-1,d),d.tag=3;var v=a.type.getDerivedStateFromError;if(typeof v=="function"){var S=l.value;d.payload=function(){return v(S)},d.callback=function(){Ph(a,l)}}var T=a.stateNode;return T!==null&&typeof T.componentDidCatch=="function"&&(d.callback=function(){Ph(a,l),typeof v!="function"&&(xr===null?xr=new Set([this]):xr.add(this));var O=l.stack;this.componentDidCatch(l.value,{componentStack:O!==null?O:""})}),d}function Dm(a,l,d){var v=a.pingCache;if(v===null){v=a.pingCache=new eS;var S=new Set;v.set(l,S)}else S=v.get(l),S===void 0&&(S=new Set,v.set(l,S));S.has(d)||(S.add(d),a=pS.bind(null,a,l,d),l.then(a,a))}function Nm(a){do{var l;if((l=a.tag===13)&&(l=a.memoizedState,l=l!==null?l.dehydrated!==null:!0),l)return a;a=a.return}while(a!==null);return null}function Fm(a,l,d,v,S){return a.mode&1?(a.flags|=65536,a.lanes=S,a):(a===l?a.flags|=65536:(a.flags|=128,d.flags|=131072,d.flags&=-52805,d.tag===1&&(d.alternate===null?d.tag=17:(l=er(-1,1),l.tag=2,_r(d,l))),d.lanes|=1),a)}function Wi(a){a.flags|=4}function Om(a,l){if(a!==null&&a.child===l.child)return!0;if(l.flags&16)return!1;for(a=l.child;a!==null;){if(a.flags&12854||a.subtreeFlags&12854)return!1;a=a.sibling}return!0}var io,ro,Wl,Xl;if(V)io=function(a,l){for(var d=l.child;d!==null;){if(d.tag===5||d.tag===6)we(a,d.stateNode);else if(d.tag!==4&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===l)break;for(;d.sibling===null;){if(d.return===null||d.return===l)return;d=d.return}d.sibling.return=d.return,d=d.sibling}},ro=function(){},Wl=function(a,l,d,v,S){if(a=a.memoizedProps,a!==v){var T=l.stateNode,O=Vi(gi.current);d=te(T,d,a,v,S,O),(l.updateQueue=d)&&Wi(l)}},Xl=function(a,l,d,v){d!==v&&Wi(l)};else if(ce){io=function(a,l,d,v){for(var S=l.child;S!==null;){if(S.tag===5){var T=S.stateNode;d&&v&&(T=ei(T,S.type,S.memoizedProps,S)),we(a,T)}else if(S.tag===6)T=S.stateNode,d&&v&&(T=ti(T,S.memoizedProps,S)),we(a,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),io(a,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===l)break;for(;S.sibling===null;){if(S.return===null||S.return===l)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};var Bm=function(a,l,d,v){for(var S=l.child;S!==null;){if(S.tag===5){var T=S.stateNode;d&&v&&(T=ei(T,S.type,S.memoizedProps,S)),kt(a,T)}else if(S.tag===6)T=S.stateNode,d&&v&&(T=ti(T,S.memoizedProps,S)),kt(a,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),Bm(a,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===l)break;for(;S.sibling===null;){if(S.return===null||S.return===l)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};ro=function(a,l){var d=l.stateNode;if(!Om(a,l)){a=d.containerInfo;var v=Ft(a);Bm(v,l,!1,!1),d.pendingChildren=v,Wi(l),_n(a,v)}},Wl=function(a,l,d,v,S){var T=a.stateNode,O=a.memoizedProps;if((a=Om(a,l))&&O===v)l.stateNode=T;else{var G=l.stateNode,ae=Vi(gi.current),Me=null;O!==v&&(Me=te(G,d,O,v,S,ae)),a&&Me===null?l.stateNode=T:(T=Dt(T,Me,d,O,v,l,a,G),Le(T,d,v,S,ae)&&Wi(l),l.stateNode=T,a?Wi(l):io(T,l,!1,!1))}},Xl=function(a,l,d,v){d!==v?(a=Vi(Gs.current),d=Vi(gi.current),l.stateNode=Ae(v,a,d,l),Wi(l)):l.stateNode=a.stateNode}}else ro=function(){},Wl=function(){},Xl=function(){};function so(a,l){if(!Xt)switch(a.tailMode){case"hidden":l=a.tail;for(var d=null;l!==null;)l.alternate!==null&&(d=l),l=l.sibling;d===null?a.tail=null:d.sibling=null;break;case"collapsed":d=a.tail;for(var v=null;d!==null;)d.alternate!==null&&(v=d),d=d.sibling;v===null?l||a.tail===null?a.tail=null:a.tail.sibling=null:v.sibling=null}}function Cn(a){var l=a.alternate!==null&&a.alternate.child===a.child,d=0,v=0;if(l)for(var S=a.child;S!==null;)d|=S.lanes|S.childLanes,v|=S.subtreeFlags&14680064,v|=S.flags&14680064,S.return=a,S=S.sibling;else for(S=a.child;S!==null;)d|=S.lanes|S.childLanes,v|=S.subtreeFlags,v|=S.flags,S.return=a,S=S.sibling;return a.subtreeFlags|=v,a.childLanes=d,l}function tS(a,l,d){var v=l.pendingProps;switch(mh(l),l.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Cn(l),null;case 1:return Pt(l.type)&&ii(),Cn(l),null;case 3:return v=l.stateNode,Ws(),De(En),De(Wt),Mh(),v.pendingContext&&(v.context=v.pendingContext,v.pendingContext=null),(a===null||a.child===null)&&(ja(l)?Wi(l):a===null||a.memoizedState.isDehydrated&&!(l.flags&256)||(l.flags|=1024,Ti!==null&&(Kh(Ti),Ti=null))),ro(a,l),Cn(l),null;case 5:yh(l),d=Vi(Gs.current);var S=l.type;if(a!==null&&l.stateNode!=null)Wl(a,l,S,v,d),a.ref!==l.ref&&(l.flags|=512,l.flags|=2097152);else{if(!v){if(l.stateNode===null)throw Error(o(166));return Cn(l),null}if(a=Vi(gi.current),ja(l)){if(!re)throw Error(o(175));a=Qu(l.stateNode,l.type,l.memoizedProps,d,a,l,!Za),l.updateQueue=a,a!==null&&Wi(l)}else{var T=fe(S,v,d,a,l);io(T,l,!1,!1),l.stateNode=T,Le(T,S,v,d,a)&&Wi(l)}l.ref!==null&&(l.flags|=512,l.flags|=2097152)}return Cn(l),null;case 6:if(a&&l.stateNode!=null)Xl(a,l,a.memoizedProps,v);else{if(typeof v!="string"&&l.stateNode===null)throw Error(o(166));if(a=Vi(Gs.current),d=Vi(gi.current),ja(l)){if(!re)throw Error(o(176));if(a=l.stateNode,v=l.memoizedProps,(d=$u(a,v,l,!Za))&&(S=ri,S!==null))switch(T=(S.mode&1)!==0,S.tag){case 3:Qe(S.stateNode.containerInfo,a,v,T);break;case 5:nt(S.type,S.memoizedProps,S.stateNode,a,v,T)}d&&Wi(l)}else l.stateNode=Ae(v,a,d,l)}return Cn(l),null;case 13:if(De(Yt),v=l.memoizedState,Xt&&si!==null&&l.mode&1&&!(l.flags&128)){for(a=si;a;)a=Fi(a);return Hs(),l.flags|=98560,l}if(v!==null&&v.dehydrated!==null){if(v=ja(l),a===null){if(!v)throw Error(o(318));if(!re)throw Error(o(344));if(a=l.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(o(317));L(a,l)}else Hs(),!(l.flags&128)&&(l.memoizedState=null),l.flags|=4;return Cn(l),null}return Ti!==null&&(Kh(Ti),Ti=null),l.flags&128?(l.lanes=d,l):(v=v!==null,d=!1,a===null?ja(l):d=a.memoizedState!==null,v&&!d&&(l.child.flags|=8192,l.mode&1&&(a===null||Yt.current&1?hn===0&&(hn=3):$h())),l.updateQueue!==null&&(l.flags|=4),Cn(l),null);case 4:return Ws(),ro(a,l),a===null&&ve(l.stateNode.containerInfo),Cn(l),null;case 10:return ch(l.type._context),Cn(l),null;case 17:return Pt(l.type)&&ii(),Cn(l),null;case 19:if(De(Yt),S=l.memoizedState,S===null)return Cn(l),null;if(v=(l.flags&128)!==0,T=S.rendering,T===null)if(v)so(S,!1);else{if(hn!==0||a!==null&&a.flags&128)for(a=l.child;a!==null;){if(T=Fl(a),T!==null){for(l.flags|=128,so(S,!1),a=T.updateQueue,a!==null&&(l.updateQueue=a,l.flags|=4),l.subtreeFlags=0,a=d,v=l.child;v!==null;)d=v,S=a,d.flags&=14680066,T=d.alternate,T===null?(d.childLanes=0,d.lanes=S,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=T.childLanes,d.lanes=T.lanes,d.child=T.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=T.memoizedProps,d.memoizedState=T.memoizedState,d.updateQueue=T.updateQueue,d.type=T.type,S=T.dependencies,d.dependencies=S===null?null:{lanes:S.lanes,firstContext:S.firstContext}),v=v.sibling;return Lt(Yt,Yt.current&1|2),l.child}a=a.sibling}S.tail!==null&&xn()>Yh&&(l.flags|=128,v=!0,so(S,!1),l.lanes=4194304)}else{if(!v)if(a=Fl(T),a!==null){if(l.flags|=128,v=!0,a=a.updateQueue,a!==null&&(l.updateQueue=a,l.flags|=4),so(S,!0),S.tail===null&&S.tailMode==="hidden"&&!T.alternate&&!Xt)return Cn(l),null}else 2*xn()-S.renderingStartTime>Yh&&d!==1073741824&&(l.flags|=128,v=!0,so(S,!1),l.lanes=4194304);S.isBackwards?(T.sibling=l.child,l.child=T):(a=S.last,a!==null?a.sibling=T:l.child=T,S.last=T)}return S.tail!==null?(l=S.tail,S.rendering=l,S.tail=l.sibling,S.renderingStartTime=xn(),l.sibling=null,a=Yt.current,Lt(Yt,v?a&1|2:a&1),l):(Cn(l),null);case 22:case 23:return Qh(),v=l.memoizedState!==null,a!==null&&a.memoizedState!==null!==v&&(l.flags|=8192),v&&l.mode&1?oi&1073741824&&(Cn(l),V&&l.subtreeFlags&6&&(l.flags|=8192)):Cn(l),null;case 24:return null;case 25:return null}throw Error(o(156,l.tag))}var nS=c.ReactCurrentOwner,ai=!1;function Fn(a,l,d,v){l.child=a===null?fm(l,null,d,v):Vs(l,a.child,d,v)}function zm(a,l,d,v,S){d=d.render;var T=l.ref;return Bs(l,S),v=wh(a,l,d,v,T,S),d=Th(),a!==null&&!ai?(l.updateQueue=a.updateQueue,l.flags&=-2053,a.lanes&=~S,rr(a,l,S)):(Xt&&d&&ph(l),l.flags|=1,Fn(a,l,v,S),l.child)}function km(a,l,d,v,S){if(a===null){var T=d.type;return typeof T=="function"&&!ef(T)&&T.defaultProps===void 0&&d.compare===null&&d.defaultProps===void 0?(l.tag=15,l.type=T,Hm(a,l,T,v,S)):(a=fc(d.type,null,v,l,l.mode,S),a.ref=l.ref,a.return=l,l.child=a)}if(T=a.child,!(a.lanes&S)){var O=T.memoizedProps;if(d=d.compare,d=d!==null?d:bl,d(O,v)&&a.ref===l.ref)return rr(a,l,S)}return l.flags|=1,a=Er(T,v),a.ref=l.ref,a.return=l,l.child=a}function Hm(a,l,d,v,S){if(a!==null&&bl(a.memoizedProps,v)&&a.ref===l.ref)if(ai=!1,(a.lanes&S)!==0)a.flags&131072&&(ai=!0);else return l.lanes=a.lanes,rr(a,l,S);return Ih(a,l,d,v,S)}function Vm(a,l,d){var v=l.pendingProps,S=v.children,T=a!==null?a.memoizedState:null;if(v.mode==="hidden")if(!(l.mode&1))l.memoizedState={baseLanes:0,cachePool:null},Lt(qs,oi),oi|=d;else if(d&1073741824)l.memoizedState={baseLanes:0,cachePool:null},v=T!==null?T.baseLanes:d,Lt(qs,oi),oi|=v;else return a=T!==null?T.baseLanes|d:d,l.lanes=l.childLanes=1073741824,l.memoizedState={baseLanes:a,cachePool:null},l.updateQueue=null,Lt(qs,oi),oi|=a,null;else T!==null?(v=T.baseLanes|d,l.memoizedState=null):v=d,Lt(qs,oi),oi|=v;return Fn(a,l,S,d),l.child}function Gm(a,l){var d=l.ref;(a===null&&d!==null||a!==null&&a.ref!==d)&&(l.flags|=512,l.flags|=2097152)}function Ih(a,l,d,v,S){var T=Pt(d)?ni:Wt.current;return T=Oi(l,T),Bs(l,S),d=wh(a,l,d,v,T,S),v=Th(),a!==null&&!ai?(l.updateQueue=a.updateQueue,l.flags&=-2053,a.lanes&=~S,rr(a,l,S)):(Xt&&v&&ph(l),l.flags|=1,Fn(a,l,d,S),l.child)}function Wm(a,l,d,v,S){if(Pt(d)){var T=!0;gr(l)}else T=!1;if(Bs(l,S),l.stateNode===null)a!==null&&(a.alternate=null,l.alternate=null,l.flags|=2),rm(l,d,v),dh(l,d,v,S),v=!0;else if(a===null){var O=l.stateNode,G=l.memoizedProps;O.props=G;var ae=O.context,Me=d.contextType;typeof Me=="object"&&Me!==null?Me=di(Me):(Me=Pt(d)?ni:Wt.current,Me=Oi(l,Me));var Ne=d.getDerivedStateFromProps,at=typeof Ne=="function"||typeof O.getSnapshotBeforeUpdate=="function";at||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(G!==v||ae!==Me)&&sm(l,O,v,Me),vr=!1;var Ke=l.memoizedState;O.state=Ke,Il(l,v,O,S),ae=l.memoizedState,G!==v||Ke!==ae||En.current||vr?(typeof Ne=="function"&&(fh(l,d,Ne,v),ae=l.memoizedState),(G=vr||im(l,d,G,v,Ke,ae,Me))?(at||typeof O.UNSAFE_componentWillMount!="function"&&typeof O.componentWillMount!="function"||(typeof O.componentWillMount=="function"&&O.componentWillMount(),typeof O.UNSAFE_componentWillMount=="function"&&O.UNSAFE_componentWillMount()),typeof O.componentDidMount=="function"&&(l.flags|=4194308)):(typeof O.componentDidMount=="function"&&(l.flags|=4194308),l.memoizedProps=v,l.memoizedState=ae),O.props=v,O.state=ae,O.context=Me,v=G):(typeof O.componentDidMount=="function"&&(l.flags|=4194308),v=!1)}else{O=l.stateNode,$p(a,l),G=l.memoizedProps,Me=l.type===l.elementType?G:wi(l.type,G),O.props=Me,at=l.pendingProps,Ke=O.context,ae=d.contextType,typeof ae=="object"&&ae!==null?ae=di(ae):(ae=Pt(d)?ni:Wt.current,ae=Oi(l,ae));var Ot=d.getDerivedStateFromProps;(Ne=typeof Ot=="function"||typeof O.getSnapshotBeforeUpdate=="function")||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(G!==at||Ke!==ae)&&sm(l,O,v,ae),vr=!1,Ke=l.memoizedState,O.state=Ke,Il(l,v,O,S);var We=l.memoizedState;G!==at||Ke!==We||En.current||vr?(typeof Ot=="function"&&(fh(l,d,Ot,v),We=l.memoizedState),(Me=vr||im(l,d,Me,v,Ke,We,ae)||!1)?(Ne||typeof O.UNSAFE_componentWillUpdate!="function"&&typeof O.componentWillUpdate!="function"||(typeof O.componentWillUpdate=="function"&&O.componentWillUpdate(v,We,ae),typeof O.UNSAFE_componentWillUpdate=="function"&&O.UNSAFE_componentWillUpdate(v,We,ae)),typeof O.componentDidUpdate=="function"&&(l.flags|=4),typeof O.getSnapshotBeforeUpdate=="function"&&(l.flags|=1024)):(typeof O.componentDidUpdate!="function"||G===a.memoizedProps&&Ke===a.memoizedState||(l.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||G===a.memoizedProps&&Ke===a.memoizedState||(l.flags|=1024),l.memoizedProps=v,l.memoizedState=We),O.props=v,O.state=We,O.context=ae,v=Me):(typeof O.componentDidUpdate!="function"||G===a.memoizedProps&&Ke===a.memoizedState||(l.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||G===a.memoizedProps&&Ke===a.memoizedState||(l.flags|=1024),v=!1)}return Lh(a,l,d,v,T,S)}function Lh(a,l,d,v,S,T){Gm(a,l);var O=(l.flags&128)!==0;if(!v&&!O)return S&&Sl(l,d,!1),rr(a,l,T);v=l.stateNode,nS.current=l;var G=O&&typeof d.getDerivedStateFromError!="function"?null:v.render();return l.flags|=1,a!==null&&O?(l.child=Vs(l,a.child,null,T),l.child=Vs(l,null,G,T)):Fn(a,l,G,T),l.memoizedState=v.state,S&&Sl(l,d,!0),l.child}function Xm(a){var l=a.stateNode;l.pendingContext?Fs(a,l.pendingContext,l.pendingContext!==l.context):l.context&&Fs(a,l.context,!1),xh(a,l.containerInfo)}function qm(a,l,d,v,S){return Hs(),_h(S),l.flags|=256,Fn(a,l,d,v),l.child}var ql={dehydrated:null,treeContext:null,retryLane:0};function Yl(a){return{baseLanes:a,cachePool:null}}function Ym(a,l,d){var v=l.pendingProps,S=Yt.current,T=!1,O=(l.flags&128)!==0,G;if((G=O)||(G=a!==null&&a.memoizedState===null?!1:(S&2)!==0),G?(T=!0,l.flags&=-129):(a===null||a.memoizedState!==null)&&(S|=1),Lt(Yt,S&1),a===null)return vh(l),a=l.memoizedState,a!==null&&(a=a.dehydrated,a!==null)?(l.mode&1?mr(a)?l.lanes=8:l.lanes=1073741824:l.lanes=1,null):(S=v.children,a=v.fallback,T?(v=l.mode,T=l.child,S={mode:"hidden",children:S},!(v&1)&&T!==null?(T.childLanes=0,T.pendingProps=S):T=dc(S,v,0,null),a=$r(a,v,d,null),T.return=l,a.return=l,T.sibling=a,l.child=T,l.child.memoizedState=Yl(d),l.memoizedState=ql,a):Uh(l,S));if(S=a.memoizedState,S!==null){if(G=S.dehydrated,G!==null){if(O)return l.flags&256?(l.flags&=-257,Zl(a,l,d,Error(o(422)))):l.memoizedState!==null?(l.child=a.child,l.flags|=128,null):(T=v.fallback,S=l.mode,v=dc({mode:"visible",children:v.children},S,0,null),T=$r(T,S,d,null),T.flags|=2,v.return=l,T.return=l,v.sibling=T,l.child=v,l.mode&1&&Vs(l,a.child,null,d),l.child.memoizedState=Yl(d),l.memoizedState=ql,T);if(!(l.mode&1))l=Zl(a,l,d,null);else if(mr(G))l=Zl(a,l,d,Error(o(419)));else if(v=(d&a.childLanes)!==0,ai||v){if(v=on,v!==null){switch(d&-d){case 4:T=2;break;case 16:T=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:T=32;break;case 536870912:T=268435456;break;default:T=0}v=T&(v.suspendedLanes|d)?0:T,v!==0&&v!==S.retryLane&&(S.retryLane=v,_i(a,v,-1))}$h(),l=Zl(a,l,d,Error(o(421)))}else vl(G)?(l.flags|=128,l.child=a.child,l=mS.bind(null,a),_l(G,l),l=null):(d=S.treeContext,re&&(si=Ku(G),ri=l,Xt=!0,Ti=null,Za=!1,d!==null&&(pi[mi++]=tr,pi[mi++]=nr,pi[mi++]=Xr,tr=d.id,nr=d.overflow,Xr=l)),l=Uh(l,l.pendingProps.children),l.flags|=4096);return l}return T?(v=jm(a,l,v.children,v.fallback,d),T=l.child,S=a.child.memoizedState,T.memoizedState=S===null?Yl(d):{baseLanes:S.baseLanes|d,cachePool:null},T.childLanes=a.childLanes&~d,l.memoizedState=ql,v):(d=Zm(a,l,v.children,d),l.memoizedState=null,d)}return T?(v=jm(a,l,v.children,v.fallback,d),T=l.child,S=a.child.memoizedState,T.memoizedState=S===null?Yl(d):{baseLanes:S.baseLanes|d,cachePool:null},T.childLanes=a.childLanes&~d,l.memoizedState=ql,v):(d=Zm(a,l,v.children,d),l.memoizedState=null,d)}function Uh(a,l){return l=dc({mode:"visible",children:l},a.mode,0,null),l.return=a,a.child=l}function Zm(a,l,d,v){var S=a.child;return a=S.sibling,d=Er(S,{mode:"visible",children:d}),!(l.mode&1)&&(d.lanes=v),d.return=l,d.sibling=null,a!==null&&(v=l.deletions,v===null?(l.deletions=[a],l.flags|=16):v.push(a)),l.child=d}function jm(a,l,d,v,S){var T=l.mode;a=a.child;var O=a.sibling,G={mode:"hidden",children:d};return!(T&1)&&l.child!==a?(d=l.child,d.childLanes=0,d.pendingProps=G,l.deletions=null):(d=Er(a,G),d.subtreeFlags=a.subtreeFlags&14680064),O!==null?v=Er(O,v):(v=$r(v,T,S,null),v.flags|=2),v.return=l,d.return=l,d.sibling=v,l.child=d,v}function Zl(a,l,d,v){return v!==null&&_h(v),Vs(l,a.child,null,d),a=Uh(l,l.pendingProps.children),a.flags|=2,l.memoizedState=null,a}function Jm(a,l,d){a.lanes|=l;var v=a.alternate;v!==null&&(v.lanes|=l),uh(a.return,l,d)}function Dh(a,l,d,v,S){var T=a.memoizedState;T===null?a.memoizedState={isBackwards:l,rendering:null,renderingStartTime:0,last:v,tail:d,tailMode:S}:(T.isBackwards=l,T.rendering=null,T.renderingStartTime=0,T.last=v,T.tail=d,T.tailMode=S)}function Km(a,l,d){var v=l.pendingProps,S=v.revealOrder,T=v.tail;if(Fn(a,l,v.children,d),v=Yt.current,v&2)v=v&1|2,l.flags|=128;else{if(a!==null&&a.flags&128)e:for(a=l.child;a!==null;){if(a.tag===13)a.memoizedState!==null&&Jm(a,d,l);else if(a.tag===19)Jm(a,d,l);else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===l)break e;for(;a.sibling===null;){if(a.return===null||a.return===l)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}v&=1}if(Lt(Yt,v),!(l.mode&1))l.memoizedState=null;else switch(S){case"forwards":for(d=l.child,S=null;d!==null;)a=d.alternate,a!==null&&Fl(a)===null&&(S=d),d=d.sibling;d=S,d===null?(S=l.child,l.child=null):(S=d.sibling,d.sibling=null),Dh(l,!1,S,d,T);break;case"backwards":for(d=null,S=l.child,l.child=null;S!==null;){if(a=S.alternate,a!==null&&Fl(a)===null){l.child=S;break}a=S.sibling,S.sibling=d,d=S,S=a}Dh(l,!0,d,null,T);break;case"together":Dh(l,!1,null,null,void 0);break;default:l.memoizedState=null}return l.child}function rr(a,l,d){if(a!==null&&(l.dependencies=a.dependencies),Ys|=l.lanes,!(d&l.childLanes))return null;if(a!==null&&l.child!==a.child)throw Error(o(153));if(l.child!==null){for(a=l.child,d=Er(a,a.pendingProps),l.child=d,d.return=l;a.sibling!==null;)a=a.sibling,d=d.sibling=Er(a,a.pendingProps),d.return=l;d.sibling=null}return l.child}function iS(a,l,d){switch(l.tag){case 3:Xm(l),Hs();break;case 5:dm(l);break;case 1:Pt(l.type)&&gr(l);break;case 4:xh(l,l.stateNode.containerInfo);break;case 10:Qp(l,l.type._context,l.memoizedProps.value);break;case 13:var v=l.memoizedState;if(v!==null)return v.dehydrated!==null?(Lt(Yt,Yt.current&1),l.flags|=128,null):d&l.child.childLanes?Ym(a,l,d):(Lt(Yt,Yt.current&1),a=rr(a,l,d),a!==null?a.sibling:null);Lt(Yt,Yt.current&1);break;case 19:if(v=(d&l.childLanes)!==0,a.flags&128){if(v)return Km(a,l,d);l.flags|=128}var S=l.memoizedState;if(S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),Lt(Yt,Yt.current),v)break;return null;case 22:case 23:return l.lanes=0,Vm(a,l,d)}return rr(a,l,d)}function rS(a,l){switch(mh(l),l.tag){case 1:return Pt(l.type)&&ii(),a=l.flags,a&65536?(l.flags=a&-65537|128,l):null;case 3:return Ws(),De(En),De(Wt),Mh(),a=l.flags,a&65536&&!(a&128)?(l.flags=a&-65537|128,l):null;case 5:return yh(l),null;case 13:if(De(Yt),a=l.memoizedState,a!==null&&a.dehydrated!==null){if(l.alternate===null)throw Error(o(340));Hs()}return a=l.flags,a&65536?(l.flags=a&-65537|128,l):null;case 19:return De(Yt),null;case 4:return Ws(),null;case 10:return ch(l.type._context),null;case 22:case 23:return Qh(),null;case 24:return null;default:return null}}var jl=!1,Zr=!1,sS=typeof WeakSet=="function"?WeakSet:Set,Ce=null;function Jl(a,l){var d=a.ref;if(d!==null)if(typeof d=="function")try{d(null)}catch(v){Yn(a,l,v)}else d.current=null}function Nh(a,l,d){try{d()}catch(v){Yn(a,l,v)}}var Qm=!1;function aS(a,l){for(Q(a.containerInfo),Ce=l;Ce!==null;)if(a=Ce,l=a.child,(a.subtreeFlags&1028)!==0&&l!==null)l.return=a,Ce=l;else for(;Ce!==null;){a=Ce;try{var d=a.alternate;if(a.flags&1024)switch(a.tag){case 0:case 11:case 15:break;case 1:if(d!==null){var v=d.memoizedProps,S=d.memoizedState,T=a.stateNode,O=T.getSnapshotBeforeUpdate(a.elementType===a.type?v:wi(a.type,v),S);T.__reactInternalSnapshotBeforeUpdate=O}break;case 3:V&&Je(a.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(o(163))}}catch(G){Yn(a,a.return,G)}if(l=a.sibling,l!==null){l.return=a.return,Ce=l;break}Ce=a.return}return d=Qm,Qm=!1,d}function jr(a,l,d){var v=l.updateQueue;if(v=v!==null?v.lastEffect:null,v!==null){var S=v=v.next;do{if((S.tag&a)===a){var T=S.destroy;S.destroy=void 0,T!==void 0&&Nh(l,d,T)}S=S.next}while(S!==v)}}function ao(a,l){if(l=l.updateQueue,l=l!==null?l.lastEffect:null,l!==null){var d=l=l.next;do{if((d.tag&a)===a){var v=d.create;d.destroy=v()}d=d.next}while(d!==l)}}function Fh(a){var l=a.ref;if(l!==null){var d=a.stateNode;switch(a.tag){case 5:a=le(d);break;default:a=d}typeof l=="function"?l(a):l.current=a}}function $m(a,l,d){if(Bi&&typeof Bi.onCommitFiberUnmount=="function")try{Bi.onCommitFiberUnmount(Tl,l)}catch{}switch(l.tag){case 0:case 11:case 14:case 15:if(a=l.updateQueue,a!==null&&(a=a.lastEffect,a!==null)){var v=a=a.next;do{var S=v,T=S.destroy;S=S.tag,T!==void 0&&(S&2||S&4)&&Nh(l,d,T),v=v.next}while(v!==a)}break;case 1:if(Jl(l,d),a=l.stateNode,typeof a.componentWillUnmount=="function")try{a.props=l.memoizedProps,a.state=l.memoizedState,a.componentWillUnmount()}catch(O){Yn(l,d,O)}break;case 5:Jl(l,d);break;case 4:V?sg(a,l,d):ce&&ce&&(l=l.stateNode.containerInfo,d=Ft(l),Nt(l,d))}}function eg(a,l,d){for(var v=l;;)if($m(a,v,d),v.child===null||V&&v.tag===4){if(v===l)break;for(;v.sibling===null;){if(v.return===null||v.return===l)return;v=v.return}v.sibling.return=v.return,v=v.sibling}else v.child.return=v,v=v.child}function tg(a){var l=a.alternate;l!==null&&(a.alternate=null,tg(l)),a.child=null,a.deletions=null,a.sibling=null,a.tag===5&&(l=a.stateNode,l!==null&&U(l)),a.stateNode=null,a.return=null,a.dependencies=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.stateNode=null,a.updateQueue=null}function ng(a){return a.tag===5||a.tag===3||a.tag===4}function ig(a){e:for(;;){for(;a.sibling===null;){if(a.return===null||ng(a.return))return null;a=a.return}for(a.sibling.return=a.return,a=a.sibling;a.tag!==5&&a.tag!==6&&a.tag!==18;){if(a.flags&2||a.child===null||a.tag===4)continue e;a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}function rg(a){if(V){e:{for(var l=a.return;l!==null;){if(ng(l))break e;l=l.return}throw Error(o(160))}var d=l;switch(d.tag){case 5:l=d.stateNode,d.flags&32&&(Ve(l),d.flags&=-33),d=ig(a),Bh(a,d,l);break;case 3:case 4:l=d.stateNode.containerInfo,d=ig(a),Oh(a,d,l);break;default:throw Error(o(161))}}}function Oh(a,l,d){var v=a.tag;if(v===5||v===6)a=a.stateNode,l?Rt(d,a,l):it(d,a);else if(v!==4&&(a=a.child,a!==null))for(Oh(a,l,d),a=a.sibling;a!==null;)Oh(a,l,d),a=a.sibling}function Bh(a,l,d){var v=a.tag;if(v===5||v===6)a=a.stateNode,l?gt(d,a,l):Ue(d,a);else if(v!==4&&(a=a.child,a!==null))for(Bh(a,l,d),a=a.sibling;a!==null;)Bh(a,l,d),a=a.sibling}function sg(a,l,d){for(var v=l,S=!1,T,O;;){if(!S){S=v.return;e:for(;;){if(S===null)throw Error(o(160));switch(T=S.stateNode,S.tag){case 5:O=!1;break e;case 3:T=T.containerInfo,O=!0;break e;case 4:T=T.containerInfo,O=!0;break e}S=S.return}S=!0}if(v.tag===5||v.tag===6)eg(a,v,d),O?zt(T,v.stateNode):Mt(T,v.stateNode);else if(v.tag===18)O?Re(T,v.stateNode):$(T,v.stateNode);else if(v.tag===4){if(v.child!==null){T=v.stateNode.containerInfo,O=!0,v.child.return=v,v=v.child;continue}}else if($m(a,v,d),v.child!==null){v.child.return=v,v=v.child;continue}if(v===l)break;for(;v.sibling===null;){if(v.return===null||v.return===l)return;v=v.return,v.tag===4&&(S=!1)}v.sibling.return=v.return,v=v.sibling}}function zh(a,l){if(V){switch(l.tag){case 0:case 11:case 14:case 15:jr(3,l,l.return),ao(3,l),jr(5,l,l.return);return;case 1:return;case 5:var d=l.stateNode;if(d!=null){var v=l.memoizedProps;a=a!==null?a.memoizedProps:v;var S=l.type,T=l.updateQueue;l.updateQueue=null,T!==null&&mt(d,T,S,a,v,l)}return;case 6:if(l.stateNode===null)throw Error(o(162));d=l.memoizedProps,Oe(l.stateNode,a!==null?a.memoizedProps:d,d);return;case 3:re&&a!==null&&a.memoizedState.isDehydrated&&ee(l.stateNode.containerInfo);return;case 12:return;case 13:Kl(l);return;case 19:Kl(l);return;case 17:return}throw Error(o(163))}switch(l.tag){case 0:case 11:case 14:case 15:jr(3,l,l.return),ao(3,l),jr(5,l,l.return);return;case 12:return;case 13:Kl(l);return;case 19:Kl(l);return;case 3:re&&a!==null&&a.memoizedState.isDehydrated&&ee(l.stateNode.containerInfo);break;case 22:case 23:return}e:if(ce){switch(l.tag){case 1:case 5:case 6:break e;case 3:case 4:l=l.stateNode,Nt(l.containerInfo,l.pendingChildren);break e}throw Error(o(163))}}function Kl(a){var l=a.updateQueue;if(l!==null){a.updateQueue=null;var d=a.stateNode;d===null&&(d=a.stateNode=new sS),l.forEach(function(v){var S=gS.bind(null,a,v);d.has(v)||(d.add(v),v.then(S,S))})}}function oS(a,l){for(Ce=l;Ce!==null;){l=Ce;var d=l.deletions;if(d!==null)for(var v=0;v<d.length;v++){var S=d[v];try{var T=a;V?sg(T,S,l):eg(T,S,l);var O=S.alternate;O!==null&&(O.return=null),S.return=null}catch(He){Yn(S,l,He)}}if(d=l.child,l.subtreeFlags&12854&&d!==null)d.return=l,Ce=d;else for(;Ce!==null;){l=Ce;try{var G=l.flags;if(G&32&&V&&Ve(l.stateNode),G&512){var ae=l.alternate;if(ae!==null){var Me=ae.ref;Me!==null&&(typeof Me=="function"?Me(null):Me.current=null)}}if(G&8192)switch(l.tag){case 13:if(l.memoizedState!==null){var Ne=l.alternate;(Ne===null||Ne.memoizedState===null)&&(qh=xn())}break;case 22:var at=l.memoizedState!==null,Ke=l.alternate,Ot=Ke!==null&&Ke.memoizedState!==null;if(d=l,V){e:if(v=d,S=at,T=null,V)for(var We=v;;){if(We.tag===5){if(T===null){T=We;var Rn=We.stateNode;S?z(Rn):Ee(We.stateNode,We.memoizedProps)}}else if(We.tag===6){if(T===null){var yi=We.stateNode;S?Te(yi):qe(yi,We.memoizedProps)}}else if((We.tag!==22&&We.tag!==23||We.memoizedState===null||We===v)&&We.child!==null){We.child.return=We,We=We.child;continue}if(We===v)break;for(;We.sibling===null;){if(We.return===null||We.return===v)break e;T===We&&(T=null),We=We.return}T===We&&(T=null),We.sibling.return=We.return,We=We.sibling}}if(at&&!Ot&&d.mode&1){Ce=d;for(var J=d.child;J!==null;){for(d=Ce=J;Ce!==null;){v=Ce;var X=v.child;switch(v.tag){case 0:case 11:case 14:case 15:jr(4,v,v.return);break;case 1:Jl(v,v.return);var ie=v.stateNode;if(typeof ie.componentWillUnmount=="function"){var Ie=v.return;try{ie.props=v.memoizedProps,ie.state=v.memoizedState,ie.componentWillUnmount()}catch(He){Yn(v,Ie,He)}}break;case 5:Jl(v,v.return);break;case 22:if(v.memoizedState!==null){lg(d);continue}}X!==null?(X.return=v,Ce=X):lg(d)}J=J.sibling}}}switch(G&4102){case 2:rg(l),l.flags&=-3;break;case 6:rg(l),l.flags&=-3,zh(l.alternate,l);break;case 4096:l.flags&=-4097;break;case 4100:l.flags&=-4097,zh(l.alternate,l);break;case 4:zh(l.alternate,l)}}catch(He){Yn(l,l.return,He)}if(d=l.sibling,d!==null){d.return=l.return,Ce=d;break}Ce=l.return}}}function lS(a,l,d){Ce=a,ag(a)}function ag(a,l,d){for(var v=(a.mode&1)!==0;Ce!==null;){var S=Ce,T=S.child;if(S.tag===22&&v){var O=S.memoizedState!==null||jl;if(!O){var G=S.alternate,ae=G!==null&&G.memoizedState!==null||Zr;G=jl;var Me=Zr;if(jl=O,(Zr=ae)&&!Me)for(Ce=S;Ce!==null;)O=Ce,ae=O.child,O.tag===22&&O.memoizedState!==null?cg(S):ae!==null?(ae.return=O,Ce=ae):cg(S);for(;T!==null;)Ce=T,ag(T),T=T.sibling;Ce=S,jl=G,Zr=Me}og(a)}else S.subtreeFlags&8772&&T!==null?(T.return=S,Ce=T):og(a)}}function og(a){for(;Ce!==null;){var l=Ce;if(l.flags&8772){var d=l.alternate;try{if(l.flags&8772)switch(l.tag){case 0:case 11:case 15:Zr||ao(5,l);break;case 1:var v=l.stateNode;if(l.flags&4&&!Zr)if(d===null)v.componentDidMount();else{var S=l.elementType===l.type?d.memoizedProps:wi(l.type,d.memoizedProps);v.componentDidUpdate(S,d.memoizedState,v.__reactInternalSnapshotBeforeUpdate)}var T=l.updateQueue;T!==null&&tm(l,T,v);break;case 3:var O=l.updateQueue;if(O!==null){if(d=null,l.child!==null)switch(l.child.tag){case 5:d=le(l.child.stateNode);break;case 1:d=l.child.stateNode}tm(l,O,d)}break;case 5:var G=l.stateNode;d===null&&l.flags&4&&Be(G,l.type,l.memoizedProps,l);break;case 6:break;case 4:break;case 12:break;case 13:if(re&&l.memoizedState===null){var ae=l.alternate;if(ae!==null){var Me=ae.memoizedState;if(Me!==null){var Ne=Me.dehydrated;Ne!==null&&ne(Ne)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(o(163))}Zr||l.flags&512&&Fh(l)}catch(at){Yn(l,l.return,at)}}if(l===a){Ce=null;break}if(d=l.sibling,d!==null){d.return=l.return,Ce=d;break}Ce=l.return}}function lg(a){for(;Ce!==null;){var l=Ce;if(l===a){Ce=null;break}var d=l.sibling;if(d!==null){d.return=l.return,Ce=d;break}Ce=l.return}}function cg(a){for(;Ce!==null;){var l=Ce;try{switch(l.tag){case 0:case 11:case 15:var d=l.return;try{ao(4,l)}catch(ae){Yn(l,d,ae)}break;case 1:var v=l.stateNode;if(typeof v.componentDidMount=="function"){var S=l.return;try{v.componentDidMount()}catch(ae){Yn(l,S,ae)}}var T=l.return;try{Fh(l)}catch(ae){Yn(l,T,ae)}break;case 5:var O=l.return;try{Fh(l)}catch(ae){Yn(l,O,ae)}}}catch(ae){Yn(l,l.return,ae)}if(l===a){Ce=null;break}var G=l.sibling;if(G!==null){G.return=l.return,Ce=G;break}Ce=l.return}}var Ql=0,$l=1,ec=2,tc=3,nc=4;if(typeof Symbol=="function"&&Symbol.for){var oo=Symbol.for;Ql=oo("selector.component"),$l=oo("selector.has_pseudo_class"),ec=oo("selector.role"),tc=oo("selector.test_id"),nc=oo("selector.text")}function kh(a){var l=_e(a);if(l!=null){if(typeof l.memoizedProps["data-testname"]!="string")throw Error(o(364));return l}if(a=ue(a),a===null)throw Error(o(362));return a.stateNode.current}function Hh(a,l){switch(l.$$typeof){case Ql:if(a.type===l.value)return!0;break;case $l:e:{l=l.value,a=[a,0];for(var d=0;d<a.length;){var v=a[d++],S=a[d++],T=l[S];if(v.tag!==5||!pe(v)){for(;T!=null&&Hh(v,T);)S++,T=l[S];if(S===l.length){l=!0;break e}else for(v=v.child;v!==null;)a.push(v,S),v=v.sibling}}l=!1}return l;case ec:if(a.tag===5&&ke(a.stateNode,l.value))return!0;break;case nc:if((a.tag===5||a.tag===6)&&(a=Xe(a),a!==null&&0<=a.indexOf(l.value)))return!0;break;case tc:if(a.tag===5&&(a=a.memoizedProps["data-testname"],typeof a=="string"&&a.toLowerCase()===l.value.toLowerCase()))return!0;break;default:throw Error(o(365))}return!1}function Vh(a){switch(a.$$typeof){case Ql:return"<"+(I(a.value)||"Unknown")+">";case $l:return":has("+(Vh(a)||"")+")";case ec:return'[role="'+a.value+'"]';case nc:return'"'+a.value+'"';case tc:return'[data-testname="'+a.value+'"]';default:throw Error(o(365))}}function ug(a,l){var d=[];a=[a,0];for(var v=0;v<a.length;){var S=a[v++],T=a[v++],O=l[T];if(S.tag!==5||!pe(S)){for(;O!=null&&Hh(S,O);)T++,O=l[T];if(T===l.length)d.push(S);else for(S=S.child;S!==null;)a.push(S,T),S=S.sibling}}return d}function Gh(a,l){if(!se)throw Error(o(363));a=kh(a),a=ug(a,l),l=[],a=Array.from(a);for(var d=0;d<a.length;){var v=a[d++];if(v.tag===5)pe(v)||l.push(v.stateNode);else for(v=v.child;v!==null;)a.push(v),v=v.sibling}return l}var cS=Math.ceil,ic=c.ReactCurrentDispatcher,Wh=c.ReactCurrentOwner,rn=c.ReactCurrentBatchConfig,dt=0,on=null,ln=null,wn=0,oi=0,qs=Et(0),hn=0,lo=null,Ys=0,rc=0,Xh=0,co=null,Xn=null,qh=0,Yh=1/0;function Zs(){Yh=xn()+500}var sc=!1,Zh=null,xr=null,ac=!1,yr=null,oc=0,uo=0,jh=null,lc=-1,cc=0;function On(){return dt&6?xn():lc!==-1?lc:lc=xn()}function Sr(a){return a.mode&1?dt&2&&wn!==0?wn&-wn:Xy.transition!==null?(cc===0&&(a=Ml,Ml<<=1,!(Ml&4194240)&&(Ml=64),cc=a),cc):(a=wt,a!==0?a:xe()):1}function _i(a,l,d){if(50<uo)throw uo=0,jh=null,Error(o(185));var v=uc(a,l);return v===null?null:(Ya(v,l,d),(!(dt&2)||v!==on)&&(v===on&&(!(dt&2)&&(rc|=l),hn===4&&Mr(v,wn)),qn(v,d),l===1&&dt===0&&!(a.mode&1)&&(Zs(),Al&&ki())),v)}function uc(a,l){a.lanes|=l;var d=a.alternate;for(d!==null&&(d.lanes|=l),d=a,a=a.return;a!==null;)a.childLanes|=l,d=a.alternate,d!==null&&(d.childLanes|=l),d=a,a=a.return;return d.tag===3?d.stateNode:null}function qn(a,l){var d=a.callbackNode;Fy(a,l);var v=wl(a,a===on?wn:0);if(v===0)d!==null&&Jp(d),a.callbackNode=null,a.callbackPriority=0;else if(l=v&-v,a.callbackPriority!==l){if(d!=null&&Jp(d),l===1)a.tag===0?Wy(fg.bind(null,a)):Kp(fg.bind(null,a)),R?Y(function(){dt===0&&ki()}):ih(rh,ki),d=null;else{switch(jp(v)){case 1:d=rh;break;case 4:d=ky;break;case 16:d=sh;break;case 536870912:d=Hy;break;default:d=sh}d=Sg(d,hg.bind(null,a))}a.callbackPriority=l,a.callbackNode=d}}function hg(a,l){if(lc=-1,cc=0,dt&6)throw Error(o(327));var d=a.callbackNode;if(Qr()&&a.callbackNode!==d)return null;var v=wl(a,a===on?wn:0);if(v===0)return null;if(v&30||v&a.expiredLanes||l)l=hc(a,v);else{l=v;var S=dt;dt|=2;var T=mg();(on!==a||wn!==l)&&(Zs(),Jr(a,l));do try{fS();break}catch(G){pg(a,G)}while(!0);lh(),ic.current=T,dt=S,ln!==null?l=0:(on=null,wn=0,l=hn)}if(l!==0){if(l===2&&(S=eh(a),S!==0&&(v=S,l=Jh(a,S))),l===1)throw d=lo,Jr(a,0),Mr(a,v),qn(a,xn()),d;if(l===6)Mr(a,v);else{if(S=a.current.alternate,!(v&30)&&!uS(S)&&(l=hc(a,v),l===2&&(T=eh(a),T!==0&&(v=T,l=Jh(a,T))),l===1))throw d=lo,Jr(a,0),Mr(a,v),qn(a,xn()),d;switch(a.finishedWork=S,a.finishedLanes=v,l){case 0:case 1:throw Error(o(345));case 2:Kr(a,Xn);break;case 3:if(Mr(a,v),(v&130023424)===v&&(l=qh+500-xn(),10<l)){if(wl(a,0)!==0)break;if(S=a.suspendedLanes,(S&v)!==v){On(),a.pingedLanes|=a.suspendedLanes&S;break}a.timeoutHandle=ye(Kr.bind(null,a,Xn),l);break}Kr(a,Xn);break;case 4:if(Mr(a,v),(v&4194240)===v)break;for(l=a.eventTimes,S=-1;0<v;){var O=31-Wn(v);T=1<<O,O=l[O],O>S&&(S=O),v&=~T}if(v=S,v=xn()-v,v=(120>v?120:480>v?480:1080>v?1080:1920>v?1920:3e3>v?3e3:4320>v?4320:1960*cS(v/1960))-v,10<v){a.timeoutHandle=ye(Kr.bind(null,a,Xn),v);break}Kr(a,Xn);break;case 5:Kr(a,Xn);break;default:throw Error(o(329))}}}return qn(a,xn()),a.callbackNode===d?hg.bind(null,a):null}function Jh(a,l){var d=co;return a.current.memoizedState.isDehydrated&&(Jr(a,l).flags|=256),a=hc(a,l),a!==2&&(l=Xn,Xn=d,l!==null&&Kh(l)),a}function Kh(a){Xn===null?Xn=a:Xn.push.apply(Xn,a)}function uS(a){for(var l=a;;){if(l.flags&16384){var d=l.updateQueue;if(d!==null&&(d=d.stores,d!==null))for(var v=0;v<d.length;v++){var S=d[v],T=S.getSnapshot;S=S.value;try{if(!zi(T(),S))return!1}catch{return!1}}}if(d=l.child,l.subtreeFlags&16384&&d!==null)d.return=l,l=d;else{if(l===a)break;for(;l.sibling===null;){if(l.return===null||l.return===a)return!0;l=l.return}l.sibling.return=l.return,l=l.sibling}}return!0}function Mr(a,l){for(l&=~Xh,l&=~rc,a.suspendedLanes|=l,a.pingedLanes&=~l,a=a.expirationTimes;0<l;){var d=31-Wn(l),v=1<<d;a[d]=-1,l&=~v}}function fg(a){if(dt&6)throw Error(o(327));Qr();var l=wl(a,0);if(!(l&1))return qn(a,xn()),null;var d=hc(a,l);if(a.tag!==0&&d===2){var v=eh(a);v!==0&&(l=v,d=Jh(a,v))}if(d===1)throw d=lo,Jr(a,0),Mr(a,l),qn(a,xn()),d;if(d===6)throw Error(o(345));return a.finishedWork=a.current.alternate,a.finishedLanes=l,Kr(a,Xn),qn(a,xn()),null}function dg(a){yr!==null&&yr.tag===0&&!(dt&6)&&Qr();var l=dt;dt|=1;var d=rn.transition,v=wt;try{if(rn.transition=null,wt=1,a)return a()}finally{wt=v,rn.transition=d,dt=l,!(dt&6)&&ki()}}function Qh(){oi=qs.current,De(qs)}function Jr(a,l){a.finishedWork=null,a.finishedLanes=0;var d=a.timeoutHandle;if(d!==tt&&(a.timeoutHandle=tt,Ye(d)),ln!==null)for(d=ln.return;d!==null;){var v=d;switch(mh(v),v.tag){case 1:v=v.type.childContextTypes,v!=null&&ii();break;case 3:Ws(),De(En),De(Wt),Mh();break;case 5:yh(v);break;case 4:Ws();break;case 13:De(Yt);break;case 19:De(Yt);break;case 10:ch(v.type._context);break;case 22:case 23:Qh()}d=d.return}if(on=a,ln=a=Er(a.current,null),wn=oi=l,hn=0,lo=null,Xh=rc=Ys=0,Xn=co=null,Hi!==null){for(l=0;l<Hi.length;l++)if(d=Hi[l],v=d.interleaved,v!==null){d.interleaved=null;var S=v.next,T=d.pending;if(T!==null){var O=T.next;T.next=S,v.next=O}d.pending=v}Hi=null}return a}function pg(a,l){do{var d=ln;try{if(lh(),Ol.current=Gl,Bl){for(var v=Jt.memoizedState;v!==null;){var S=v.queue;S!==null&&(S.pending=null),v=v.next}Bl=!1}if(Xs=0,yn=An=Jt=null,$a=!1,eo=0,Wh.current=null,d===null||d.return===null){hn=1,lo=l,ln=null;break}e:{var T=a,O=d.return,G=d,ae=l;if(l=wn,G.flags|=32768,ae!==null&&typeof ae=="object"&&typeof ae.then=="function"){var Me=ae,Ne=G,at=Ne.tag;if(!(Ne.mode&1)&&(at===0||at===11||at===15)){var Ke=Ne.alternate;Ke?(Ne.updateQueue=Ke.updateQueue,Ne.memoizedState=Ke.memoizedState,Ne.lanes=Ke.lanes):(Ne.updateQueue=null,Ne.memoizedState=null)}var Ot=Nm(O);if(Ot!==null){Ot.flags&=-257,Fm(Ot,O,G,T,l),Ot.mode&1&&Dm(T,Me,l),l=Ot,ae=Me;var We=l.updateQueue;if(We===null){var Rn=new Set;Rn.add(ae),l.updateQueue=Rn}else We.add(ae);break e}else{if(!(l&1)){Dm(T,Me,l),$h();break e}ae=Error(o(426))}}else if(Xt&&G.mode&1){var yi=Nm(O);if(yi!==null){!(yi.flags&65536)&&(yi.flags|=256),Fm(yi,O,G,T,l),_h(ae);break e}}T=ae,hn!==4&&(hn=2),co===null?co=[T]:co.push(T),ae=Rh(ae,G),G=O;do{switch(G.tag){case 3:G.flags|=65536,l&=-l,G.lanes|=l;var J=Lm(G,ae,l);em(G,J);break e;case 1:T=ae;var X=G.type,ie=G.stateNode;if(!(G.flags&128)&&(typeof X.getDerivedStateFromError=="function"||ie!==null&&typeof ie.componentDidCatch=="function"&&(xr===null||!xr.has(ie)))){G.flags|=65536,l&=-l,G.lanes|=l;var Ie=Um(G,T,l);em(G,Ie);break e}}G=G.return}while(G!==null)}vg(d)}catch(He){l=He,ln===d&&d!==null&&(ln=d=d.return);continue}break}while(!0)}function mg(){var a=ic.current;return ic.current=Gl,a===null?Gl:a}function $h(){(hn===0||hn===3||hn===2)&&(hn=4),on===null||!(Ys&268435455)&&!(rc&268435455)||Mr(on,wn)}function hc(a,l){var d=dt;dt|=2;var v=mg();on===a&&wn===l||Jr(a,l);do try{hS();break}catch(S){pg(a,S)}while(!0);if(lh(),dt=d,ic.current=v,ln!==null)throw Error(o(261));return on=null,wn=0,hn}function hS(){for(;ln!==null;)gg(ln)}function fS(){for(;ln!==null&&!By();)gg(ln)}function gg(a){var l=yg(a.alternate,a,oi);a.memoizedProps=a.pendingProps,l===null?vg(a):ln=l,Wh.current=null}function vg(a){var l=a;do{var d=l.alternate;if(a=l.return,l.flags&32768){if(d=rS(d,l),d!==null){d.flags&=32767,ln=d;return}if(a!==null)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{hn=6,ln=null;return}}else if(d=tS(d,l,oi),d!==null){ln=d;return}if(l=l.sibling,l!==null){ln=l;return}ln=l=a}while(l!==null);hn===0&&(hn=5)}function Kr(a,l){var d=wt,v=rn.transition;try{rn.transition=null,wt=1,dS(a,l,d)}finally{rn.transition=v,wt=d}return null}function dS(a,l,d){do Qr();while(yr!==null);if(dt&6)throw Error(o(327));var v=a.finishedWork,S=a.finishedLanes;if(v===null)return null;if(a.finishedWork=null,a.finishedLanes=0,v===a.current)throw Error(o(177));a.callbackNode=null,a.callbackPriority=0;var T=v.lanes|v.childLanes;if(Oy(a,T),a===on&&(ln=on=null,wn=0),!(v.subtreeFlags&2064)&&!(v.flags&2064)||ac||(ac=!0,Sg(sh,function(){return Qr(),null})),T=(v.flags&15990)!==0,v.subtreeFlags&15990||T){T=rn.transition,rn.transition=null;var O=wt;wt=1;var G=dt;dt|=4,Wh.current=null,aS(a,v),oS(a,v),Z(a.containerInfo),a.current=v,lS(v),zy(),dt=G,wt=O,rn.transition=T}else a.current=v;if(ac&&(ac=!1,yr=a,oc=S),T=a.pendingLanes,T===0&&(xr=null),Vy(v.stateNode),qn(a,xn()),l!==null)for(d=a.onRecoverableError,v=0;v<l.length;v++)d(l[v]);if(sc)throw sc=!1,a=Zh,Zh=null,a;return oc&1&&a.tag!==0&&Qr(),T=a.pendingLanes,T&1?a===jh?uo++:(uo=0,jh=a):uo=0,ki(),null}function Qr(){if(yr!==null){var a=jp(oc),l=rn.transition,d=wt;try{if(rn.transition=null,wt=16>a?16:a,yr===null)var v=!1;else{if(a=yr,yr=null,oc=0,dt&6)throw Error(o(331));var S=dt;for(dt|=4,Ce=a.current;Ce!==null;){var T=Ce,O=T.child;if(Ce.flags&16){var G=T.deletions;if(G!==null){for(var ae=0;ae<G.length;ae++){var Me=G[ae];for(Ce=Me;Ce!==null;){var Ne=Ce;switch(Ne.tag){case 0:case 11:case 15:jr(8,Ne,T)}var at=Ne.child;if(at!==null)at.return=Ne,Ce=at;else for(;Ce!==null;){Ne=Ce;var Ke=Ne.sibling,Ot=Ne.return;if(tg(Ne),Ne===Me){Ce=null;break}if(Ke!==null){Ke.return=Ot,Ce=Ke;break}Ce=Ot}}}var We=T.alternate;if(We!==null){var Rn=We.child;if(Rn!==null){We.child=null;do{var yi=Rn.sibling;Rn.sibling=null,Rn=yi}while(Rn!==null)}}Ce=T}}if(T.subtreeFlags&2064&&O!==null)O.return=T,Ce=O;else e:for(;Ce!==null;){if(T=Ce,T.flags&2048)switch(T.tag){case 0:case 11:case 15:jr(9,T,T.return)}var J=T.sibling;if(J!==null){J.return=T.return,Ce=J;break e}Ce=T.return}}var X=a.current;for(Ce=X;Ce!==null;){O=Ce;var ie=O.child;if(O.subtreeFlags&2064&&ie!==null)ie.return=O,Ce=ie;else e:for(O=X;Ce!==null;){if(G=Ce,G.flags&2048)try{switch(G.tag){case 0:case 11:case 15:ao(9,G)}}catch(He){Yn(G,G.return,He)}if(G===O){Ce=null;break e}var Ie=G.sibling;if(Ie!==null){Ie.return=G.return,Ce=Ie;break e}Ce=G.return}}if(dt=S,ki(),Bi&&typeof Bi.onPostCommitFiberRoot=="function")try{Bi.onPostCommitFiberRoot(Tl,a)}catch{}v=!0}return v}finally{wt=d,rn.transition=l}}return!1}function _g(a,l,d){l=Rh(d,l),l=Lm(a,l,1),_r(a,l),l=On(),a=uc(a,1),a!==null&&(Ya(a,1,l),qn(a,l))}function Yn(a,l,d){if(a.tag===3)_g(a,a,d);else for(;l!==null;){if(l.tag===3){_g(l,a,d);break}else if(l.tag===1){var v=l.stateNode;if(typeof l.type.getDerivedStateFromError=="function"||typeof v.componentDidCatch=="function"&&(xr===null||!xr.has(v))){a=Rh(d,a),a=Um(l,a,1),_r(l,a),a=On(),l=uc(l,1),l!==null&&(Ya(l,1,a),qn(l,a));break}}l=l.return}}function pS(a,l,d){var v=a.pingCache;v!==null&&v.delete(l),l=On(),a.pingedLanes|=a.suspendedLanes&d,on===a&&(wn&d)===d&&(hn===4||hn===3&&(wn&130023424)===wn&&500>xn()-qh?Jr(a,0):Xh|=d),qn(a,l)}function xg(a,l){l===0&&(a.mode&1?(l=El,El<<=1,!(El&130023424)&&(El=4194304)):l=1);var d=On();a=uc(a,l),a!==null&&(Ya(a,l,d),qn(a,d))}function mS(a){var l=a.memoizedState,d=0;l!==null&&(d=l.retryLane),xg(a,d)}function gS(a,l){var d=0;switch(a.tag){case 13:var v=a.stateNode,S=a.memoizedState;S!==null&&(d=S.retryLane);break;case 19:v=a.stateNode;break;default:throw Error(o(314))}v!==null&&v.delete(l),xg(a,d)}var yg;yg=function(a,l,d){if(a!==null)if(a.memoizedProps!==l.pendingProps||En.current)ai=!0;else{if(!(a.lanes&d)&&!(l.flags&128))return ai=!1,iS(a,l,d);ai=!!(a.flags&131072)}else ai=!1,Xt&&l.flags&1048576&&am(l,Dl,l.index);switch(l.lanes=0,l.tag){case 2:var v=l.type;a!==null&&(a.alternate=null,l.alternate=null,l.flags|=2),a=l.pendingProps;var S=Oi(l,Wt.current);Bs(l,d),S=wh(null,l,v,a,S,d);var T=Th();return l.flags|=1,typeof S=="object"&&S!==null&&typeof S.render=="function"&&S.$$typeof===void 0?(l.tag=1,l.memoizedState=null,l.updateQueue=null,Pt(v)?(T=!0,gr(l)):T=!1,l.memoizedState=S.state!==null&&S.state!==void 0?S.state:null,hh(l),S.updater=Ll,l.stateNode=S,S._reactInternals=l,dh(l,v,a,d),l=Lh(null,l,v,!0,T,d)):(l.tag=0,Xt&&T&&ph(l),Fn(null,l,S,d),l=l.child),l;case 16:v=l.elementType;e:{switch(a!==null&&(a.alternate=null,l.alternate=null,l.flags|=2),a=l.pendingProps,S=v._init,v=S(v._payload),l.type=v,S=l.tag=_S(v),a=wi(v,a),S){case 0:l=Ih(null,l,v,a,d);break e;case 1:l=Wm(null,l,v,a,d);break e;case 11:l=zm(null,l,v,a,d);break e;case 14:l=km(null,l,v,wi(v.type,a),d);break e}throw Error(o(306,v,""))}return l;case 0:return v=l.type,S=l.pendingProps,S=l.elementType===v?S:wi(v,S),Ih(a,l,v,S,d);case 1:return v=l.type,S=l.pendingProps,S=l.elementType===v?S:wi(v,S),Wm(a,l,v,S,d);case 3:e:{if(Xm(l),a===null)throw Error(o(387));v=l.pendingProps,T=l.memoizedState,S=T.element,$p(a,l),Il(l,v,null,d);var O=l.memoizedState;if(v=O.element,re&&T.isDehydrated)if(T={element:v,isDehydrated:!1,cache:O.cache,transitions:O.transitions},l.updateQueue.baseState=T,l.memoizedState=T,l.flags&256){S=Error(o(423)),l=qm(a,l,v,d,S);break e}else if(v!==S){S=Error(o(424)),l=qm(a,l,v,d,S);break e}else for(re&&(si=yl(l.stateNode.containerInfo),ri=l,Xt=!0,Ti=null,Za=!1),d=fm(l,null,v,d),l.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(Hs(),v===S){l=rr(a,l,d);break e}Fn(a,l,v,d)}l=l.child}return l;case 5:return dm(l),a===null&&vh(l),v=l.type,S=l.pendingProps,T=a!==null?a.memoizedProps:null,O=S.children,me(v,S)?O=null:T!==null&&me(v,T)&&(l.flags|=32),Gm(a,l),Fn(a,l,O,d),l.child;case 6:return a===null&&vh(l),null;case 13:return Ym(a,l,d);case 4:return xh(l,l.stateNode.containerInfo),v=l.pendingProps,a===null?l.child=Vs(l,null,v,d):Fn(a,l,v,d),l.child;case 11:return v=l.type,S=l.pendingProps,S=l.elementType===v?S:wi(v,S),zm(a,l,v,S,d);case 7:return Fn(a,l,l.pendingProps,d),l.child;case 8:return Fn(a,l,l.pendingProps.children,d),l.child;case 12:return Fn(a,l,l.pendingProps.children,d),l.child;case 10:e:{if(v=l.type._context,S=l.pendingProps,T=l.memoizedProps,O=S.value,Qp(l,v,O),T!==null)if(zi(T.value,O)){if(T.children===S.children&&!En.current){l=rr(a,l,d);break e}}else for(T=l.child,T!==null&&(T.return=l);T!==null;){var G=T.dependencies;if(G!==null){O=T.child;for(var ae=G.firstContext;ae!==null;){if(ae.context===v){if(T.tag===1){ae=er(-1,d&-d),ae.tag=2;var Me=T.updateQueue;if(Me!==null){Me=Me.shared;var Ne=Me.pending;Ne===null?ae.next=ae:(ae.next=Ne.next,Ne.next=ae),Me.pending=ae}}T.lanes|=d,ae=T.alternate,ae!==null&&(ae.lanes|=d),uh(T.return,d,l),G.lanes|=d;break}ae=ae.next}}else if(T.tag===10)O=T.type===l.type?null:T.child;else if(T.tag===18){if(O=T.return,O===null)throw Error(o(341));O.lanes|=d,G=O.alternate,G!==null&&(G.lanes|=d),uh(O,d,l),O=T.sibling}else O=T.child;if(O!==null)O.return=T;else for(O=T;O!==null;){if(O===l){O=null;break}if(T=O.sibling,T!==null){T.return=O.return,O=T;break}O=O.return}T=O}Fn(a,l,S.children,d),l=l.child}return l;case 9:return S=l.type,v=l.pendingProps.children,Bs(l,d),S=di(S),v=v(S),l.flags|=1,Fn(a,l,v,d),l.child;case 14:return v=l.type,S=wi(v,l.pendingProps),S=wi(v.type,S),km(a,l,v,S,d);case 15:return Hm(a,l,l.type,l.pendingProps,d);case 17:return v=l.type,S=l.pendingProps,S=l.elementType===v?S:wi(v,S),a!==null&&(a.alternate=null,l.alternate=null,l.flags|=2),l.tag=1,Pt(v)?(a=!0,gr(l)):a=!1,Bs(l,d),rm(l,v,S),dh(l,v,S,d),Lh(null,l,v,!0,a,d);case 19:return Km(a,l,d);case 22:return Vm(a,l,d)}throw Error(o(156,l.tag))};function Sg(a,l){return ih(a,l)}function vS(a,l,d,v){this.tag=a,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=l,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=v,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function xi(a,l,d,v){return new vS(a,l,d,v)}function ef(a){return a=a.prototype,!(!a||!a.isReactComponent)}function _S(a){if(typeof a=="function")return ef(a)?1:0;if(a!=null){if(a=a.$$typeof,a===M)return 11;if(a===w)return 14}return 2}function Er(a,l){var d=a.alternate;return d===null?(d=xi(a.tag,l,a.key,a.mode),d.elementType=a.elementType,d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=l,d.type=a.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=a.flags&14680064,d.childLanes=a.childLanes,d.lanes=a.lanes,d.child=a.child,d.memoizedProps=a.memoizedProps,d.memoizedState=a.memoizedState,d.updateQueue=a.updateQueue,l=a.dependencies,d.dependencies=l===null?null:{lanes:l.lanes,firstContext:l.firstContext},d.sibling=a.sibling,d.index=a.index,d.ref=a.ref,d}function fc(a,l,d,v,S,T){var O=2;if(v=a,typeof a=="function")ef(a)&&(O=1);else if(typeof a=="string")O=5;else e:switch(a){case f:return $r(d.children,S,T,l);case p:O=8,S|=8;break;case m:return a=xi(12,d,l,S|2),a.elementType=m,a.lanes=T,a;case y:return a=xi(13,d,l,S),a.elementType=y,a.lanes=T,a;case _:return a=xi(19,d,l,S),a.elementType=_,a.lanes=T,a;case A:return dc(d,S,T,l);default:if(typeof a=="object"&&a!==null)switch(a.$$typeof){case g:O=10;break e;case x:O=9;break e;case M:O=11;break e;case w:O=14;break e;case E:O=16,v=null;break e}throw Error(o(130,a==null?a:typeof a,""))}return l=xi(O,d,l,S),l.elementType=a,l.type=v,l.lanes=T,l}function $r(a,l,d,v){return a=xi(7,a,v,l),a.lanes=d,a}function dc(a,l,d,v){return a=xi(22,a,v,l),a.elementType=A,a.lanes=d,a.stateNode={},a}function tf(a,l,d){return a=xi(6,a,null,l),a.lanes=d,a}function nf(a,l,d){return l=xi(4,a.children!==null?a.children:[],a.key,l),l.lanes=d,l.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},l}function xS(a,l,d,v,S){this.tag=l,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=tt,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=th(0),this.expirationTimes=th(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=th(0),this.identifierPrefix=v,this.onRecoverableError=S,re&&(this.mutableSourceEagerHydrationData=null)}function Mg(a,l,d,v,S,T,O,G,ae){return a=new xS(a,l,d,G,ae),l===1?(l=1,T===!0&&(l|=8)):l=0,T=xi(3,null,null,l),a.current=T,T.stateNode=a,T.memoizedState={element:v,isDehydrated:d,cache:null,transitions:null},hh(T),a}function Eg(a){if(!a)return _t;a=a._reactInternals;e:{if(C(a)!==a||a.tag!==1)throw Error(o(170));var l=a;do{switch(l.tag){case 3:l=l.stateNode.context;break e;case 1:if(Pt(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break e}}l=l.return}while(l!==null);throw Error(o(171))}if(a.tag===1){var d=a.type;if(Pt(d))return Nn(a,d,l)}return l}function wg(a){var l=a._reactInternals;if(l===void 0)throw typeof a.render=="function"?Error(o(188)):(a=Object.keys(a).join(","),Error(o(268,a)));return a=W(l),a===null?null:a.stateNode}function Tg(a,l){if(a=a.memoizedState,a!==null&&a.dehydrated!==null){var d=a.retryLane;a.retryLane=d!==0&&d<l?d:l}}function rf(a,l){Tg(a,l),(a=a.alternate)&&Tg(a,l)}function yS(a){return a=W(a),a===null?null:a.stateNode}function SS(){return null}return t.attemptContinuousHydration=function(a){if(a.tag===13){var l=On();_i(a,134217728,l),rf(a,134217728)}},t.attemptHydrationAtCurrentPriority=function(a){if(a.tag===13){var l=On(),d=Sr(a);_i(a,d,l),rf(a,d)}},t.attemptSynchronousHydration=function(a){switch(a.tag){case 3:var l=a.stateNode;if(l.current.memoizedState.isDehydrated){var d=qa(l.pendingLanes);d!==0&&(nh(l,d|1),qn(l,xn()),!(dt&6)&&(Zs(),ki()))}break;case 13:var v=On();dg(function(){return _i(a,1,v)}),rf(a,1)}},t.batchedUpdates=function(a,l){var d=dt;dt|=1;try{return a(l)}finally{dt=d,dt===0&&(Zs(),Al&&ki())}},t.createComponentSelector=function(a){return{$$typeof:Ql,value:a}},t.createContainer=function(a,l,d,v,S,T,O){return Mg(a,l,!1,null,d,v,S,T,O)},t.createHasPseudoClassSelector=function(a){return{$$typeof:$l,value:a}},t.createHydrationContainer=function(a,l,d,v,S,T,O,G,ae){return a=Mg(d,v,!0,a,S,T,O,G,ae),a.context=Eg(null),d=a.current,v=On(),S=Sr(d),T=er(v,S),T.callback=l??null,_r(d,T),a.current.lanes=S,Ya(a,S,v),qn(a,v),a},t.createPortal=function(a,l,d){var v=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:v==null?null:""+v,children:a,containerInfo:l,implementation:d}},t.createRoleSelector=function(a){return{$$typeof:ec,value:a}},t.createTestNameSelector=function(a){return{$$typeof:tc,value:a}},t.createTextSelector=function(a){return{$$typeof:nc,value:a}},t.deferredUpdates=function(a){var l=wt,d=rn.transition;try{return rn.transition=null,wt=16,a()}finally{wt=l,rn.transition=d}},t.discreteUpdates=function(a,l,d,v,S){var T=wt,O=rn.transition;try{return rn.transition=null,wt=1,a(l,d,v,S)}finally{wt=T,rn.transition=O,dt===0&&Zs()}},t.findAllNodes=Gh,t.findBoundingRects=function(a,l){if(!se)throw Error(o(363));l=Gh(a,l),a=[];for(var d=0;d<l.length;d++)a.push(de(l[d]));for(l=a.length-1;0<l;l--){d=a[l];for(var v=d.x,S=v+d.width,T=d.y,O=T+d.height,G=l-1;0<=G;G--)if(l!==G){var ae=a[G],Me=ae.x,Ne=Me+ae.width,at=ae.y,Ke=at+ae.height;if(v>=Me&&T>=at&&S<=Ne&&O<=Ke){a.splice(l,1);break}else if(v!==Me||d.width!==ae.width||Ke<T||at>O){if(!(T!==at||d.height!==ae.height||Ne<v||Me>S)){Me>v&&(ae.width+=Me-v,ae.x=v),Ne<S&&(ae.width=S-Me),a.splice(l,1);break}}else{at>T&&(ae.height+=at-T,ae.y=T),Ke<O&&(ae.height=O-at),a.splice(l,1);break}}}return a},t.findHostInstance=wg,t.findHostInstanceWithNoPortals=function(a){return a=F(a),a=a!==null?j(a):null,a===null?null:a.stateNode},t.findHostInstanceWithWarning=function(a){return wg(a)},t.flushControlled=function(a){var l=dt;dt|=1;var d=rn.transition,v=wt;try{rn.transition=null,wt=1,a()}finally{wt=v,rn.transition=d,dt=l,dt===0&&(Zs(),ki())}},t.flushPassiveEffects=Qr,t.flushSync=dg,t.focusWithin=function(a,l){if(!se)throw Error(o(363));for(a=kh(a),l=ug(a,l),l=Array.from(l),a=0;a<l.length;){var d=l[a++];if(!pe(d)){if(d.tag===5&&je(d.stateNode))return!0;for(d=d.child;d!==null;)l.push(d),d=d.sibling}}return!1},t.getCurrentUpdatePriority=function(){return wt},t.getFindAllNodesFailureDescription=function(a,l){if(!se)throw Error(o(363));var d=0,v=[];a=[kh(a),0];for(var S=0;S<a.length;){var T=a[S++],O=a[S++],G=l[O];if((T.tag!==5||!pe(T))&&(Hh(T,G)&&(v.push(Vh(G)),O++,O>d&&(d=O)),O<l.length))for(T=T.child;T!==null;)a.push(T,O),T=T.sibling}if(d<l.length){for(a=[];d<l.length;d++)a.push(Vh(l[d]));return`findAllNodes was able to match part of the selector:
  `+(v.join(" > ")+`

No matching component was found for:
  `)+a.join(" > ")}return null},t.getPublicRootInstance=function(a){if(a=a.current,!a.child)return null;switch(a.child.tag){case 5:return le(a.child.stateNode);default:return a.child.stateNode}},t.injectIntoDevTools=function(a){if(a={bundleType:a.bundleType,version:a.version,rendererPackageName:a.rendererPackageName,rendererConfig:a.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:yS,findFiberByHostInstance:a.findFiberByHostInstance||SS,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")a=!1;else{var l=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(l.isDisabled||!l.supportsFiber)a=!0;else{try{Tl=l.inject(a),Bi=l}catch{}a=!!l.checkDCE}}return a},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(a,l,d,v){if(!se)throw Error(o(363));a=Gh(a,l);var S=Se(a,d,v).disconnect;return{disconnect:function(){S()}}},t.registerMutableSourceForHydration=function(a,l){var d=l._getVersion;d=d(l._source),a.mutableSourceEagerHydrationData==null?a.mutableSourceEagerHydrationData=[l,d]:a.mutableSourceEagerHydrationData.push(l,d)},t.runWithPriority=function(a,l){var d=wt;try{return wt=a,l()}finally{wt=d}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(a,l,d,v){var S=l.current,T=On(),O=Sr(S);return d=Eg(d),l.context===null?l.context=d:l.pendingContext=d,l=er(T,O),l.payload={element:a},v=v===void 0?null:v,v!==null&&(l.callback=v),_r(S,l),a=_i(S,O,T),a!==null&&Pl(a,S,O),O},t};Kx.exports=IC;var LC=Kx.exports;const UC=D0(LC),DC=i=>typeof i=="object"&&typeof i.then=="function",xs=[];function ey(i,e,t=(n,r)=>n===r){if(i===e)return!0;if(!i||!e)return!1;const n=i.length;if(e.length!==n)return!1;for(let r=0;r<n;r++)if(!t(i[r],e[r]))return!1;return!0}function ty(i,e=null,t=!1,n={}){e===null&&(e=[i]);for(const s of xs)if(ey(e,s.keys,s.equal)){if(t)return;if(Object.prototype.hasOwnProperty.call(s,"error"))throw s.error;if(Object.prototype.hasOwnProperty.call(s,"response"))return n.lifespan&&n.lifespan>0&&(s.timeout&&clearTimeout(s.timeout),s.timeout=setTimeout(s.remove,n.lifespan)),s.response;if(!t)throw s.promise}const r={keys:e,equal:n.equal,remove:()=>{const s=xs.indexOf(r);s!==-1&&xs.splice(s,1)},promise:(DC(i)?i:i(...e)).then(s=>{r.response=s,n.lifespan&&n.lifespan>0&&(r.timeout=setTimeout(r.remove,n.lifespan))}).catch(s=>r.error=s)};if(xs.push(r),!t)throw r.promise}const NC=(i,e,t)=>ty(i,e,!1,t),FC=(i,e,t)=>void ty(i,e,!0,t),OC=i=>{if(i===void 0||i.length===0)xs.splice(0,xs.length);else{const e=xs.find(t=>ey(i,t.keys,t.equal));e&&e.remove()}},Vp={},ny=i=>void Object.assign(Vp,i);function BC(i,e){function t(f,{args:p=[],attach:m,...g},x){let M=`${f[0].toUpperCase()}${f.slice(1)}`,y;if(f==="primitive"){if(g.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const _=g.object;y=Sa(_,{type:f,root:x,attach:m,primitive:!0})}else{const _=Vp[M];if(!_)throw new Error(`R3F: ${M} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");y=Sa(new _(...p),{type:f,root:x,attach:m,memoizedProps:{args:p}})}return y.__r3f.attach===void 0&&(y instanceof ut?y.__r3f.attach="geometry":y instanceof vn&&(y.__r3f.attach="material")),M!=="inject"&&qf(y,g),y}function n(f,p){let m=!1;if(p){var g,x;(g=p.__r3f)!=null&&g.attach?Xf(f,p,p.__r3f.attach):p.isObject3D&&f.isObject3D&&(f.add(p),m=!0),m||(x=f.__r3f)==null||x.objects.push(p),p.__r3f||Sa(p,{}),p.__r3f.parent=f,Jd(p),Ma(p)}}function r(f,p,m){let g=!1;if(p){var x,M;if((x=p.__r3f)!=null&&x.attach)Xf(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){p.parent=f,p.dispatchEvent({type:"added"}),f.dispatchEvent({type:"childadded",child:p});const y=f.children.filter(w=>w!==p),_=y.indexOf(m);f.children=[...y.slice(0,_),p,...y.slice(_)],g=!0}g||(M=f.__r3f)==null||M.objects.push(p),p.__r3f||Sa(p,{}),p.__r3f.parent=f,Jd(p),Ma(p)}}function s(f,p,m=!1){f&&[...f].forEach(g=>o(p,g,m))}function o(f,p,m){if(p){var g,x,M;if(p.__r3f&&(p.__r3f.parent=null),(g=f.__r3f)!=null&&g.objects&&(f.__r3f.objects=f.__r3f.objects.filter(A=>A!==p)),(x=p.__r3f)!=null&&x.attach)h0(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){var y;f.remove(p),(y=p.__r3f)!=null&&y.root&&YC(gu(p),p)}const w=(M=p.__r3f)==null?void 0:M.primitive,E=!w&&(m===void 0?p.dispose!==null:m);if(!w){var _;s((_=p.__r3f)==null?void 0:_.objects,p,E),s(p.children,p,E)}if(delete p.__r3f,E&&p.dispose&&p.type!=="Scene"){const A=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?Zd.unstable_scheduleCallback(Zd.unstable_IdlePriority,A):A()}Ma(f)}}function c(f,p,m,g){var x;const M=(x=f.__r3f)==null?void 0:x.parent;if(!M)return;const y=t(p,m,f.__r3f.root);if(f.children){for(const _ of f.children)_.__r3f&&n(y,_);f.children=f.children.filter(_=>!_.__r3f)}f.__r3f.objects.forEach(_=>n(y,_)),f.__r3f.objects=[],f.__r3f.autoRemovedBeforeAppend||o(M,f),y.parent&&(y.__r3f.autoRemovedBeforeAppend=!0),n(M,y),y.raycast&&y.__r3f.eventCount&&gu(y).getState().internal.interaction.push(y),[g,g.alternate].forEach(_=>{_!==null&&(_.stateNode=y,_.ref&&(typeof _.ref=="function"?_.ref(y):_.ref.current=y))})}const u=()=>console.warn("Text is not allowed in the R3F tree! This could be stray whitespace or characters.");return{reconciler:UC({createInstance:t,removeChild:o,appendChild:n,appendInitialChild:n,insertBefore:r,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(f,p)=>{if(!p)return;const m=f.getState().scene;m.__r3f&&(m.__r3f.root=f,n(m,p))},removeChildFromContainer:(f,p)=>{p&&o(f.getState().scene,p)},insertInContainerBefore:(f,p,m)=>{if(!p||!m)return;const g=f.getState().scene;g.__r3f&&r(g,p,m)},getRootHostContext:()=>null,getChildHostContext:f=>f,finalizeInitialChildren(f){var p;return!!((p=f?.__r3f)!=null?p:{}).handlers},prepareUpdate(f,p,m,g){var x;if(((x=f?.__r3f)!=null?x:{}).primitive&&g.object&&g.object!==f)return[!0];{const{args:y=[],children:_,...w}=g,{args:E=[],children:A,...N}=m;if(!Array.isArray(y))throw new Error("R3F: the args prop must be an array!");if(y.some((I,B)=>I!==E[B]))return[!0];const P=cy(f,w,N,!0);return P.changes.length?[!1,P]:null}},commitUpdate(f,[p,m],g,x,M,y){p?c(f,g,M,y):qf(f,m)},commitMount(f,p,m,g){var x;const M=(x=f.__r3f)!=null?x:{};f.raycast&&M.handlers&&M.eventCount&&gu(f).getState().internal.interaction.push(f)},getPublicInstance:f=>f,prepareForCommit:()=>null,preparePortalMount:f=>Sa(f.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(f){var p;const{attach:m,parent:g}=(p=f.__r3f)!=null?p:{};m&&g&&h0(g,f,m),f.isObject3D&&(f.visible=!1),Ma(f)},unhideInstance(f,p){var m;const{attach:g,parent:x}=(m=f.__r3f)!=null?m:{};g&&x&&Xf(x,f,g),(f.isObject3D&&p.visible==null||p.visible)&&(f.visible=!0),Ma(f)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():Ra.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Vt.fun(performance.now)?performance.now:Vt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Vt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Vt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:qf}}var o0,l0;const Wf=i=>"colorSpace"in i||"outputColorSpace"in i,iy=()=>{var i;return(i=Vp.ColorManagement)!=null?i:null},ry=i=>i&&i.isOrthographicCamera,zC=i=>i&&i.hasOwnProperty("current"),Xa=typeof window<"u"&&((o0=window.document)!=null&&o0.createElement||((l0=window.navigator)==null?void 0:l0.product)==="ReactNative")?he.useLayoutEffect:he.useEffect;function sy(i){const e=he.useRef(i);return Xa(()=>void(e.current=i),[i]),e}function kC({set:i}){return Xa(()=>(i(new Promise(()=>null)),()=>i(!1)),[i]),null}class ay extends he.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}ay.getDerivedStateFromError=()=>({error:!0});const oy="__default",c0=new Map,HC=i=>i&&!!i.memoized&&!!i.changes;function ly(i){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(i)?Math.min(Math.max(i[0],t),i[1]):i}const Eo=i=>{var e;return(e=i.__r3f)==null?void 0:e.root.getState()};function gu(i){let e=i.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const Vt={obj:i=>i===Object(i)&&!Vt.arr(i)&&typeof i!="function",fun:i=>typeof i=="function",str:i=>typeof i=="string",num:i=>typeof i=="number",boo:i=>typeof i=="boolean",und:i=>i===void 0,arr:i=>Array.isArray(i),equ(i,e,{arrays:t="shallow",objects:n="reference",strict:r=!0}={}){if(typeof i!=typeof e||!!i!=!!e)return!1;if(Vt.str(i)||Vt.num(i)||Vt.boo(i))return i===e;const s=Vt.obj(i);if(s&&n==="reference")return i===e;const o=Vt.arr(i);if(o&&t==="reference")return i===e;if((o||s)&&i===e)return!0;let c;for(c in i)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in r?e:i)if(!Vt.equ(i[c],e[c],{strict:r,objects:"reference"}))return!1}else for(c in r?e:i)if(i[c]!==e[c])return!1;if(Vt.und(c)){if(o&&i.length===0&&e.length===0||s&&Object.keys(i).length===0&&Object.keys(e).length===0)return!0;if(i!==e)return!1}return!0}};function VC(i){const e={nodes:{},materials:{}};return i&&i.traverse(t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material)}),e}function GC(i){i.dispose&&i.type!=="Scene"&&i.dispose();for(const e in i)e.dispose==null||e.dispose(),delete i[e]}function Sa(i,e){const t=i;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},i}function jd(i,e){let t=i;if(e.includes("-")){const n=e.split("-"),r=n.pop();return t=n.reduce((s,o)=>s[o],i),{target:t,key:r}}else return{target:t,key:e}}const u0=/-\d+$/;function Xf(i,e,t){if(Vt.str(t)){if(u0.test(t)){const s=t.replace(u0,""),{target:o,key:c}=jd(i,s);Array.isArray(o[c])||(o[c]=[])}const{target:n,key:r}=jd(i,t);e.__r3f.previousAttach=n[r],n[r]=e}else e.__r3f.previousAttach=t(i,e)}function h0(i,e,t){var n,r;if(Vt.str(t)){const{target:s,key:o}=jd(i,t),c=e.__r3f.previousAttach;c===void 0?delete s[o]:s[o]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(i,e);(r=e.__r3f)==null||delete r.previousAttach}function cy(i,{children:e,key:t,ref:n,...r},{children:s,key:o,ref:c,...u}={},h=!1){const f=i.__r3f,p=Object.entries(r),m=[];if(h){const x=Object.keys(u);for(let M=0;M<x.length;M++)r.hasOwnProperty(x[M])||p.unshift([x[M],oy+"remove"])}p.forEach(([x,M])=>{var y;if((y=i.__r3f)!=null&&y.primitive&&x==="object"||Vt.equ(M,u[x]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(x))return m.push([x,M,!0,[]]);let _=[];x.includes("-")&&(_=x.split("-")),m.push([x,M,!1,_]);for(const w in r){const E=r[w];w.startsWith(`${x}-`)&&m.push([w,E,!1,w.split("-")])}});const g={...r};return f!=null&&f.memoizedProps&&f!=null&&f.memoizedProps.args&&(g.args=f.memoizedProps.args),f!=null&&f.memoizedProps&&f!=null&&f.memoizedProps.attach&&(g.attach=f.memoizedProps.attach),{memoized:g,changes:m}}const WC=typeof process<"u"&&!1;function qf(i,e){var t;const n=i.__r3f,r=n?.root,s=r==null||r.getState==null?void 0:r.getState(),{memoized:o,changes:c}=HC(e)?e:cy(i,e),u=n?.eventCount;i.__r3f&&(i.__r3f.memoizedProps=o);for(let f=0;f<c.length;f++){let[p,m,g,x]=c[f];if(Wf(i)){const w="srgb",E="srgb-linear";p==="encoding"?(p="colorSpace",m=m===3001?w:E):p==="outputEncoding"&&(p="outputColorSpace",m=m===3001?w:E)}let M=i,y=M[p];if(x.length&&(y=x.reduce((_,w)=>_[w],i),!(y&&y.set))){const[_,...w]=x.reverse();M=w.reverse().reduce((E,A)=>E[A],i),p=_}if(m===oy+"remove")if(M.constructor){let _=c0.get(M.constructor);_||(_=new M.constructor,c0.set(M.constructor,_)),m=_[p]}else m=0;if(g&&n)m?n.handlers[p]=m:delete n.handlers[p],n.eventCount=Object.keys(n.handlers).length;else if(y&&y.set&&(y.copy||y instanceof Es)){if(Array.isArray(m))y.fromArray?y.fromArray(m):y.set(...m);else if(y.copy&&m&&m.constructor&&(WC?y.constructor.name===m.constructor.name:y.constructor===m.constructor))y.copy(m);else if(m!==void 0){const _=y instanceof Pe;!_&&y.setScalar?y.setScalar(m):y instanceof Es&&m instanceof Es?y.mask=m.mask:y.set(m),!iy()&&s&&!s.linear&&_&&y.convertSRGBToLinear()}}else if(M[p]=m,M[p]instanceof Bt&&M[p].format===jn&&M[p].type===un&&s){const _=M[p];Wf(_)&&Wf(s.gl)?_.colorSpace=s.gl.outputColorSpace:_.encoding=s.gl.outputEncoding}Ma(i)}if(n&&n.parent&&i.raycast&&u!==n.eventCount){const f=gu(i).getState().internal,p=f.interaction.indexOf(i);p>-1&&f.interaction.splice(p,1),n.eventCount&&f.interaction.push(i)}return!(c.length===1&&c[0][0]==="onUpdate")&&c.length&&(t=i.__r3f)!=null&&t.parent&&Jd(i),i}function Ma(i){var e,t;const n=(e=i.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function Jd(i){i.onUpdate==null||i.onUpdate(i)}function XC(i,e){i.manual||(ry(i)?(i.left=e.width/-2,i.right=e.width/2,i.top=e.height/2,i.bottom=e.height/-2):i.aspect=e.width/e.height,i.updateProjectionMatrix(),i.updateMatrixWorld())}function su(i){return(i.eventObject||i.object).uuid+"/"+i.index+i.instanceId}function qC(){var i;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return Ra.DefaultEventPriority;switch((i=e.event)==null?void 0:i.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return Ra.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return Ra.ContinuousEventPriority;default:return Ra.DefaultEventPriority}}function uy(i,e,t,n){const r=t.get(e);r&&(t.delete(e),t.size===0&&(i.delete(n),r.target.releasePointerCapture(n)))}function YC(i,e){const{internal:t}=i.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,r)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(r)}),t.capturedMap.forEach((n,r)=>{uy(t.capturedMap,e,n,r)})}function ZC(i){function e(u){const{internal:h}=i.getState(),f=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(f*f+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(f=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+f]}))}function n(u,h){const f=i.getState(),p=new Set,m=[],g=h?h(f.internal.interaction):f.internal.interaction;for(let _=0;_<g.length;_++){const w=Eo(g[_]);w&&(w.raycaster.camera=void 0)}f.previousRoot||f.events.compute==null||f.events.compute(u,f);function x(_){const w=Eo(_);if(!w||!w.events.enabled||w.raycaster.camera===null)return[];if(w.raycaster.camera===void 0){var E;w.events.compute==null||w.events.compute(u,w,(E=w.previousRoot)==null?void 0:E.getState()),w.raycaster.camera===void 0&&(w.raycaster.camera=null)}return w.raycaster.camera?w.raycaster.intersectObject(_,!0):[]}let M=g.flatMap(x).sort((_,w)=>{const E=Eo(_.object),A=Eo(w.object);return!E||!A?_.distance-w.distance:A.events.priority-E.events.priority||_.distance-w.distance}).filter(_=>{const w=su(_);return p.has(w)?!1:(p.add(w),!0)});f.events.filter&&(M=f.events.filter(M,f));for(const _ of M){let w=_.object;for(;w;){var y;(y=w.__r3f)!=null&&y.eventCount&&m.push({..._,eventObject:w}),w=w.parent}}if("pointerId"in u&&f.internal.capturedMap.has(u.pointerId))for(let _ of f.internal.capturedMap.get(u.pointerId).values())p.has(su(_.intersection))||m.push(_.intersection);return m}function r(u,h,f,p){const m=i.getState();if(u.length){const g={stopped:!1};for(const x of u){const M=Eo(x.object)||m,{raycaster:y,pointer:_,camera:w,internal:E}=M,A=new D(_.x,_.y,0).unproject(w),N=b=>{var F,W;return(F=(W=E.capturedMap.get(b))==null?void 0:W.has(x.eventObject))!=null?F:!1},P=b=>{const F={intersection:x,target:h.target};E.capturedMap.has(b)?E.capturedMap.get(b).set(x.eventObject,F):E.capturedMap.set(b,new Map([[x.eventObject,F]])),h.target.setPointerCapture(b)},I=b=>{const F=E.capturedMap.get(b);F&&uy(E.capturedMap,x.eventObject,F,b)};let B={};for(let b in h){let F=h[b];typeof F!="function"&&(B[b]=F)}let C={...x,...B,pointer:_,intersections:u,stopped:g.stopped,delta:f,unprojectedPoint:A,ray:y.ray,camera:w,stopPropagation(){const b="pointerId"in h&&E.capturedMap.get(h.pointerId);if((!b||b.has(x.eventObject))&&(C.stopped=g.stopped=!0,E.hovered.size&&Array.from(E.hovered.values()).find(F=>F.eventObject===x.eventObject))){const F=u.slice(0,u.indexOf(x));s([...F,x])}},target:{hasPointerCapture:N,setPointerCapture:P,releasePointerCapture:I},currentTarget:{hasPointerCapture:N,setPointerCapture:P,releasePointerCapture:I},nativeEvent:h};if(p(C),g.stopped===!0)break}}return u}function s(u){const{internal:h}=i.getState();for(const f of h.hovered.values())if(!u.length||!u.find(p=>p.object===f.object&&p.index===f.index&&p.instanceId===f.instanceId)){const m=f.eventObject.__r3f,g=m?.handlers;if(h.hovered.delete(su(f)),m!=null&&m.eventCount){const x={...f,intersections:u};g.onPointerOut==null||g.onPointerOut(x),g.onPointerLeave==null||g.onPointerLeave(x)}}}function o(u,h){for(let f=0;f<h.length;f++){const p=h[f].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:f}=i.getState();"pointerId"in h&&f.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{f.capturedMap.has(h.pointerId)&&(f.capturedMap.delete(h.pointerId),s([]))})}}return function(f){const{onPointerMissed:p,internal:m}=i.getState();m.lastEvent.current=f;const g=u==="onPointerMove",x=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",y=n(f,g?t:void 0),_=x?e(f):0;u==="onPointerDown"&&(m.initialClick=[f.offsetX,f.offsetY],m.initialHits=y.map(E=>E.eventObject)),x&&!y.length&&_<=2&&(o(f,m.interaction),p&&p(f)),g&&s(y);function w(E){const A=E.eventObject,N=A.__r3f,P=N?.handlers;if(N!=null&&N.eventCount)if(g){if(P.onPointerOver||P.onPointerEnter||P.onPointerOut||P.onPointerLeave){const I=su(E),B=m.hovered.get(I);B?B.stopped&&E.stopPropagation():(m.hovered.set(I,E),P.onPointerOver==null||P.onPointerOver(E),P.onPointerEnter==null||P.onPointerEnter(E))}P.onPointerMove==null||P.onPointerMove(E)}else{const I=P[u];I?(!x||m.initialHits.includes(A))&&(o(f,m.interaction.filter(B=>!m.initialHits.includes(B))),I(E)):x&&m.initialHits.includes(A)&&o(f,m.interaction.filter(B=>!m.initialHits.includes(B)))}}r(y,f,_,w)}}return{handlePointer:c}}const hy=i=>!!(i!=null&&i.render),fy=he.createContext(null),jC=(i,e)=>{const t=PC((c,u)=>{const h=new D,f=new D,p=new D;function m(_=u().camera,w=f,E=u().size){const{width:A,height:N,top:P,left:I}=E,B=A/N;w instanceof D?p.copy(w):p.set(...w);const C=_.getWorldPosition(h).distanceTo(p);if(ry(_))return{width:A/_.zoom,height:N/_.zoom,top:P,left:I,factor:1,distance:C,aspect:B};{const b=_.fov*Math.PI/180,F=2*Math.tan(b/2)*C,W=F*(A/N);return{width:W,height:F,top:P,left:I,factor:A/W,distance:C,aspect:B}}}let g;const x=_=>c(w=>({performance:{...w.performance,current:_}})),M=new oe;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(_=1)=>i(u(),_),advance:(_,w)=>e(_,w,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new zp,pointer:M,mouse:M,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=u();g&&clearTimeout(g),_.performance.current!==_.performance.min&&x(_.performance.min),g=setTimeout(()=>x(u().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:_=>c(w=>({...w,events:{...w.events,..._}})),setSize:(_,w,E,A,N)=>{const P=u().camera,I={width:_,height:w,top:A||0,left:N||0,updateStyle:E};c(B=>({size:I,viewport:{...B.viewport,...m(P,f,I)}}))},setDpr:_=>c(w=>{const E=ly(_);return{viewport:{...w.viewport,dpr:E,initialDpr:w.viewport.initialDpr||E}}}),setFrameloop:(_="always")=>{const w=u().clock;w.stop(),w.elapsedTime=0,_!=="never"&&(w.start(),w.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:he.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(_,w,E)=>{const A=u().internal;return A.priority=A.priority+(w>0?1:0),A.subscribers.push({ref:_,priority:w,store:E}),A.subscribers=A.subscribers.sort((N,P)=>N.priority-P.priority),()=>{const N=u().internal;N!=null&&N.subscribers&&(N.priority=N.priority-(w>0?1:0),N.subscribers=N.subscribers.filter(P=>P.ref!==_))}}}}}),n=t.getState();let r=n.size,s=n.viewport.dpr,o=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:f,set:p}=t.getState();if(u.width!==r.width||u.height!==r.height||h.dpr!==s){var m;r=u,s=h.dpr,XC(c,u),f.setPixelRatio(h.dpr);const g=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&f.domElement instanceof HTMLCanvasElement;f.setSize(u.width,u.height,g)}c!==o&&(o=c,p(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>i(c)),t};let au,JC=new Set,KC=new Set,QC=new Set;function Yf(i,e){if(i.size)for(const{callback:t}of i.values())t(e)}function wo(i,e){switch(i){case"before":return Yf(JC,e);case"after":return Yf(KC,e);case"tail":return Yf(QC,e)}}let Zf,jf;function Jf(i,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof i=="number"&&(n=i-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=i),Zf=e.internal.subscribers,au=0;au<Zf.length;au++)jf=Zf[au],jf.ref.current(jf.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function $C(i){let e=!1,t=!1,n,r,s;function o(h){r=requestAnimationFrame(o),e=!0,n=0,wo("before",h),t=!0;for(const p of i.values()){var f;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((f=s.gl.xr)!=null&&f.isPresenting)&&(n+=Jf(h,s))}if(t=!1,wo("after",h),n===0)return wo("tail",h),e=!1,cancelAnimationFrame(r)}function c(h,f=1){var p;if(!h)return i.forEach(m=>c(m.store.getState(),f));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(f>1?h.internal.frames=Math.min(60,h.internal.frames+f):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(o)))}function u(h,f=!0,p,m){if(f&&wo("before",h),p)Jf(h,p,m);else for(const g of i.values())Jf(h,g.store.getState());f&&wo("after",h)}return{loop:o,invalidate:c,advance:u}}function eR(i){const e=he.useRef(null);return Xa(()=>void(e.current=i.current.__r3f),[i]),e}function dy(){const i=he.useContext(fy);if(!i)throw new Error("R3F: Hooks can only be used within the Canvas component!");return i}function ju(i=t=>t,e){return dy()(i,e)}function hl(i,e=0){const t=dy(),n=t.getState().internal.subscribe,r=sy(i);return Xa(()=>n(r,e,t),[e,n,t]),null}const f0=new WeakMap;function py(i,e){return function(t,...n){let r=f0.get(t);return r||(r=new t,f0.set(t,r)),i&&i(r),Promise.all(n.map(s=>new Promise((o,c)=>r.load(s,u=>{u.scene&&Object.assign(u,VC(u.scene)),o(u)},e,u=>c(new Error(`Could not load ${s}: ${u?.message}`))))))}}function Ns(i,e,t,n){const r=Array.isArray(e)?e:[e],s=NC(py(t,n),[i,...r],{equal:Vt.equ});return Array.isArray(e)?s:s[0]}Ns.preload=function(i,e,t){const n=Array.isArray(e)?e:[e];return FC(py(t),[i,...n])};Ns.clear=function(i,e){const t=Array.isArray(e)?e:[e];return OC([i,...t])};const Fa=new Map,{invalidate:d0,advance:p0}=$C(Fa),{reconciler:yu,applyProps:va}=BC(Fa,qC),_a={objects:"shallow",strict:!1},tR=(i,e)=>{const t=typeof i=="function"?i(e):i;return hy(t)?t:new ix({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...i})};function nR(i,e){const t=typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement;if(e){const{width:n,height:r,top:s,left:o,updateStyle:c=t}=e;return{width:n,height:r,top:s,left:o,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement&&i.parentElement){const{width:n,height:r,top:s,left:o}=i.parentElement.getBoundingClientRect();return{width:n,height:r,top:s,left:o,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&i instanceof OffscreenCanvas)return{width:i.width,height:i.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function iR(i){const e=Fa.get(i),t=e?.fiber,n=e?.store;e&&console.warn("R3F.createRoot should only be called once!");const r=typeof reportError=="function"?reportError:console.error,s=n||jC(d0,p0),o=t||yu.createContainer(s,Ra.ConcurrentRoot,null,!1,null,"",r,null);e||Fa.set(i,{fiber:o,store:s});let c,u=!1,h;return{configure(f={}){let{gl:p,size:m,scene:g,events:x,onCreated:M,shadows:y=!1,linear:_=!1,flat:w=!1,legacy:E=!1,orthographic:A=!1,frameloop:N="always",dpr:P=[1,2],performance:I,raycaster:B,camera:C,onPointerMissed:b}=f,F=s.getState(),W=F.gl;F.gl||F.set({gl:W=tR(p,i)});let k=F.raycaster;k||F.set({raycaster:k=new Zx});const{params:j,...K}=B||{};if(Vt.equ(K,k,_a)||va(k,{...K}),Vt.equ(j,k.params,_a)||va(k,{params:{...k.params,...j}}),!F.camera||F.camera===h&&!Vt.equ(h,C,_a)){h=C;const Z=C instanceof ka,fe=Z?C:A?new Is(0,0,0,0,.1,1e3):new $t(75,0,.1,1e3);Z||(fe.position.z=5,C&&(va(fe,C),("aspect"in C||"left"in C||"right"in C||"bottom"in C||"top"in C)&&(fe.manual=!0,fe.updateProjectionMatrix())),!F.camera&&!(C!=null&&C.rotation)&&fe.lookAt(0,0,0)),F.set({camera:fe}),k.camera=fe}if(!F.scene){let Z;g instanceof Da?Z=g:(Z=new Da,g&&va(Z,g)),F.set({scene:Sa(Z)})}if(!F.xr){var le;const Z=(Le,te)=>{const me=s.getState();me.frameloop!=="never"&&p0(Le,!0,me,te)},fe=()=>{const Le=s.getState();Le.gl.xr.enabled=Le.gl.xr.isPresenting,Le.gl.xr.setAnimationLoop(Le.gl.xr.isPresenting?Z:null),Le.gl.xr.isPresenting||d0(Le)},we={connect(){const Le=s.getState().gl;Le.xr.addEventListener("sessionstart",fe),Le.xr.addEventListener("sessionend",fe)},disconnect(){const Le=s.getState().gl;Le.xr.removeEventListener("sessionstart",fe),Le.xr.removeEventListener("sessionend",fe)}};typeof((le=W.xr)==null?void 0:le.addEventListener)=="function"&&we.connect(),F.set({xr:we})}if(W.shadowMap){const Z=W.shadowMap.enabled,fe=W.shadowMap.type;if(W.shadowMap.enabled=!!y,Vt.boo(y))W.shadowMap.type=Ro;else if(Vt.str(y)){var ge;const we={basic:O0,percentage:Su,soft:Ro,variance:Ri};W.shadowMap.type=(ge=we[y])!=null?ge:Ro}else Vt.obj(y)&&Object.assign(W.shadowMap,y);(Z!==W.shadowMap.enabled||fe!==W.shadowMap.type)&&(W.shadowMap.needsUpdate=!0)}const H=iy();H&&("enabled"in H?H.enabled=!E:"legacyMode"in H&&(H.legacyMode=E)),u||va(W,{outputEncoding:_?3e3:3001,toneMapping:w?Li:ep}),F.legacy!==E&&F.set(()=>({legacy:E})),F.linear!==_&&F.set(()=>({linear:_})),F.flat!==w&&F.set(()=>({flat:w})),p&&!Vt.fun(p)&&!hy(p)&&!Vt.equ(p,W,_a)&&va(W,p),x&&!F.events.handlers&&F.set({events:x(s)});const Q=nR(i,m);return Vt.equ(Q,F.size,_a)||F.setSize(Q.width,Q.height,Q.updateStyle,Q.top,Q.left),P&&F.viewport.dpr!==ly(P)&&F.setDpr(P),F.frameloop!==N&&F.setFrameloop(N),F.onPointerMissed||F.set({onPointerMissed:b}),I&&!Vt.equ(I,F.performance,_a)&&F.set(Z=>({performance:{...Z.performance,...I}})),c=M,u=!0,this},render(f){return u||this.configure(),yu.updateContainer(vt.jsx(rR,{store:s,children:f,onCreated:c,rootElement:i}),o,null,()=>{}),s},unmount(){my(i)}}}function rR({store:i,children:e,onCreated:t,rootElement:n}){return Xa(()=>{const r=i.getState();r.set(s=>({internal:{...s.internal,active:!0}})),t&&t(r),i.getState().events.connected||r.events.connect==null||r.events.connect(n)},[]),vt.jsx(fy.Provider,{value:i,children:e})}function my(i,e){const t=Fa.get(i),n=t?.fiber;if(n){const r=t?.store.getState();r&&(r.internal.active=!1),yu.updateContainer(null,n,null,()=>{r&&setTimeout(()=>{try{var s,o,c,u;r.events.disconnect==null||r.events.disconnect(),(s=r.gl)==null||(o=s.renderLists)==null||o.dispose==null||o.dispose(),(c=r.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=r.gl)!=null&&u.xr&&r.xr.disconnect(),GC(r),Fa.delete(i)}catch{}},500)})}}yu.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:he.version});function Kd(i,e,t){var n,r,s,o,c;e==null&&(e=100);function u(){var f=Date.now()-o;f<e&&f>=0?n=setTimeout(u,e-f):(n=null,t||(c=i.apply(s,r),s=r=null))}var h=function(){s=this,r=arguments,o=Date.now();var f=t&&!n;return n||(n=setTimeout(u,e)),f&&(c=i.apply(s,r),s=r=null),c};return h.clear=function(){n&&(clearTimeout(n),n=null)},h.flush=function(){n&&(c=i.apply(s,r),s=r=null,clearTimeout(n),n=null)},h}Kd.debounce=Kd;var sR=Kd;const m0=D0(sR);function aR(i){let{debounce:e,scroll:t,polyfill:n,offsetSize:r}=i===void 0?{debounce:0,scroll:!1,offsetSize:!1}:i;const s=n||(typeof window>"u"?class{}:window.ResizeObserver);if(!s)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[o,c]=he.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),u=he.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:o}),h=e?typeof e=="number"?e:e.scroll:null,f=e?typeof e=="number"?e:e.resize:null,p=he.useRef(!1);he.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,g,x]=he.useMemo(()=>{const w=()=>{if(!u.current.element)return;const{left:E,top:A,width:N,height:P,bottom:I,right:B,x:C,y:b}=u.current.element.getBoundingClientRect(),F={left:E,top:A,width:N,height:P,bottom:I,right:B,x:C,y:b};u.current.element instanceof HTMLElement&&r&&(F.height=u.current.element.offsetHeight,F.width=u.current.element.offsetWidth),Object.freeze(F),p.current&&!uR(u.current.lastBounds,F)&&c(u.current.lastBounds=F)};return[w,f?m0(w,f):w,h?m0(w,h):w]},[c,r,h,f]);function M(){u.current.scrollContainers&&(u.current.scrollContainers.forEach(w=>w.removeEventListener("scroll",x,!0)),u.current.scrollContainers=null),u.current.resizeObserver&&(u.current.resizeObserver.disconnect(),u.current.resizeObserver=null)}function y(){u.current.element&&(u.current.resizeObserver=new s(x),u.current.resizeObserver.observe(u.current.element),t&&u.current.scrollContainers&&u.current.scrollContainers.forEach(w=>w.addEventListener("scroll",x,{capture:!0,passive:!0})))}const _=w=>{!w||w===u.current.element||(M(),u.current.element=w,u.current.scrollContainers=gy(w),y())};return lR(x,!!t),oR(g),he.useEffect(()=>{M(),y()},[t,x,g]),he.useEffect(()=>M,[]),[_,o,m]}function oR(i){he.useEffect(()=>{const e=i;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[i])}function lR(i,e){he.useEffect(()=>{if(e){const t=i;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[i,e])}function gy(i){const e=[];if(!i||i===document.body)return e;const{overflow:t,overflowX:n,overflowY:r}=window.getComputedStyle(i);return[t,n,r].some(s=>s==="auto"||s==="scroll")&&e.push(i),[...e,...gy(i.parentElement)]}const cR=["x","y","top","bottom","left","right","width","height"],uR=(i,e)=>cR.every(t=>i[t]===e[t]);var hR=Object.defineProperty,fR=Object.defineProperties,dR=Object.getOwnPropertyDescriptors,g0=Object.getOwnPropertySymbols,pR=Object.prototype.hasOwnProperty,mR=Object.prototype.propertyIsEnumerable,v0=(i,e,t)=>e in i?hR(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,_0=(i,e)=>{for(var t in e||(e={}))pR.call(e,t)&&v0(i,t,e[t]);if(g0)for(var t of g0(e))mR.call(e,t)&&v0(i,t,e[t]);return i},gR=(i,e)=>fR(i,dR(e)),x0,y0;typeof window<"u"&&((x0=window.document)!=null&&x0.createElement||((y0=window.navigator)==null?void 0:y0.product)==="ReactNative")?he.useLayoutEffect:he.useEffect;function vy(i,e,t){if(!i)return;if(t(i)===!0)return i;let n=i.child;for(;n;){const r=vy(n,e,t);if(r)return r;n=n.sibling}}function _y(i){try{return Object.defineProperties(i,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return i}}const S0=console.error;console.error=function(){const i=[...arguments].join("");if(i?.startsWith("Warning:")&&i.includes("useContext")){console.error=S0;return}return S0.apply(this,arguments)};const Gp=_y(he.createContext(null));class xy extends he.Component{render(){return he.createElement(Gp.Provider,{value:this._reactInternals},this.props.children)}}function vR(){const i=he.useContext(Gp);if(i===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=he.useId();return he.useMemo(()=>{for(const n of[i,i?.alternate]){if(!n)continue;const r=vy(n,!1,s=>{let o=s.memoizedState;for(;o;){if(o.memoizedState===e)return!0;o=o.next}});if(r)return r}},[i,e])}function _R(){const i=vR(),[e]=he.useState(()=>new Map);e.clear();let t=i;for(;t;){if(t.type&&typeof t.type=="object"){const r=t.type._context===void 0&&t.type.Provider===t.type?t.type:t.type._context;r&&r!==Gp&&!e.has(r)&&e.set(r,he.useContext(_y(r)))}t=t.return}return e}function xR(){const i=_R();return he.useMemo(()=>Array.from(i.keys()).reduce((e,t)=>n=>he.createElement(e,null,he.createElement(t.Provider,gR(_0({},n),{value:i.get(t)}))),e=>he.createElement(xy,_0({},e))),[i])}const Kf={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function yR(i){const{handlePointer:e}=ZC(i);return{priority:1,enabled:!0,compute(t,n,r){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Kf).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:r}=i.getState();(t=r.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(r.lastEvent.current)},connect:t=>{var n;const{set:r,events:s}=i.getState();s.disconnect==null||s.disconnect(),r(o=>({events:{...o.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([o,c])=>{const[u,h]=Kf[o];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=i.getState();if(n.connected){var r;Object.entries((r=n.handlers)!=null?r:[]).forEach(([s,o])=>{if(n&&n.connected instanceof HTMLElement){const[c]=Kf[s];n.connected.removeEventListener(c,o)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}const SR=he.forwardRef(function({children:e,fallback:t,resize:n,style:r,gl:s,events:o=yR,eventSource:c,eventPrefix:u,shadows:h,linear:f,flat:p,legacy:m,orthographic:g,frameloop:x,dpr:M,performance:y,raycaster:_,camera:w,scene:E,onPointerMissed:A,onCreated:N,...P},I){he.useMemo(()=>ny(bC),[]);const B=xR(),[C,b]=aR({scroll:!0,debounce:{scroll:50,resize:0},...n}),F=he.useRef(null),W=he.useRef(null);he.useImperativeHandle(I,()=>F.current);const k=sy(A),[j,K]=he.useState(!1),[le,ge]=he.useState(!1);if(j)throw j;if(le)throw le;const H=he.useRef(null);Xa(()=>{const Z=F.current;b.width>0&&b.height>0&&Z&&(H.current||(H.current=iR(Z)),H.current.configure({gl:s,events:o,shadows:h,linear:f,flat:p,legacy:m,orthographic:g,frameloop:x,dpr:M,performance:y,raycaster:_,camera:w,scene:E,size:b,onPointerMissed:(...fe)=>k.current==null?void 0:k.current(...fe),onCreated:fe=>{fe.events.connect==null||fe.events.connect(c?zC(c)?c.current:c:W.current),u&&fe.setEvents({compute:(we,Le)=>{const te=we[u+"X"],me=we[u+"Y"];Le.pointer.set(te/Le.size.width*2-1,-(me/Le.size.height)*2+1),Le.raycaster.setFromCamera(Le.pointer,Le.camera)}}),N?.(fe)}}),H.current.render(vt.jsx(B,{children:vt.jsx(ay,{set:ge,children:vt.jsx(he.Suspense,{fallback:vt.jsx(kC,{set:K}),children:e})})})))}),he.useEffect(()=>{const Z=F.current;if(Z)return()=>my(Z)},[]);const Q=c?"none":"auto";return vt.jsx("div",{ref:W,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:Q,...r},...P,children:vt.jsx("div",{ref:C,style:{width:"100%",height:"100%"},children:vt.jsx("canvas",{ref:F,style:{display:"block"},children:t})})})}),MR=he.forwardRef(function(e,t){return vt.jsx(xy,{children:vt.jsx(SR,{...e,ref:t})})});/**
 * postprocessing v6.35.6 build Fri Jul 05 2024
 * https://github.com/pmndrs/postprocessing
 * Copyright 2015-2024 Raoul van Rüschen
 * @license Zlib
 */var Qf=1/1e3,ER=1e3,wR=class{constructor(){this.startTime=performance.now(),this.previousTime=0,this.currentTime=0,this._delta=0,this._elapsed=0,this._fixedDelta=1e3/60,this.timescale=1,this.useFixedDelta=!1,this._autoReset=!1}get autoReset(){return this._autoReset}set autoReset(i){typeof document<"u"&&document.hidden!==void 0&&(i?document.addEventListener("visibilitychange",this):document.removeEventListener("visibilitychange",this),this._autoReset=i)}get delta(){return this._delta*Qf}get fixedDelta(){return this._fixedDelta*Qf}set fixedDelta(i){this._fixedDelta=i*ER}get elapsed(){return this._elapsed*Qf}update(i){this.useFixedDelta?this._delta=this.fixedDelta:(this.previousTime=this.currentTime,this.currentTime=(i!==void 0?i:performance.now())-this.startTime,this._delta=this.currentTime-this.previousTime),this._delta*=this.timescale,this._elapsed+=this._delta}reset(){this._delta=0,this._elapsed=0,this.currentTime=performance.now()-this.startTime}getDelta(){return this.delta}getElapsed(){return this.elapsed}handleEvent(i){document.hidden||(this.currentTime=performance.now()-this.startTime)}dispose(){this.autoReset=!1}},TR=new ka,Ur=null;function AR(){if(Ur===null){const i=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),e=new Float32Array([0,0,2,0,0,2]);Ur=new ut,Ur.setAttribute!==void 0?(Ur.setAttribute("position",new St(i,3)),Ur.setAttribute("uv",new St(e,2))):(Ur.addAttribute("position",new St(i,3)),Ur.addAttribute("uv",new St(e,2)))}return Ur}var $n=class yy{constructor(e="Pass",t=new Da,n=TR){this.name=e,this.renderer=null,this.scene=t,this.camera=n,this.screen=null,this.rtt=!0,this.needsSwap=!0,this.needsDepthTexture=!1,this.enabled=!0}get renderToScreen(){return!this.rtt}set renderToScreen(e){if(this.rtt===e){const t=this.fullscreenMaterial;t!==null&&(t.needsUpdate=!0),this.rtt=!e}}set mainScene(e){}set mainCamera(e){}setRenderer(e){this.renderer=e}isEnabled(){return this.enabled}setEnabled(e){this.enabled=e}get fullscreenMaterial(){return this.screen!==null?this.screen.material:null}set fullscreenMaterial(e){let t=this.screen;t!==null?t.material=e:(t=new an(AR(),e),t.frustumCulled=!1,this.scene===null&&(this.scene=new Da),this.scene.add(t),this.screen=t)}getFullscreenMaterial(){return this.fullscreenMaterial}setFullscreenMaterial(e){this.fullscreenMaterial=e}getDepthTexture(){return null}setDepthTexture(e,t=Ji){}render(e,t,n,r,s){throw new Error("Render method not implemented!")}setSize(e,t){}initialize(e,t,n){}dispose(){for(const e of Object.keys(this)){const t=this[e];(t instanceof tn||t instanceof vn||t instanceof Bt||t instanceof yy)&&this[e].dispose()}}},bR=class extends $n{constructor(){super("ClearMaskPass",null,null),this.needsSwap=!1}render(i,e,t,n,r){const s=i.state.buffers.stencil;s.setLocked(!1),s.setTest(!1)}},CR=Number(Cs.replace(/\D+/g,""));function fl(i){return CR<154?i.replace("colorspace_fragment","encodings_fragment"):i}var RR=`#include <common>
#include <dithering_pars_fragment>
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
uniform float opacity;varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);gl_FragColor=opacity*texel;
#include <colorspace_fragment>
#include <dithering_fragment>
}`,dl="varying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}",Sy=class extends nn{constructor(){super({name:"CopyMaterial",uniforms:{inputBuffer:new Ze(null),opacity:new Ze(1)},blending:pn,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:RR,vertexShader:dl}),this.fragmentShader=fl(this.fragmentShader)}set inputBuffer(i){this.uniforms.inputBuffer.value=i}setInputBuffer(i){this.uniforms.inputBuffer.value=i}getOpacity(i){return this.uniforms.opacity.value}setOpacity(i){this.uniforms.opacity.value=i}},PR=class extends $n{constructor(i,e=!0){super("CopyPass"),this.fullscreenMaterial=new Sy,this.needsSwap=!1,this.renderTarget=i,i===void 0&&(this.renderTarget=new tn(1,1,{minFilter:qt,magFilter:qt,stencilBuffer:!1,depthBuffer:!1}),this.renderTarget.texture.name="CopyPass.Target"),this.autoResize=e}get resize(){return this.autoResize}set resize(i){this.autoResize=i}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}setAutoResizeEnabled(i){this.autoResize=i}render(i,e,t,n,r){this.fullscreenMaterial.inputBuffer=e.texture,i.setRenderTarget(this.renderToScreen?null:this.renderTarget),i.render(this.scene,this.camera)}setSize(i,e){this.autoResize&&this.renderTarget.setSize(i,e)}initialize(i,e,t){t!==void 0&&(this.renderTarget.texture.type=t,t!==un?this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1":i!==null&&i.outputColorSpace===yt&&(this.renderTarget.texture.colorSpace=yt))}},M0=new Pe,My=class extends $n{constructor(i=!0,e=!0,t=!1){super("ClearPass",null,null),this.needsSwap=!1,this.color=i,this.depth=e,this.stencil=t,this.overrideClearColor=null,this.overrideClearAlpha=-1}setClearFlags(i,e,t){this.color=i,this.depth=e,this.stencil=t}getOverrideClearColor(){return this.overrideClearColor}setOverrideClearColor(i){this.overrideClearColor=i}getOverrideClearAlpha(){return this.overrideClearAlpha}setOverrideClearAlpha(i){this.overrideClearAlpha=i}render(i,e,t,n,r){const s=this.overrideClearColor,o=this.overrideClearAlpha,c=i.getClearAlpha(),u=s!==null,h=o>=0;u?(i.getClearColor(M0),i.setClearColor(s,h?o:c)):h&&i.setClearAlpha(o),i.setRenderTarget(this.renderToScreen?null:e),i.clear(this.color,this.depth,this.stencil),u?i.setClearColor(M0,c):h&&i.setClearAlpha(c)}},IR=class extends $n{constructor(i,e){super("MaskPass",i,e),this.needsSwap=!1,this.clearPass=new My(!1,!1,!0),this.inverse=!1}set mainScene(i){this.scene=i}set mainCamera(i){this.camera=i}get inverted(){return this.inverse}set inverted(i){this.inverse=i}get clear(){return this.clearPass.enabled}set clear(i){this.clearPass.enabled=i}getClearPass(){return this.clearPass}isInverted(){return this.inverted}setInverted(i){this.inverted=i}render(i,e,t,n,r){const s=i.getContext(),o=i.state.buffers,c=this.scene,u=this.camera,h=this.clearPass,f=this.inverted?0:1,p=1-f;o.color.setMask(!1),o.depth.setMask(!1),o.color.setLocked(!0),o.depth.setLocked(!0),o.stencil.setTest(!0),o.stencil.setOp(s.REPLACE,s.REPLACE,s.REPLACE),o.stencil.setFunc(s.ALWAYS,f,4294967295),o.stencil.setClear(p),o.stencil.setLocked(!0),this.clearPass.enabled&&(this.renderToScreen?h.render(i,null):(h.render(i,e),h.render(i,t))),this.renderToScreen?(i.setRenderTarget(null),i.render(c,u)):(i.setRenderTarget(e),i.render(c,u),i.setRenderTarget(t),i.render(c,u)),o.color.setLocked(!1),o.depth.setLocked(!1),o.stencil.setLocked(!1),o.stencil.setFunc(s.EQUAL,1,4294967295),o.stencil.setOp(s.KEEP,s.KEEP,s.KEEP),o.stencil.setLocked(!0)}},LR=class{constructor(e=null,{depthBuffer:t=!0,stencilBuffer:n=!1,multisampling:r=0,frameBufferType:s}={}){this.renderer=null,this.inputBuffer=this.createBuffer(t,n,s,r),this.outputBuffer=this.inputBuffer.clone(),this.copyPass=new PR,this.depthTexture=null,this.passes=[],this.timer=new wR,this.autoRenderToScreen=!0,this.setRenderer(e)}get multisampling(){return this.inputBuffer.samples||0}set multisampling(e){const t=this.inputBuffer,n=this.multisampling;n>0&&e>0?(this.inputBuffer.samples=e,this.outputBuffer.samples=e,this.inputBuffer.dispose(),this.outputBuffer.dispose()):n!==e&&(this.inputBuffer.dispose(),this.outputBuffer.dispose(),this.inputBuffer=this.createBuffer(t.depthBuffer,t.stencilBuffer,t.texture.type,e),this.inputBuffer.depthTexture=this.depthTexture,this.outputBuffer=this.inputBuffer.clone())}getTimer(){return this.timer}getRenderer(){return this.renderer}setRenderer(e){if(this.renderer=e,e!==null){const t=e.getSize(new oe),n=e.getContext().getContextAttributes().alpha,r=this.inputBuffer.texture.type;r===un&&e.outputColorSpace===yt&&(this.inputBuffer.texture.colorSpace=yt,this.outputBuffer.texture.colorSpace=yt,this.inputBuffer.dispose(),this.outputBuffer.dispose()),e.autoClear=!1,this.setSize(t.width,t.height);for(const s of this.passes)s.initialize(e,n,r)}}replaceRenderer(e,t=!0){const n=this.renderer,r=n.domElement.parentNode;return this.setRenderer(e),t&&r!==null&&(r.removeChild(n.domElement),r.appendChild(e.domElement)),n}createDepthTexture(){const e=this.depthTexture=new Au;return this.inputBuffer.depthTexture=e,this.inputBuffer.dispose(),this.inputBuffer.stencilBuffer?(e.format=Ts,e.type=Rs):e.type=zr,e}deleteDepthTexture(){if(this.depthTexture!==null){this.depthTexture.dispose(),this.depthTexture=null,this.inputBuffer.depthTexture=null,this.inputBuffer.dispose();for(const e of this.passes)e.setDepthTexture(null)}}createBuffer(e,t,n,r){const s=this.renderer,o=s===null?new oe:s.getDrawingBufferSize(new oe),c={minFilter:qt,magFilter:qt,stencilBuffer:t,depthBuffer:e,type:n},u=new tn(o.width,o.height,c);return r>0&&(u.ignoreDepthForMultisampleCopy=!1,u.samples=r),n===un&&s!==null&&s.outputColorSpace===yt&&(u.texture.colorSpace=yt),u.texture.name="EffectComposer.Buffer",u.texture.generateMipmaps=!1,u}setMainScene(e){for(const t of this.passes)t.mainScene=e}setMainCamera(e){for(const t of this.passes)t.mainCamera=e}addPass(e,t){const n=this.passes,r=this.renderer,s=r.getDrawingBufferSize(new oe),o=r.getContext().getContextAttributes().alpha,c=this.inputBuffer.texture.type;if(e.setRenderer(r),e.setSize(s.width,s.height),e.initialize(r,o,c),this.autoRenderToScreen&&(n.length>0&&(n[n.length-1].renderToScreen=!1),e.renderToScreen&&(this.autoRenderToScreen=!1)),t!==void 0?n.splice(t,0,e):n.push(e),this.autoRenderToScreen&&(n[n.length-1].renderToScreen=!0),e.needsDepthTexture||this.depthTexture!==null)if(this.depthTexture===null){const u=this.createDepthTexture();for(e of n)e.setDepthTexture(u)}else e.setDepthTexture(this.depthTexture)}removePass(e){const t=this.passes,n=t.indexOf(e);if(n!==-1&&t.splice(n,1).length>0){if(this.depthTexture!==null){const o=(u,h)=>u||h.needsDepthTexture;t.reduce(o,!1)||(e.getDepthTexture()===this.depthTexture&&e.setDepthTexture(null),this.deleteDepthTexture())}this.autoRenderToScreen&&n===t.length&&(e.renderToScreen=!1,t.length>0&&(t[t.length-1].renderToScreen=!0))}}removeAllPasses(){const e=this.passes;this.deleteDepthTexture(),e.length>0&&(this.autoRenderToScreen&&(e[e.length-1].renderToScreen=!1),this.passes=[])}render(e){const t=this.renderer,n=this.copyPass;let r=this.inputBuffer,s=this.outputBuffer,o=!1,c,u,h;e===void 0&&(this.timer.update(),e=this.timer.getDelta());for(const f of this.passes)f.enabled&&(f.render(t,r,s,e,o),f.needsSwap&&(o&&(n.renderToScreen=f.renderToScreen,c=t.getContext(),u=t.state.buffers.stencil,u.setFunc(c.NOTEQUAL,1,4294967295),n.render(t,r,s,e,o),u.setFunc(c.EQUAL,1,4294967295)),h=r,r=s,s=h),f instanceof IR?o=!0:f instanceof bR&&(o=!1))}setSize(e,t,n){const r=this.renderer,s=r.getSize(new oe);(e===void 0||t===void 0)&&(e=s.width,t=s.height),(s.width!==e||s.height!==t)&&r.setSize(e,t,n);const o=r.getDrawingBufferSize(new oe);this.inputBuffer.setSize(o.width,o.height),this.outputBuffer.setSize(o.width,o.height);for(const c of this.passes)c.setSize(o.width,o.height)}reset(){this.dispose(),this.autoRenderToScreen=!0}dispose(){for(const e of this.passes)e.dispose();this.passes=[],this.inputBuffer!==null&&this.inputBuffer.dispose(),this.outputBuffer!==null&&this.outputBuffer.dispose(),this.deleteDepthTexture(),this.copyPass.dispose(),this.timer.dispose()}},Zi={NONE:0,DEPTH:1,CONVOLUTION:2},bt={FRAGMENT_HEAD:"FRAGMENT_HEAD",FRAGMENT_MAIN_UV:"FRAGMENT_MAIN_UV",FRAGMENT_MAIN_IMAGE:"FRAGMENT_MAIN_IMAGE",VERTEX_HEAD:"VERTEX_HEAD",VERTEX_MAIN_SUPPORT:"VERTEX_MAIN_SUPPORT"},UR=class{constructor(){this.shaderParts=new Map([[bt.FRAGMENT_HEAD,null],[bt.FRAGMENT_MAIN_UV,null],[bt.FRAGMENT_MAIN_IMAGE,null],[bt.VERTEX_HEAD,null],[bt.VERTEX_MAIN_SUPPORT,null]]),this.defines=new Map,this.uniforms=new Map,this.blendModes=new Map,this.extensions=new Set,this.attributes=Zi.NONE,this.varyings=new Set,this.uvTransformation=!1,this.readDepth=!1,this.colorSpace=Ui}},$f=!1,E0=class{constructor(i=null){this.originalMaterials=new Map,this.material=null,this.materials=null,this.materialsBackSide=null,this.materialsDoubleSide=null,this.materialsFlatShaded=null,this.materialsFlatShadedBackSide=null,this.materialsFlatShadedDoubleSide=null,this.setMaterial(i),this.meshCount=0,this.replaceMaterial=e=>{if(e.isMesh){let t;if(e.material.flatShading)switch(e.material.side){case kn:t=this.materialsFlatShadedDoubleSide;break;case fn:t=this.materialsFlatShadedBackSide;break;default:t=this.materialsFlatShaded;break}else switch(e.material.side){case kn:t=this.materialsDoubleSide;break;case fn:t=this.materialsBackSide;break;default:t=this.materials;break}this.originalMaterials.set(e,e.material),e.isSkinnedMesh?e.material=t[2]:e.isInstancedMesh?e.material=t[1]:e.material=t[0],++this.meshCount}}}cloneMaterial(i){if(!(i instanceof nn))return i.clone();const e=i.uniforms,t=new Map;for(const r in e){const s=e[r].value;s.isRenderTargetTexture&&(e[r].value=null,t.set(r,s))}const n=i.clone();for(const r of t)e[r[0]].value=r[1],n.uniforms[r[0]].value=r[1];return n}setMaterial(i){if(this.disposeMaterials(),this.material=i,i!==null){const e=this.materials=[this.cloneMaterial(i),this.cloneMaterial(i),this.cloneMaterial(i)];for(const t of e)t.uniforms=Object.assign({},i.uniforms),t.side=ji;e[2].skinning=!0,this.materialsBackSide=e.map(t=>{const n=this.cloneMaterial(t);return n.uniforms=Object.assign({},i.uniforms),n.side=fn,n}),this.materialsDoubleSide=e.map(t=>{const n=this.cloneMaterial(t);return n.uniforms=Object.assign({},i.uniforms),n.side=kn,n}),this.materialsFlatShaded=e.map(t=>{const n=this.cloneMaterial(t);return n.uniforms=Object.assign({},i.uniforms),n.flatShading=!0,n}),this.materialsFlatShadedBackSide=e.map(t=>{const n=this.cloneMaterial(t);return n.uniforms=Object.assign({},i.uniforms),n.flatShading=!0,n.side=fn,n}),this.materialsFlatShadedDoubleSide=e.map(t=>{const n=this.cloneMaterial(t);return n.uniforms=Object.assign({},i.uniforms),n.flatShading=!0,n.side=kn,n})}}render(i,e,t){const n=i.shadowMap.enabled;if(i.shadowMap.enabled=!1,$f){const r=this.originalMaterials;this.meshCount=0,e.traverse(this.replaceMaterial),i.render(e,t);for(const s of r)s[0].material=s[1];this.meshCount!==r.size&&r.clear()}else{const r=e.overrideMaterial;e.overrideMaterial=this.material,i.render(e,t),e.overrideMaterial=r}i.shadowMap.enabled=n}disposeMaterials(){if(this.material!==null){const i=this.materials.concat(this.materialsBackSide).concat(this.materialsDoubleSide).concat(this.materialsFlatShaded).concat(this.materialsFlatShadedBackSide).concat(this.materialsFlatShadedDoubleSide);for(const e of i)e.dispose()}}dispose(){this.originalMaterials.clear(),this.disposeMaterials()}static get workaroundEnabled(){return $f}static set workaroundEnabled(i){$f=i}},Dr=-1,dn=class extends Ei{constructor(i,e=Dr,t=Dr,n=1){super(),this.resizable=i,this.baseSize=new oe(1,1),this.preferredSize=new oe(e,t),this.target=this.preferredSize,this.s=n,this.effectiveSize=new oe,this.addEventListener("change",()=>this.updateEffectiveSize()),this.updateEffectiveSize()}updateEffectiveSize(){const i=this.baseSize,e=this.preferredSize,t=this.effectiveSize,n=this.scale;e.width!==Dr?t.width=e.width:e.height!==Dr?t.width=Math.round(e.height*(i.width/Math.max(i.height,1))):t.width=Math.round(i.width*n),e.height!==Dr?t.height=e.height:e.width!==Dr?t.height=Math.round(e.width/Math.max(i.width/Math.max(i.height,1),1)):t.height=Math.round(i.height*n)}get width(){return this.effectiveSize.width}set width(i){this.preferredWidth=i}get height(){return this.effectiveSize.height}set height(i){this.preferredHeight=i}getWidth(){return this.width}getHeight(){return this.height}get scale(){return this.s}set scale(i){this.s!==i&&(this.s=i,this.preferredSize.setScalar(Dr),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getScale(){return this.scale}setScale(i){this.scale=i}get baseWidth(){return this.baseSize.width}set baseWidth(i){this.baseSize.width!==i&&(this.baseSize.width=i,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseWidth(){return this.baseWidth}setBaseWidth(i){this.baseWidth=i}get baseHeight(){return this.baseSize.height}set baseHeight(i){this.baseSize.height!==i&&(this.baseSize.height=i,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseHeight(){return this.baseHeight}setBaseHeight(i){this.baseHeight=i}setBaseSize(i,e){(this.baseSize.width!==i||this.baseSize.height!==e)&&(this.baseSize.set(i,e),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}get preferredWidth(){return this.preferredSize.width}set preferredWidth(i){this.preferredSize.width!==i&&(this.preferredSize.width=i,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredWidth(){return this.preferredWidth}setPreferredWidth(i){this.preferredWidth=i}get preferredHeight(){return this.preferredSize.height}set preferredHeight(i){this.preferredSize.height!==i&&(this.preferredSize.height=i,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredHeight(){return this.preferredHeight}setPreferredHeight(i){this.preferredHeight=i}setPreferredSize(i,e){(this.preferredSize.width!==i||this.preferredSize.height!==e)&&(this.preferredSize.set(i,e),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}copy(i){this.s=i.scale,this.baseSize.set(i.baseWidth,i.baseHeight),this.preferredSize.set(i.preferredWidth,i.preferredHeight),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height)}static get AUTO_SIZE(){return Dr}},pt={SKIP:9,SET:30,ADD:0,ALPHA:1,AVERAGE:2,COLOR:3,COLOR_BURN:4,COLOR_DODGE:5,DARKEN:6,DIFFERENCE:7,DIVIDE:8,DST:9,EXCLUSION:10,HARD_LIGHT:11,HARD_MIX:12,HUE:13,INVERT:14,INVERT_RGB:15,LIGHTEN:16,LINEAR_BURN:17,LINEAR_DODGE:18,LINEAR_LIGHT:19,LUMINOSITY:20,MULTIPLY:21,NEGATION:22,NORMAL:23,OVERLAY:24,PIN_LIGHT:25,REFLECT:26,SATURATION:27,SCREEN:28,SOFT_LIGHT:29,SRC:30,SUBTRACT:31,VIVID_LIGHT:32},DR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y,opacity);}",NR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,min(y.a,opacity));}",FR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y)*0.5,opacity);}",OR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.rg,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}",BR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(step(0.0,y)*(1.0-min(vec4(1.0),(1.0-x)/y)),vec4(1.0),step(1.0,x));return mix(x,z,opacity);}",zR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=step(0.0,x)*mix(min(vec4(1.0),x/max(1.0-y,1e-9)),vec4(1.0),step(1.0,y));return mix(x,z,opacity);}",kR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x,y),opacity);}",HR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,abs(x-y),opacity);}",VR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x/max(y,1e-12),opacity);}",GR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y-2.0*x*y),opacity);}",WR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 a=min(x,1.0),b=min(y,1.0);vec4 z=mix(2.0*a*b,1.0-2.0*(1.0-a)*(1.0-b),step(0.5,y));return mix(x,z,opacity);}",XR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,step(1.0,x+y),opacity);}",qR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.r,xHSL.gb));return vec4(mix(x.rgb,z,opacity),y.a);}",YR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-y,opacity);}",ZR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y*(1.0-x),opacity);}",jR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x,y),opacity);}",JR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(y+x-1.0,0.0,1.0),opacity);}",KR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x+y,1.0),opacity);}",QR="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(2.0*y+x-1.0,0.0,1.0),opacity);}",$R="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.rg,yHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}",eP="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x*y,opacity);}",tP="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-abs(1.0-x-y),opacity);}",nP="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,opacity);}",iP="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(2.0*y*x,1.0-2.0*(1.0-y)*(1.0-x),step(0.5,x));return mix(x,z,opacity);}",rP="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 z=mix(mix(y2,x,step(0.5*x,y)),max(vec4(0.0),y2-1.0),step(x,(y2-1.0)));return mix(x,z,opacity);}",sP="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(min(x*x/max(1.0-y,1e-12),1.0),y,step(1.0,y));return mix(x,z,opacity);}",aP="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.r,yHSL.g,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}",oP="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y-min(x*y,1.0),opacity);}",lP="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 w=step(0.5,y);vec4 z=mix(x-(1.0-y2)*x*(1.0-x),mix(x+(y2-1.0)*(sqrt(x)-x),x+(y2-1.0)*x*((16.0*x-12.0)*x+3.0),w*(1.0-step(0.25,x))),w);return mix(x,z,opacity);}",cP="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return y;}",uP="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x+y-1.0,0.0),opacity);}",hP="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(max(1.0-min((1.0-x)/(2.0*y),1.0),0.0),min(x/(2.0*(1.0-y)),1.0),step(0.5,y));return mix(x,z,opacity);}",fP=new Map([[pt.ADD,DR],[pt.ALPHA,NR],[pt.AVERAGE,FR],[pt.COLOR,OR],[pt.COLOR_BURN,BR],[pt.COLOR_DODGE,zR],[pt.DARKEN,kR],[pt.DIFFERENCE,HR],[pt.DIVIDE,VR],[pt.DST,null],[pt.EXCLUSION,GR],[pt.HARD_LIGHT,WR],[pt.HARD_MIX,XR],[pt.HUE,qR],[pt.INVERT,YR],[pt.INVERT_RGB,ZR],[pt.LIGHTEN,jR],[pt.LINEAR_BURN,JR],[pt.LINEAR_DODGE,KR],[pt.LINEAR_LIGHT,QR],[pt.LUMINOSITY,$R],[pt.MULTIPLY,eP],[pt.NEGATION,tP],[pt.NORMAL,nP],[pt.OVERLAY,iP],[pt.PIN_LIGHT,rP],[pt.REFLECT,sP],[pt.SATURATION,aP],[pt.SCREEN,oP],[pt.SOFT_LIGHT,lP],[pt.SRC,cP],[pt.SUBTRACT,uP],[pt.VIVID_LIGHT,hP]]),dP=class extends Ei{constructor(i,e=1){super(),this._blendFunction=i,this.opacity=new Ze(e)}getOpacity(){return this.opacity.value}setOpacity(i){this.opacity.value=i}get blendFunction(){return this._blendFunction}set blendFunction(i){this._blendFunction=i,this.dispatchEvent({type:"change"})}getBlendFunction(){return this.blendFunction}setBlendFunction(i){this.blendFunction=i}getShaderCode(){return fP.get(this.blendFunction)}},Ju={VERY_SMALL:0,SMALL:1,MEDIUM:2,LARGE:3,VERY_LARGE:4,HUGE:5},pP=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec4 sum=texture2D(inputBuffer,vUv0);sum+=texture2D(inputBuffer,vUv1);sum+=texture2D(inputBuffer,vUv2);sum+=texture2D(inputBuffer,vUv3);gl_FragColor=sum*0.25;
#include <colorspace_fragment>
}`,mP="uniform vec4 texelSize;uniform float kernel;uniform float scale;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vec2 dUv=(texelSize.xy*vec2(kernel)+texelSize.zw)*scale;vUv0=vec2(uv.x-dUv.x,uv.y+dUv.y);vUv1=vec2(uv.x+dUv.x,uv.y+dUv.y);vUv2=vec2(uv.x+dUv.x,uv.y-dUv.y);vUv3=vec2(uv.x-dUv.x,uv.y-dUv.y);gl_Position=vec4(position.xy,1.0,1.0);}",gP=[new Float32Array([0,0]),new Float32Array([0,1,1]),new Float32Array([0,1,1,2]),new Float32Array([0,1,2,2,3]),new Float32Array([0,1,2,3,4,4,5]),new Float32Array([0,1,2,3,4,5,7,8,9,10])],vP=class extends nn{constructor(i=new It){super({name:"KawaseBlurMaterial",uniforms:{inputBuffer:new Ze(null),texelSize:new Ze(new It),scale:new Ze(1),kernel:new Ze(0)},blending:pn,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:pP,vertexShader:mP}),this.fragmentShader=fl(this.fragmentShader),this.setTexelSize(i.x,i.y),this.kernelSize=Ju.MEDIUM}set inputBuffer(i){this.uniforms.inputBuffer.value=i}setInputBuffer(i){this.inputBuffer=i}get kernelSequence(){return gP[this.kernelSize]}get scale(){return this.uniforms.scale.value}set scale(i){this.uniforms.scale.value=i}getScale(){return this.uniforms.scale.value}setScale(i){this.uniforms.scale.value=i}getKernel(){return null}get kernel(){return this.uniforms.kernel.value}set kernel(i){this.uniforms.kernel.value=i}setKernel(i){this.kernel=i}setTexelSize(i,e){this.uniforms.texelSize.value.set(i,e,i*.5,e*.5)}setSize(i,e){const t=1/i,n=1/e;this.uniforms.texelSize.value.set(t,n,t*.5,n*.5)}},Ey=class extends $n{constructor({kernelSize:i=Ju.MEDIUM,resolutionScale:e=.5,width:t=dn.AUTO_SIZE,height:n=dn.AUTO_SIZE,resolutionX:r=t,resolutionY:s=n}={}){super("KawaseBlurPass"),this.renderTargetA=new tn(1,1,{depthBuffer:!1}),this.renderTargetA.texture.name="Blur.Target.A",this.renderTargetB=this.renderTargetA.clone(),this.renderTargetB.texture.name="Blur.Target.B";const o=this.resolution=new dn(this,r,s,e);o.addEventListener("change",c=>this.setSize(o.baseWidth,o.baseHeight)),this._blurMaterial=new vP,this._blurMaterial.kernelSize=i,this.copyMaterial=new Sy}getResolution(){return this.resolution}get blurMaterial(){return this._blurMaterial}set blurMaterial(i){this._blurMaterial=i}get dithering(){return this.copyMaterial.dithering}set dithering(i){this.copyMaterial.dithering=i}get kernelSize(){return this.blurMaterial.kernelSize}set kernelSize(i){this.blurMaterial.kernelSize=i}get width(){return this.resolution.width}set width(i){this.resolution.preferredWidth=i}get height(){return this.resolution.height}set height(i){this.resolution.preferredHeight=i}get scale(){return this.blurMaterial.scale}set scale(i){this.blurMaterial.scale=i}getScale(){return this.blurMaterial.scale}setScale(i){this.blurMaterial.scale=i}getKernelSize(){return this.kernelSize}setKernelSize(i){this.kernelSize=i}getResolutionScale(){return this.resolution.scale}setResolutionScale(i){this.resolution.scale=i}render(i,e,t,n,r){const s=this.scene,o=this.camera,c=this.renderTargetA,u=this.renderTargetB,h=this.blurMaterial,f=h.kernelSequence;let p=e;this.fullscreenMaterial=h;for(let m=0,g=f.length;m<g;++m){const x=m&1?u:c;h.kernel=f[m],h.inputBuffer=p.texture,i.setRenderTarget(x),i.render(s,o),p=x}this.fullscreenMaterial=this.copyMaterial,this.copyMaterial.inputBuffer=p.texture,i.setRenderTarget(this.renderToScreen?null:t),i.render(s,o)}setSize(i,e){const t=this.resolution;t.setBaseSize(i,e);const n=t.width,r=t.height;this.renderTargetA.setSize(n,r),this.renderTargetB.setSize(n,r),this.blurMaterial.setSize(i,e)}initialize(i,e,t){t!==void 0&&(this.renderTargetA.texture.type=t,this.renderTargetB.texture.type=t,t!==un?(this.blurMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.copyMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1"):i!==null&&i.outputColorSpace===yt&&(this.renderTargetA.texture.colorSpace=yt,this.renderTargetB.texture.colorSpace=yt))}static get AUTO_SIZE(){return dn.AUTO_SIZE}},_P=`#include <common>
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#ifdef RANGE
uniform vec2 range;
#elif defined(THRESHOLD)
uniform float threshold;uniform float smoothing;
#endif
varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);float l=luminance(texel.rgb);
#ifdef RANGE
float low=step(range.x,l);float high=step(l,range.y);l*=low*high;
#elif defined(THRESHOLD)
l=smoothstep(threshold,threshold+smoothing,l)*l;
#endif
#ifdef COLOR
gl_FragColor=vec4(texel.rgb*clamp(l,0.0,1.0),l);
#else
gl_FragColor=vec4(l);
#endif
}`,xP=class extends nn{constructor(i=!1,e=null){super({name:"LuminanceMaterial",defines:{THREE_REVISION:Cs.replace(/\D+/g,"")},uniforms:{inputBuffer:new Ze(null),threshold:new Ze(0),smoothing:new Ze(1),range:new Ze(null)},blending:pn,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:_P,vertexShader:dl}),this.colorOutput=i,this.luminanceRange=e}set inputBuffer(i){this.uniforms.inputBuffer.value=i}setInputBuffer(i){this.uniforms.inputBuffer.value=i}get threshold(){return this.uniforms.threshold.value}set threshold(i){this.smoothing>0||i>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.threshold.value=i}getThreshold(){return this.threshold}setThreshold(i){this.threshold=i}get smoothing(){return this.uniforms.smoothing.value}set smoothing(i){this.threshold>0||i>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.smoothing.value=i}getSmoothingFactor(){return this.smoothing}setSmoothingFactor(i){this.smoothing=i}get useThreshold(){return this.threshold>0||this.smoothing>0}set useThreshold(i){}get colorOutput(){return this.defines.COLOR!==void 0}set colorOutput(i){i?this.defines.COLOR="1":delete this.defines.COLOR,this.needsUpdate=!0}isColorOutputEnabled(i){return this.colorOutput}setColorOutputEnabled(i){this.colorOutput=i}get useRange(){return this.luminanceRange!==null}set useRange(i){this.luminanceRange=null}get luminanceRange(){return this.uniforms.range.value}set luminanceRange(i){i!==null?this.defines.RANGE="1":delete this.defines.RANGE,this.uniforms.range.value=i,this.needsUpdate=!0}getLuminanceRange(){return this.luminanceRange}setLuminanceRange(i){this.luminanceRange=i}},yP=class extends $n{constructor({renderTarget:i,luminanceRange:e,colorOutput:t,resolutionScale:n=1,width:r=dn.AUTO_SIZE,height:s=dn.AUTO_SIZE,resolutionX:o=r,resolutionY:c=s}={}){super("LuminancePass"),this.fullscreenMaterial=new xP(t,e),this.needsSwap=!1,this.renderTarget=i,this.renderTarget===void 0&&(this.renderTarget=new tn(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="LuminancePass.Target");const u=this.resolution=new dn(this,o,c,n);u.addEventListener("change",h=>this.setSize(u.baseWidth,u.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}render(i,e,t,n,r){const s=this.fullscreenMaterial;s.inputBuffer=e.texture,i.setRenderTarget(this.renderToScreen?null:this.renderTarget),i.render(this.scene,this.camera)}setSize(i,e){const t=this.resolution;t.setBaseSize(i,e),this.renderTarget.setSize(t.width,t.height)}initialize(i,e,t){t!==void 0&&t!==un&&(this.renderTarget.texture.type=t,this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}},SP=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#define WEIGHT_INNER 0.125
#define WEIGHT_OUTER 0.0555555
varying vec2 vUv;varying vec2 vUv00;varying vec2 vUv01;varying vec2 vUv02;varying vec2 vUv03;varying vec2 vUv04;varying vec2 vUv05;varying vec2 vUv06;varying vec2 vUv07;varying vec2 vUv08;varying vec2 vUv09;varying vec2 vUv10;varying vec2 vUv11;float clampToBorder(const in vec2 uv){return float(uv.s>=0.0&&uv.s<=1.0&&uv.t>=0.0&&uv.t<=1.0);}void main(){vec4 c=vec4(0.0);vec4 w=WEIGHT_INNER*vec4(clampToBorder(vUv00),clampToBorder(vUv01),clampToBorder(vUv02),clampToBorder(vUv03));c+=w.x*texture2D(inputBuffer,vUv00);c+=w.y*texture2D(inputBuffer,vUv01);c+=w.z*texture2D(inputBuffer,vUv02);c+=w.w*texture2D(inputBuffer,vUv03);w=WEIGHT_OUTER*vec4(clampToBorder(vUv04),clampToBorder(vUv05),clampToBorder(vUv06),clampToBorder(vUv07));c+=w.x*texture2D(inputBuffer,vUv04);c+=w.y*texture2D(inputBuffer,vUv05);c+=w.z*texture2D(inputBuffer,vUv06);c+=w.w*texture2D(inputBuffer,vUv07);w=WEIGHT_OUTER*vec4(clampToBorder(vUv08),clampToBorder(vUv09),clampToBorder(vUv10),clampToBorder(vUv11));c+=w.x*texture2D(inputBuffer,vUv08);c+=w.y*texture2D(inputBuffer,vUv09);c+=w.z*texture2D(inputBuffer,vUv10);c+=w.w*texture2D(inputBuffer,vUv11);c+=WEIGHT_OUTER*texture2D(inputBuffer,vUv);gl_FragColor=c;
#include <colorspace_fragment>
}`,MP="uniform vec2 texelSize;varying vec2 vUv;varying vec2 vUv00;varying vec2 vUv01;varying vec2 vUv02;varying vec2 vUv03;varying vec2 vUv04;varying vec2 vUv05;varying vec2 vUv06;varying vec2 vUv07;varying vec2 vUv08;varying vec2 vUv09;varying vec2 vUv10;varying vec2 vUv11;void main(){vUv=position.xy*0.5+0.5;vUv00=vUv+texelSize*vec2(-1.0,1.0);vUv01=vUv+texelSize*vec2(1.0,1.0);vUv02=vUv+texelSize*vec2(-1.0,-1.0);vUv03=vUv+texelSize*vec2(1.0,-1.0);vUv04=vUv+texelSize*vec2(-2.0,2.0);vUv05=vUv+texelSize*vec2(0.0,2.0);vUv06=vUv+texelSize*vec2(2.0,2.0);vUv07=vUv+texelSize*vec2(-2.0,0.0);vUv08=vUv+texelSize*vec2(2.0,0.0);vUv09=vUv+texelSize*vec2(-2.0,-2.0);vUv10=vUv+texelSize*vec2(0.0,-2.0);vUv11=vUv+texelSize*vec2(2.0,-2.0);gl_Position=vec4(position.xy,1.0,1.0);}",EP=class extends nn{constructor(){super({name:"DownsamplingMaterial",uniforms:{inputBuffer:new Ze(null),texelSize:new Ze(new oe)},blending:pn,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:SP,vertexShader:MP}),this.fragmentShader=fl(this.fragmentShader)}set inputBuffer(i){this.uniforms.inputBuffer.value=i}setSize(i,e){this.uniforms.texelSize.value.set(1/i,1/e)}},wP=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;uniform mediump sampler2D supportBuffer;
#else
uniform lowp sampler2D inputBuffer;uniform lowp sampler2D supportBuffer;
#endif
uniform float radius;varying vec2 vUv;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;varying vec2 vUv4;varying vec2 vUv5;varying vec2 vUv6;varying vec2 vUv7;void main(){vec4 c=vec4(0.0);c+=texture2D(inputBuffer,vUv0)*0.0625;c+=texture2D(inputBuffer,vUv1)*0.125;c+=texture2D(inputBuffer,vUv2)*0.0625;c+=texture2D(inputBuffer,vUv3)*0.125;c+=texture2D(inputBuffer,vUv)*0.25;c+=texture2D(inputBuffer,vUv4)*0.125;c+=texture2D(inputBuffer,vUv5)*0.0625;c+=texture2D(inputBuffer,vUv6)*0.125;c+=texture2D(inputBuffer,vUv7)*0.0625;vec4 baseColor=texture2D(supportBuffer,vUv);gl_FragColor=mix(baseColor,c,radius);
#include <colorspace_fragment>
}`,TP="uniform vec2 texelSize;varying vec2 vUv;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;varying vec2 vUv4;varying vec2 vUv5;varying vec2 vUv6;varying vec2 vUv7;void main(){vUv=position.xy*0.5+0.5;vUv0=vUv+texelSize*vec2(-1.0,1.0);vUv1=vUv+texelSize*vec2(0.0,1.0);vUv2=vUv+texelSize*vec2(1.0,1.0);vUv3=vUv+texelSize*vec2(-1.0,0.0);vUv4=vUv+texelSize*vec2(1.0,0.0);vUv5=vUv+texelSize*vec2(-1.0,-1.0);vUv6=vUv+texelSize*vec2(0.0,-1.0);vUv7=vUv+texelSize*vec2(1.0,-1.0);gl_Position=vec4(position.xy,1.0,1.0);}",AP=class extends nn{constructor(){super({name:"UpsamplingMaterial",uniforms:{inputBuffer:new Ze(null),supportBuffer:new Ze(null),texelSize:new Ze(new oe),radius:new Ze(.85)},blending:pn,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:wP,vertexShader:TP}),this.fragmentShader=fl(this.fragmentShader)}set inputBuffer(i){this.uniforms.inputBuffer.value=i}set supportBuffer(i){this.uniforms.supportBuffer.value=i}get radius(){return this.uniforms.radius.value}set radius(i){this.uniforms.radius.value=i}setSize(i,e){this.uniforms.texelSize.value.set(1/i,1/e)}},bP=class extends $n{constructor(){super("MipmapBlurPass"),this.needsSwap=!1,this.renderTarget=new tn(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="Upsampling.Mipmap0",this.downsamplingMipmaps=[],this.upsamplingMipmaps=[],this.downsamplingMaterial=new EP,this.upsamplingMaterial=new AP,this.resolution=new oe}get texture(){return this.renderTarget.texture}get levels(){return this.downsamplingMipmaps.length}set levels(i){if(this.levels!==i){const e=this.renderTarget;this.dispose(),this.downsamplingMipmaps=[],this.upsamplingMipmaps=[];for(let t=0;t<i;++t){const n=e.clone();n.texture.name="Downsampling.Mipmap"+t,this.downsamplingMipmaps.push(n)}this.upsamplingMipmaps.push(e);for(let t=1,n=i-1;t<n;++t){const r=e.clone();r.texture.name="Upsampling.Mipmap"+t,this.upsamplingMipmaps.push(r)}this.setSize(this.resolution.x,this.resolution.y)}}get radius(){return this.upsamplingMaterial.radius}set radius(i){this.upsamplingMaterial.radius=i}render(i,e,t,n,r){const{scene:s,camera:o}=this,{downsamplingMaterial:c,upsamplingMaterial:u}=this,{downsamplingMipmaps:h,upsamplingMipmaps:f}=this;let p=e;this.fullscreenMaterial=c;for(let m=0,g=h.length;m<g;++m){const x=h[m];c.setSize(p.width,p.height),c.inputBuffer=p.texture,i.setRenderTarget(x),i.render(s,o),p=x}this.fullscreenMaterial=u;for(let m=f.length-1;m>=0;--m){const g=f[m];u.setSize(p.width,p.height),u.inputBuffer=p.texture,u.supportBuffer=h[m].texture,i.setRenderTarget(g),i.render(s,o),p=g}}setSize(i,e){const t=this.resolution;t.set(i,e);let n=t.width,r=t.height;for(let s=0,o=this.downsamplingMipmaps.length;s<o;++s)n=Math.round(n*.5),r=Math.round(r*.5),this.downsamplingMipmaps[s].setSize(n,r),s<this.upsamplingMipmaps.length&&this.upsamplingMipmaps[s].setSize(n,r)}initialize(i,e,t){if(t!==void 0){const n=this.downsamplingMipmaps.concat(this.upsamplingMipmaps);for(const r of n)r.texture.type=t;if(t!==un)this.downsamplingMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.upsamplingMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1";else if(i!==null&&i.outputColorSpace===yt)for(const r of n)r.texture.colorSpace=yt}}dispose(){super.dispose();for(const i of this.downsamplingMipmaps.concat(this.upsamplingMipmaps))i.dispose()}},Oa=class extends Ei{constructor(i,e,{attributes:t=Zi.NONE,blendFunction:n=pt.NORMAL,defines:r=new Map,uniforms:s=new Map,extensions:o=null,vertexShader:c=null}={}){super(),this.name=i,this.renderer=null,this.attributes=t,this.fragmentShader=e,this.vertexShader=c,this.defines=r,this.uniforms=s,this.extensions=o,this.blendMode=new dP(n),this.blendMode.addEventListener("change",u=>this.setChanged()),this._inputColorSpace=Ui,this._outputColorSpace=Ii}get inputColorSpace(){return this._inputColorSpace}set inputColorSpace(i){this._inputColorSpace=i,this.setChanged()}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(i){this._outputColorSpace=i,this.setChanged()}set mainScene(i){}set mainCamera(i){}getName(){return this.name}setRenderer(i){this.renderer=i}getDefines(){return this.defines}getUniforms(){return this.uniforms}getExtensions(){return this.extensions}getBlendMode(){return this.blendMode}getAttributes(){return this.attributes}setAttributes(i){this.attributes=i,this.setChanged()}getFragmentShader(){return this.fragmentShader}setFragmentShader(i){this.fragmentShader=i,this.setChanged()}getVertexShader(){return this.vertexShader}setVertexShader(i){this.vertexShader=i,this.setChanged()}setChanged(){this.dispatchEvent({type:"change"})}setDepthTexture(i,e=Ji){}update(i,e,t){}setSize(i,e){}initialize(i,e,t){}dispose(){for(const i of Object.keys(this)){const e=this[i];(e instanceof tn||e instanceof vn||e instanceof Bt||e instanceof $n)&&this[i].dispose()}}},CP=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D map;
#else
uniform lowp sampler2D map;
#endif
uniform float intensity;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec4 texel=texture2D(map,uv);outputColor=vec4(texel.rgb*intensity,texel.a);}`,RP=class extends Oa{constructor({blendFunction:i=pt.SCREEN,luminanceThreshold:e=.9,luminanceSmoothing:t=.025,mipmapBlur:n=!1,intensity:r=1,radius:s=.85,levels:o=8,kernelSize:c=Ju.LARGE,resolutionScale:u=.5,width:h=dn.AUTO_SIZE,height:f=dn.AUTO_SIZE,resolutionX:p=h,resolutionY:m=f}={}){super("BloomEffect",CP,{blendFunction:i,uniforms:new Map([["map",new Ze(null)],["intensity",new Ze(r)]])}),this.renderTarget=new tn(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="Bloom.Target",this.blurPass=new Ey({kernelSize:c}),this.luminancePass=new yP({colorOutput:!0}),this.luminanceMaterial.threshold=e,this.luminanceMaterial.smoothing=t,this.mipmapBlurPass=new bP,this.mipmapBlurPass.enabled=n,this.mipmapBlurPass.radius=s,this.mipmapBlurPass.levels=o,this.uniforms.get("map").value=n?this.mipmapBlurPass.texture:this.renderTarget.texture;const g=this.resolution=new dn(this,p,m,u);g.addEventListener("change",x=>this.setSize(g.baseWidth,g.baseHeight))}get texture(){return this.mipmapBlurPass.enabled?this.mipmapBlurPass.texture:this.renderTarget.texture}getTexture(){return this.texture}getResolution(){return this.resolution}getBlurPass(){return this.blurPass}getLuminancePass(){return this.luminancePass}get luminanceMaterial(){return this.luminancePass.fullscreenMaterial}getLuminanceMaterial(){return this.luminancePass.fullscreenMaterial}get width(){return this.resolution.width}set width(i){this.resolution.preferredWidth=i}get height(){return this.resolution.height}set height(i){this.resolution.preferredHeight=i}get dithering(){return this.blurPass.dithering}set dithering(i){this.blurPass.dithering=i}get kernelSize(){return this.blurPass.kernelSize}set kernelSize(i){this.blurPass.kernelSize=i}get distinction(){return console.warn(this.name,"distinction was removed"),1}set distinction(i){console.warn(this.name,"distinction was removed")}get intensity(){return this.uniforms.get("intensity").value}set intensity(i){this.uniforms.get("intensity").value=i}getIntensity(){return this.intensity}setIntensity(i){this.intensity=i}getResolutionScale(){return this.resolution.scale}setResolutionScale(i){this.resolution.scale=i}update(i,e,t){const n=this.renderTarget,r=this.luminancePass;r.enabled?(r.render(i,e),this.mipmapBlurPass.enabled?this.mipmapBlurPass.render(i,r.renderTarget):this.blurPass.render(i,r.renderTarget,n)):this.mipmapBlurPass.enabled?this.mipmapBlurPass.render(i,e):this.blurPass.render(i,e,n)}setSize(i,e){const t=this.resolution;t.setBaseSize(i,e),this.renderTarget.setSize(t.width,t.height),this.blurPass.resolution.copy(t),this.luminancePass.setSize(i,e),this.mipmapBlurPass.setSize(i,e)}initialize(i,e,t){this.blurPass.initialize(i,e,t),this.luminancePass.initialize(i,e,t),this.mipmapBlurPass.initialize(i,e,t),t!==void 0&&(this.renderTarget.texture.type=t,i!==null&&i.outputColorSpace===yt&&(this.renderTarget.texture.colorSpace=yt))}},wy={RED:0,GREEN:1,BLUE:2,ALPHA:3},Wp={DISCARD:0,MULTIPLY:1,MULTIPLY_RGB_SET_ALPHA:2,MULTIPLY_RGB:3},PP=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#if PASS == 1
uniform vec4 kernel64[32];
#else
uniform vec4 kernel16[8];
#endif
uniform lowp sampler2D cocBuffer;uniform vec2 texelSize;uniform float scale;varying vec2 vUv;void main(){
#ifdef FOREGROUND
vec2 cocNearFar=texture2D(cocBuffer,vUv).rg*scale;float coc=cocNearFar.x;
#else
float coc=texture2D(cocBuffer,vUv).g*scale;
#endif
if(coc==0.0){gl_FragColor=texture2D(inputBuffer,vUv);}else{
#ifdef FOREGROUND
vec2 step=texelSize*max(cocNearFar.x,cocNearFar.y);
#else
vec2 step=texelSize*coc;
#endif
#if PASS == 1
vec4 acc=vec4(0.0);for(int i=0;i<32;++i){vec4 kernel=kernel64[i];vec2 uv=step*kernel.xy+vUv;acc+=texture2D(inputBuffer,uv);uv=step*kernel.zw+vUv;acc+=texture2D(inputBuffer,uv);}gl_FragColor=acc/64.0;
#else
vec4 maxValue=texture2D(inputBuffer,vUv);for(int i=0;i<8;++i){vec4 kernel=kernel16[i];vec2 uv=step*kernel.xy+vUv;maxValue=max(texture2D(inputBuffer,uv),maxValue);uv=step*kernel.zw+vUv;maxValue=max(texture2D(inputBuffer,uv),maxValue);}gl_FragColor=maxValue;
#endif
}}`,ou=class extends nn{constructor(i=!1,e=!1){super({name:"BokehMaterial",defines:{PASS:i?"2":"1"},uniforms:{inputBuffer:new Ze(null),cocBuffer:new Ze(null),texelSize:new Ze(new oe),kernel64:new Ze(null),kernel16:new Ze(null),scale:new Ze(1)},blending:pn,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:PP,vertexShader:dl}),e&&(this.defines.FOREGROUND="1"),this.generateKernel()}set inputBuffer(i){this.uniforms.inputBuffer.value=i}setInputBuffer(i){this.uniforms.inputBuffer.value=i}set cocBuffer(i){this.uniforms.cocBuffer.value=i}setCoCBuffer(i){this.uniforms.cocBuffer.value=i}get scale(){return this.uniforms.scale.value}set scale(i){this.uniforms.scale.value=i}getScale(i){return this.scale}setScale(i){this.scale=i}generateKernel(){const i=2.39996323,e=new Float64Array(128),t=new Float64Array(32);let n=0,r=0;for(let s=0,o=Math.sqrt(80);s<80;++s){const c=s*i,u=Math.sqrt(s)/o,h=u*Math.cos(c),f=u*Math.sin(c);s%5===0?(t[r++]=h,t[r++]=f):(e[n++]=h,e[n++]=f)}this.uniforms.kernel64.value=e,this.uniforms.kernel16.value=t}setTexelSize(i,e){this.uniforms.texelSize.value.set(i,e)}setSize(i,e){this.uniforms.texelSize.value.set(1/i,1/e)}};function w0(i,e,t){return i*(e-t)-e}function Qd(i,e,t){return Math.min(Math.max((i+e)/(e-t),0),1)}var IP=`#include <common>
#include <packing>
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
uniform float focusDistance;uniform float focusRange;uniform float cameraNear;uniform float cameraFar;varying vec2 vUv;float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
float depth=unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
float depth=texture2D(depthBuffer,uv).r;
#endif
#ifdef LOG_DEPTH
float d=pow(2.0,depth*log2(cameraFar+1.0))-1.0;float a=cameraFar/(cameraFar-cameraNear);float b=cameraFar*cameraNear/(cameraNear-cameraFar);depth=a+b/d;
#endif
return depth;}void main(){float depth=readDepth(vUv);
#ifdef PERSPECTIVE_CAMERA
float viewZ=perspectiveDepthToViewZ(depth,cameraNear,cameraFar);float linearDepth=viewZToOrthographicDepth(viewZ,cameraNear,cameraFar);
#else
float linearDepth=depth;
#endif
float signedDistance=linearDepth-focusDistance;float magnitude=smoothstep(0.0,focusRange,abs(signedDistance));gl_FragColor.rg=magnitude*vec2(step(signedDistance,0.0),step(0.0,signedDistance));}`,LP=class extends nn{constructor(i){super({name:"CircleOfConfusionMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new Ze(null),focusDistance:new Ze(0),focusRange:new Ze(0),cameraNear:new Ze(.3),cameraFar:new Ze(1e3)},blending:pn,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:IP,vertexShader:dl}),this.uniforms.focalLength=this.uniforms.focusRange,this.copyCameraSettings(i)}get near(){return this.uniforms.cameraNear.value}get far(){return this.uniforms.cameraFar.value}set depthBuffer(i){this.uniforms.depthBuffer.value=i}set depthPacking(i){this.defines.DEPTH_PACKING=i.toFixed(0),this.needsUpdate=!0}setDepthBuffer(i,e=Ji){this.depthBuffer=i,this.depthPacking=e}get focusDistance(){return this.uniforms.focusDistance.value}set focusDistance(i){this.uniforms.focusDistance.value=i}get worldFocusDistance(){return-w0(this.focusDistance,this.near,this.far)}set worldFocusDistance(i){this.focusDistance=Qd(-i,this.near,this.far)}getFocusDistance(i){this.uniforms.focusDistance.value=i}setFocusDistance(i){this.uniforms.focusDistance.value=i}get focalLength(){return this.focusRange}set focalLength(i){this.focusRange=i}get focusRange(){return this.uniforms.focusRange.value}set focusRange(i){this.uniforms.focusRange.value=i}get worldFocusRange(){return-w0(this.focusRange,this.near,this.far)}set worldFocusRange(i){this.focusRange=Qd(-i,this.near,this.far)}getFocalLength(i){return this.focusRange}setFocalLength(i){this.focusRange=i}adoptCameraSettings(i){this.copyCameraSettings(i)}copyCameraSettings(i){i&&(this.uniforms.cameraNear.value=i.near,this.uniforms.cameraFar.value=i.far,i instanceof $t?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}},UP=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#ifdef MASK_PRECISION_HIGH
uniform mediump sampler2D maskTexture;
#else
uniform lowp sampler2D maskTexture;
#endif
#if MASK_FUNCTION != 0
uniform float strength;
#endif
varying vec2 vUv;void main(){
#if COLOR_CHANNEL == 0
float mask=texture2D(maskTexture,vUv).r;
#elif COLOR_CHANNEL == 1
float mask=texture2D(maskTexture,vUv).g;
#elif COLOR_CHANNEL == 2
float mask=texture2D(maskTexture,vUv).b;
#else
float mask=texture2D(maskTexture,vUv).a;
#endif
#if MASK_FUNCTION == 0
#ifdef INVERTED
mask=step(mask,0.0);
#else
mask=1.0-step(mask,0.0);
#endif
#else
mask=clamp(mask*strength,0.0,1.0);
#ifdef INVERTED
mask=1.0-mask;
#endif
#endif
#if MASK_FUNCTION == 3
vec4 texel=texture2D(inputBuffer,vUv);gl_FragColor=vec4(mask*texel.rgb,texel.a);
#elif MASK_FUNCTION == 2
gl_FragColor=vec4(mask*texture2D(inputBuffer,vUv).rgb,mask);
#else
gl_FragColor=mask*texture2D(inputBuffer,vUv);
#endif
}`,DP=class extends nn{constructor(i=null){super({name:"MaskMaterial",uniforms:{maskTexture:new Ze(i),inputBuffer:new Ze(null),strength:new Ze(1)},blending:pn,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:UP,vertexShader:dl}),this.colorChannel=wy.RED,this.maskFunction=Wp.DISCARD}set inputBuffer(i){this.uniforms.inputBuffer.value=i}setInputBuffer(i){this.uniforms.inputBuffer.value=i}set maskTexture(i){this.uniforms.maskTexture.value=i,delete this.defines.MASK_PRECISION_HIGH,i.type!==un&&(this.defines.MASK_PRECISION_HIGH="1"),this.needsUpdate=!0}setMaskTexture(i){this.maskTexture=i}set colorChannel(i){this.defines.COLOR_CHANNEL=i.toFixed(0),this.needsUpdate=!0}setColorChannel(i){this.colorChannel=i}set maskFunction(i){this.defines.MASK_FUNCTION=i.toFixed(0),this.needsUpdate=!0}setMaskFunction(i){this.maskFunction=i}get inverted(){return this.defines.INVERTED!==void 0}set inverted(i){this.inverted&&!i?delete this.defines.INVERTED:i&&(this.defines.INVERTED="1"),this.needsUpdate=!0}isInverted(){return this.inverted}setInverted(i){this.inverted=i}get strength(){return this.uniforms.strength.value}set strength(i){this.uniforms.strength.value=i}getStrength(){return this.strength}setStrength(i){this.strength=i}},xa=class extends $n{constructor(i,e="inputBuffer"){super("ShaderPass"),this.fullscreenMaterial=i,this.input=e}setInput(i){this.input=i}render(i,e,t,n,r){const s=this.fullscreenMaterial.uniforms;e!==null&&s!==void 0&&s[this.input]!==void 0&&(s[this.input].value=e.texture),i.setRenderTarget(this.renderToScreen?null:t),i.render(this.scene,this.camera)}initialize(i,e,t){t!==void 0&&t!==un&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}},NP=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D nearColorBuffer;uniform mediump sampler2D farColorBuffer;
#else
uniform lowp sampler2D nearColorBuffer;uniform lowp sampler2D farColorBuffer;
#endif
uniform lowp sampler2D nearCoCBuffer;uniform lowp sampler2D farCoCBuffer;uniform float scale;void mainImage(const in vec4 inputColor,const in vec2 uv,const in float depth,out vec4 outputColor){vec4 colorNear=texture2D(nearColorBuffer,uv);vec4 colorFar=texture2D(farColorBuffer,uv);
#if MASK_FUNCTION == 1
vec2 cocNearFar=vec2(texture2D(nearCoCBuffer,uv).r,colorFar.a);cocNearFar.x=min(cocNearFar.x*scale,1.0);
#else
vec2 cocNearFar=vec2(texture2D(nearCoCBuffer,uv).r,texture2D(farCoCBuffer,uv).g);cocNearFar=min(cocNearFar*scale,1.0);
#endif
vec4 result=inputColor*(1.0-cocNearFar.y)+colorFar;result=mix(result,colorNear,cocNearFar.x);outputColor=result;}`,FP=class extends Oa{constructor(i,{blendFunction:e,worldFocusDistance:t,worldFocusRange:n,focusDistance:r=0,focalLength:s=.1,focusRange:o=s,bokehScale:c=1,resolutionScale:u=1,width:h=dn.AUTO_SIZE,height:f=dn.AUTO_SIZE,resolutionX:p=h,resolutionY:m=f}={}){super("DepthOfFieldEffect",NP,{blendFunction:e,attributes:Zi.DEPTH,uniforms:new Map([["nearColorBuffer",new Ze(null)],["farColorBuffer",new Ze(null)],["nearCoCBuffer",new Ze(null)],["farCoCBuffer",new Ze(null)],["scale",new Ze(1)]])}),this.camera=i,this.renderTarget=new tn(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="DoF.Intermediate",this.renderTargetMasked=this.renderTarget.clone(),this.renderTargetMasked.texture.name="DoF.Masked.Far",this.renderTargetNear=this.renderTarget.clone(),this.renderTargetNear.texture.name="DoF.Bokeh.Near",this.uniforms.get("nearColorBuffer").value=this.renderTargetNear.texture,this.renderTargetFar=this.renderTarget.clone(),this.renderTargetFar.texture.name="DoF.Bokeh.Far",this.uniforms.get("farColorBuffer").value=this.renderTargetFar.texture,this.renderTargetCoC=this.renderTarget.clone(),this.renderTargetCoC.texture.name="DoF.CoC",this.uniforms.get("farCoCBuffer").value=this.renderTargetCoC.texture,this.renderTargetCoCBlurred=this.renderTargetCoC.clone(),this.renderTargetCoCBlurred.texture.name="DoF.CoC.Blurred",this.uniforms.get("nearCoCBuffer").value=this.renderTargetCoCBlurred.texture,this.cocPass=new xa(new LP(i));const g=this.cocMaterial;g.focusDistance=r,g.focusRange=o,t!==void 0&&(g.worldFocusDistance=t),n!==void 0&&(g.worldFocusRange=n),this.blurPass=new Ey({resolutionScale:u,resolutionX:p,resolutionY:m,kernelSize:Ju.MEDIUM}),this.maskPass=new xa(new DP(this.renderTargetCoC.texture));const x=this.maskPass.fullscreenMaterial;x.colorChannel=wy.GREEN,this.maskFunction=Wp.MULTIPLY_RGB,this.bokehNearBasePass=new xa(new ou(!1,!0)),this.bokehNearBasePass.fullscreenMaterial.cocBuffer=this.renderTargetCoCBlurred.texture,this.bokehNearFillPass=new xa(new ou(!0,!0)),this.bokehNearFillPass.fullscreenMaterial.cocBuffer=this.renderTargetCoCBlurred.texture,this.bokehFarBasePass=new xa(new ou(!1,!1)),this.bokehFarBasePass.fullscreenMaterial.cocBuffer=this.renderTargetCoC.texture,this.bokehFarFillPass=new xa(new ou(!0,!1)),this.bokehFarFillPass.fullscreenMaterial.cocBuffer=this.renderTargetCoC.texture,this.target=null;const M=this.resolution=new dn(this,p,m,u);M.addEventListener("change",y=>this.setSize(M.baseWidth,M.baseHeight)),this.bokehScale=c}set mainCamera(i){this.camera=i,this.cocMaterial.copyCameraSettings(i)}get cocTexture(){return this.renderTargetCoC.texture}get maskFunction(){return this.maskPass.fullscreenMaterial.maskFunction}set maskFunction(i){this.maskFunction!==i&&(this.defines.set("MASK_FUNCTION",i.toFixed(0)),this.maskPass.fullscreenMaterial.maskFunction=i,this.setChanged())}get cocMaterial(){return this.cocPass.fullscreenMaterial}get circleOfConfusionMaterial(){return this.cocMaterial}getCircleOfConfusionMaterial(){return this.cocMaterial}getBlurPass(){return this.blurPass}getResolution(){return this.resolution}get bokehScale(){return this.uniforms.get("scale").value}set bokehScale(i){this.bokehNearBasePass.fullscreenMaterial.scale=i,this.bokehNearFillPass.fullscreenMaterial.scale=i,this.bokehFarBasePass.fullscreenMaterial.scale=i,this.bokehFarFillPass.fullscreenMaterial.scale=i,this.maskPass.fullscreenMaterial.strength=i,this.uniforms.get("scale").value=i}getBokehScale(){return this.bokehScale}setBokehScale(i){this.bokehScale=i}getTarget(){return this.target}setTarget(i){this.target=i}calculateFocusDistance(i){const e=this.camera,t=e.position.distanceTo(i);return Qd(-t,e.near,e.far)}setDepthTexture(i,e=Ji){this.cocMaterial.depthBuffer=i,this.cocMaterial.depthPacking=e}update(i,e,t){const n=this.renderTarget,r=this.renderTargetCoC,s=this.renderTargetCoCBlurred,o=this.renderTargetMasked;if(this.target!==null){const c=this.calculateFocusDistance(this.target);this.cocMaterial.focusDistance=c}this.cocPass.render(i,null,r),this.blurPass.render(i,r,s),this.maskPass.render(i,e,o),this.bokehFarBasePass.render(i,o,n),this.bokehFarFillPass.render(i,n,this.renderTargetFar),this.bokehNearBasePass.render(i,e,n),this.bokehNearFillPass.render(i,n,this.renderTargetNear)}setSize(i,e){const t=this.resolution;t.setBaseSize(i,e);const n=t.width,r=t.height;this.cocPass.setSize(i,e),this.blurPass.setSize(i,e),this.maskPass.setSize(i,e),this.renderTargetFar.setSize(i,e),this.renderTargetCoC.setSize(i,e),this.renderTargetMasked.setSize(i,e),this.renderTarget.setSize(n,r),this.renderTargetNear.setSize(n,r),this.renderTargetCoCBlurred.setSize(n,r),this.bokehNearBasePass.fullscreenMaterial.setSize(i,e),this.bokehNearFillPass.fullscreenMaterial.setSize(i,e),this.bokehFarBasePass.fullscreenMaterial.setSize(i,e),this.bokehFarFillPass.fullscreenMaterial.setSize(i,e)}initialize(i,e,t){this.cocPass.initialize(i,e,t),this.maskPass.initialize(i,e,t),this.bokehNearBasePass.initialize(i,e,t),this.bokehNearFillPass.initialize(i,e,t),this.bokehFarBasePass.initialize(i,e,t),this.bokehFarFillPass.initialize(i,e,t),this.blurPass.initialize(i,e,un),i.capabilities.logarithmicDepthBuffer&&(this.cocPass.fullscreenMaterial.defines.LOG_DEPTH="1"),t!==void 0&&(this.renderTarget.texture.type=t,this.renderTargetNear.texture.type=t,this.renderTargetFar.texture.type=t,this.renderTargetMasked.texture.type=t,i!==null&&i.outputColorSpace===yt&&(this.renderTarget.texture.colorSpace=yt,this.renderTargetNear.texture.colorSpace=yt,this.renderTargetFar.texture.colorSpace=yt,this.renderTargetMasked.texture.colorSpace=yt))}},Ty=class extends $n{constructor(i,e,t=null){super("RenderPass",i,e),this.needsSwap=!1,this.clearPass=new My,this.overrideMaterialManager=t===null?null:new E0(t),this.ignoreBackground=!1,this.skipShadowMapUpdate=!1,this.selection=null}set mainScene(i){this.scene=i}set mainCamera(i){this.camera=i}get renderToScreen(){return super.renderToScreen}set renderToScreen(i){super.renderToScreen=i,this.clearPass.renderToScreen=i}get overrideMaterial(){const i=this.overrideMaterialManager;return i!==null?i.material:null}set overrideMaterial(i){const e=this.overrideMaterialManager;i!==null?e!==null?e.setMaterial(i):this.overrideMaterialManager=new E0(i):e!==null&&(e.dispose(),this.overrideMaterialManager=null)}getOverrideMaterial(){return this.overrideMaterial}setOverrideMaterial(i){this.overrideMaterial=i}get clear(){return this.clearPass.enabled}set clear(i){this.clearPass.enabled=i}getSelection(){return this.selection}setSelection(i){this.selection=i}isBackgroundDisabled(){return this.ignoreBackground}setBackgroundDisabled(i){this.ignoreBackground=i}isShadowMapDisabled(){return this.skipShadowMapUpdate}setShadowMapDisabled(i){this.skipShadowMapUpdate=i}getClearPass(){return this.clearPass}render(i,e,t,n,r){const s=this.scene,o=this.camera,c=this.selection,u=o.layers.mask,h=s.background,f=i.shadowMap.autoUpdate,p=this.renderToScreen?null:e;c!==null&&o.layers.set(c.getLayer()),this.skipShadowMapUpdate&&(i.shadowMap.autoUpdate=!1),(this.ignoreBackground||this.clearPass.overrideClearColor!==null)&&(s.background=null),this.clearPass.enabled&&this.clearPass.render(i,e),i.setRenderTarget(p),this.overrideMaterialManager!==null?this.overrideMaterialManager.render(i,s,o):i.render(s,o),o.layers.mask=u,s.background=h,i.shadowMap.autoUpdate=f}},To={DEFAULT:0,ESKIL:1},OP=`void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 noise=vec3(rand(uv*(1.0+time)));
#ifdef PREMULTIPLY
outputColor=vec4(min(inputColor.rgb*noise,vec3(1.0)),inputColor.a);
#else
outputColor=vec4(noise,inputColor.a);
#endif
}`,BP=class extends Oa{constructor({blendFunction:i=pt.SCREEN,premultiply:e=!1}={}){super("NoiseEffect",OP,{blendFunction:i}),this.premultiply=e}get premultiply(){return this.defines.has("PREMULTIPLY")}set premultiply(i){this.premultiply!==i&&(i?this.defines.set("PREMULTIPLY","1"):this.defines.delete("PREMULTIPLY"),this.setChanged())}isPremultiplied(){return this.premultiply}setPremultiplied(i){this.premultiply=i}},zP=`#include <packing>
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
#ifdef DOWNSAMPLE_NORMALS
uniform lowp sampler2D normalBuffer;
#endif
varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}int findBestDepth(const in float samples[4]){float c=(samples[0]+samples[1]+samples[2]+samples[3])*0.25;float distances[4];distances[0]=abs(c-samples[0]);distances[1]=abs(c-samples[1]);distances[2]=abs(c-samples[2]);distances[3]=abs(c-samples[3]);float maxDistance=max(max(distances[0],distances[1]),max(distances[2],distances[3]));int remaining[3];int rejected[3];int i,j,k;for(i=0,j=0,k=0;i<4;++i){if(distances[i]<maxDistance){remaining[j++]=i;}else{rejected[k++]=i;}}for(;j<3;++j){remaining[j]=rejected[--k];}vec3 s=vec3(samples[remaining[0]],samples[remaining[1]],samples[remaining[2]]);c=(s.x+s.y+s.z)/3.0;distances[0]=abs(c-s.x);distances[1]=abs(c-s.y);distances[2]=abs(c-s.z);float minDistance=min(distances[0],min(distances[1],distances[2]));for(i=0;i<3;++i){if(distances[i]==minDistance){break;}}return remaining[i];}void main(){float d[4];d[0]=readDepth(vUv0);d[1]=readDepth(vUv1);d[2]=readDepth(vUv2);d[3]=readDepth(vUv3);int index=findBestDepth(d);
#ifdef DOWNSAMPLE_NORMALS
vec3 n[4];n[0]=texture2D(normalBuffer,vUv0).rgb;n[1]=texture2D(normalBuffer,vUv1).rgb;n[2]=texture2D(normalBuffer,vUv2).rgb;n[3]=texture2D(normalBuffer,vUv3).rgb;
#else
vec3 n[4];n[0]=vec3(0.0);n[1]=vec3(0.0);n[2]=vec3(0.0);n[3]=vec3(0.0);
#endif
gl_FragColor=vec4(n[index],d[index]);}`,kP="uniform vec2 texelSize;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vUv0=uv;vUv1=vec2(uv.x,uv.y+texelSize.y);vUv2=vec2(uv.x+texelSize.x,uv.y);vUv3=uv+texelSize;gl_Position=vec4(position.xy,1.0,1.0);}",HP=class extends nn{constructor(){super({name:"DepthDownsamplingMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new Ze(null),normalBuffer:new Ze(null),texelSize:new Ze(new oe)},blending:pn,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:zP,vertexShader:kP})}set depthBuffer(i){this.uniforms.depthBuffer.value=i}set depthPacking(i){this.defines.DEPTH_PACKING=i.toFixed(0),this.needsUpdate=!0}setDepthBuffer(i,e=Ji){this.depthBuffer=i,this.depthPacking=e}set normalBuffer(i){this.uniforms.normalBuffer.value=i,i!==null?this.defines.DOWNSAMPLE_NORMALS="1":delete this.defines.DOWNSAMPLE_NORMALS,this.needsUpdate=!0}setNormalBuffer(i){this.normalBuffer=i}setTexelSize(i,e){this.uniforms.texelSize.value.set(i,e)}setSize(i,e){this.uniforms.texelSize.value.set(1/i,1/e)}},VP=class extends $n{constructor({normalBuffer:i=null,resolutionScale:e=.5,width:t=dn.AUTO_SIZE,height:n=dn.AUTO_SIZE,resolutionX:r=t,resolutionY:s=n}={}){super("DepthDownsamplingPass");const o=new HP;o.normalBuffer=i,this.fullscreenMaterial=o,this.needsDepthTexture=!0,this.needsSwap=!1,this.renderTarget=new tn(1,1,{minFilter:en,magFilter:en,depthBuffer:!1,type:hi}),this.renderTarget.texture.name="DepthDownsamplingPass.Target",this.renderTarget.texture.generateMipmaps=!1;const c=this.resolution=new dn(this,r,s,e);c.addEventListener("change",u=>this.setSize(c.baseWidth,c.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}setDepthTexture(i,e=Ji){this.fullscreenMaterial.depthBuffer=i,this.fullscreenMaterial.depthPacking=e}render(i,e,t,n,r){i.setRenderTarget(this.renderToScreen?null:this.renderTarget),i.render(this.scene,this.camera)}setSize(i,e){const t=this.resolution;t.setBaseSize(i,e),this.renderTarget.setSize(t.width,t.height),this.fullscreenMaterial.setSize(i,e)}initialize(i,e,t){const n=i.getContext();if(!(n.getExtension("EXT_color_buffer_float")||n.getExtension("EXT_color_buffer_half_float")))throw new Error("Rendering to float texture is not supported.")}},GP=`uniform float offset;uniform float darkness;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){const vec2 center=vec2(0.5);vec3 color=inputColor.rgb;
#if VIGNETTE_TECHNIQUE == 0
float d=distance(uv,center);color*=smoothstep(0.8,offset*0.799,d*(darkness+offset));
#else
vec2 coord=(uv-center)*vec2(offset);color=mix(color,vec3(1.0-darkness),dot(coord,coord));
#endif
outputColor=vec4(color,inputColor.a);}`,WP=class extends Oa{constructor({blendFunction:i,eskil:e=!1,technique:t=e?To.ESKIL:To.DEFAULT,offset:n=.5,darkness:r=.5}={}){super("VignetteEffect",GP,{blendFunction:i,defines:new Map([["VIGNETTE_TECHNIQUE",t.toFixed(0)]]),uniforms:new Map([["offset",new Ze(n)],["darkness",new Ze(r)]])})}get technique(){return Number(this.defines.get("VIGNETTE_TECHNIQUE"))}set technique(i){this.technique!==i&&(this.defines.set("VIGNETTE_TECHNIQUE",i.toFixed(0)),this.setChanged())}get eskil(){return this.technique===To.ESKIL}set eskil(i){this.technique=i?To.ESKIL:To.DEFAULT}getTechnique(){return this.technique}setTechnique(i){this.technique=i}get offset(){return this.uniforms.get("offset").value}set offset(i){this.uniforms.get("offset").value=i}getOffset(){return this.offset}setOffset(i){this.offset=i}get darkness(){return this.uniforms.get("darkness").value}set darkness(i){this.uniforms.get("darkness").value=i}getDarkness(){return this.darkness}setDarkness(i){this.darkness=i}},XP=`#include <common>
#include <packing>
#include <dithering_pars_fragment>
#define packFloatToRGBA(v) packDepthToRGBA(v)
#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#if DEPTH_PACKING == 3201
uniform lowp sampler2D depthBuffer;
#elif defined(GL_FRAGMENT_PRECISION_HIGH)
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;
#if THREE_REVISION < 143
#define luminance(v) linearToRelativeLuminance(v)
#endif
#if THREE_REVISION >= 137
vec4 sRGBToLinear(const in vec4 value){return vec4(mix(pow(value.rgb*0.9478672986+vec3(0.0521327014),vec3(2.4)),value.rgb*0.0773993808,vec3(lessThanEqual(value.rgb,vec3(0.04045)))),value.a);}
#endif
float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}float getViewZ(const in float depth){
#ifdef PERSPECTIVE_CAMERA
return perspectiveDepthToViewZ(depth,cameraNear,cameraFar);
#else
return orthographicDepthToViewZ(depth,cameraNear,cameraFar);
#endif
}vec3 RGBToHCV(const in vec3 RGB){vec4 P=mix(vec4(RGB.bg,-1.0,2.0/3.0),vec4(RGB.gb,0.0,-1.0/3.0),step(RGB.b,RGB.g));vec4 Q=mix(vec4(P.xyw,RGB.r),vec4(RGB.r,P.yzx),step(P.x,RGB.r));float C=Q.x-min(Q.w,Q.y);float H=abs((Q.w-Q.y)/(6.0*C+EPSILON)+Q.z);return vec3(H,C,Q.x);}vec3 RGBToHSL(const in vec3 RGB){vec3 HCV=RGBToHCV(RGB);float L=HCV.z-HCV.y*0.5;float S=HCV.y/(1.0-abs(L*2.0-1.0)+EPSILON);return vec3(HCV.x,S,L);}vec3 HueToRGB(const in float H){float R=abs(H*6.0-3.0)-1.0;float G=2.0-abs(H*6.0-2.0);float B=2.0-abs(H*6.0-4.0);return clamp(vec3(R,G,B),0.0,1.0);}vec3 HSLToRGB(const in vec3 HSL){vec3 RGB=HueToRGB(HSL.x);float C=(1.0-abs(2.0*HSL.z-1.0))*HSL.y;return(RGB-0.5)*C+HSL.z;}FRAGMENT_HEAD void main(){FRAGMENT_MAIN_UV vec4 color0=texture2D(inputBuffer,UV);vec4 color1=vec4(0.0);FRAGMENT_MAIN_IMAGE color0.a=clamp(color0.a,0.0,1.0);gl_FragColor=color0;
#ifdef ENCODE_OUTPUT
#include <colorspace_fragment>
#endif
#include <dithering_fragment>
}`,qP="uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;VERTEX_HEAD void main(){vUv=position.xy*0.5+0.5;VERTEX_MAIN_SUPPORT gl_Position=vec4(position.xy,1.0,1.0);}",YP=class extends nn{constructor(i,e,t,n,r=!1){super({name:"EffectMaterial",defines:{THREE_REVISION:Cs.replace(/\D+/g,""),DEPTH_PACKING:"0",ENCODE_OUTPUT:"1"},uniforms:{inputBuffer:new Ze(null),depthBuffer:new Ze(null),resolution:new Ze(new oe),texelSize:new Ze(new oe),cameraNear:new Ze(.3),cameraFar:new Ze(1e3),aspect:new Ze(1),time:new Ze(0)},blending:pn,toneMapped:!1,depthWrite:!1,depthTest:!1,dithering:r}),i&&this.setShaderParts(i),e&&this.setDefines(e),t&&this.setUniforms(t),this.copyCameraSettings(n)}set inputBuffer(i){this.uniforms.inputBuffer.value=i}setInputBuffer(i){this.uniforms.inputBuffer.value=i}get depthBuffer(){return this.uniforms.depthBuffer.value}set depthBuffer(i){this.uniforms.depthBuffer.value=i}get depthPacking(){return Number(this.defines.DEPTH_PACKING)}set depthPacking(i){this.defines.DEPTH_PACKING=i.toFixed(0),this.needsUpdate=!0}setDepthBuffer(i,e=Ji){this.depthBuffer=i,this.depthPacking=e}setShaderData(i){this.setShaderParts(i.shaderParts),this.setDefines(i.defines),this.setUniforms(i.uniforms),this.setExtensions(i.extensions)}setShaderParts(i){return this.fragmentShader=XP.replace(bt.FRAGMENT_HEAD,i.get(bt.FRAGMENT_HEAD)||"").replace(bt.FRAGMENT_MAIN_UV,i.get(bt.FRAGMENT_MAIN_UV)||"").replace(bt.FRAGMENT_MAIN_IMAGE,i.get(bt.FRAGMENT_MAIN_IMAGE)||""),this.vertexShader=qP.replace(bt.VERTEX_HEAD,i.get(bt.VERTEX_HEAD)||"").replace(bt.VERTEX_MAIN_SUPPORT,i.get(bt.VERTEX_MAIN_SUPPORT)||""),this.fragmentShader=fl(this.fragmentShader),this.needsUpdate=!0,this}setDefines(i){for(const e of i.entries())this.defines[e[0]]=e[1];return this.needsUpdate=!0,this}setUniforms(i){for(const e of i.entries())this.uniforms[e[0]]=e[1];return this}setExtensions(i){this.extensions={};for(const e of i)this.extensions[e]=!0;return this}get encodeOutput(){return this.defines.ENCODE_OUTPUT!==void 0}set encodeOutput(i){this.encodeOutput!==i&&(i?this.defines.ENCODE_OUTPUT="1":delete this.defines.ENCODE_OUTPUT,this.needsUpdate=!0)}isOutputEncodingEnabled(i){return this.encodeOutput}setOutputEncodingEnabled(i){this.encodeOutput=i}get time(){return this.uniforms.time.value}set time(i){this.uniforms.time.value=i}setDeltaTime(i){this.uniforms.time.value+=i}adoptCameraSettings(i){this.copyCameraSettings(i)}copyCameraSettings(i){i&&(this.uniforms.cameraNear.value=i.near,this.uniforms.cameraFar.value=i.far,i instanceof $t?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(i,e){const t=this.uniforms;t.resolution.value.set(i,e),t.texelSize.value.set(1/i,1/e),t.aspect.value=i/e}static get Section(){return bt}};function T0(i,e,t){for(const n of e){const r="$1"+i+n.charAt(0).toUpperCase()+n.slice(1),s=new RegExp("([^\\.])(\\b"+n+"\\b)","g");for(const o of t.entries())o[1]!==null&&t.set(o[0],o[1].replace(s,r))}}function ZP(i,e,t){let n=e.getFragmentShader(),r=e.getVertexShader();const s=n!==void 0&&/mainImage/.test(n),o=n!==void 0&&/mainUv/.test(n);if(t.attributes|=e.getAttributes(),n===void 0)throw new Error(`Missing fragment shader (${e.name})`);if(o&&t.attributes&Zi.CONVOLUTION)throw new Error(`Effects that transform UVs are incompatible with convolution effects (${e.name})`);if(!s&&!o)throw new Error(`Could not find mainImage or mainUv function (${e.name})`);{const c=/\w+\s+(\w+)\([\w\s,]*\)\s*{/g,u=t.shaderParts;let h=u.get(bt.FRAGMENT_HEAD)||"",f=u.get(bt.FRAGMENT_MAIN_UV)||"",p=u.get(bt.FRAGMENT_MAIN_IMAGE)||"",m=u.get(bt.VERTEX_HEAD)||"",g=u.get(bt.VERTEX_MAIN_SUPPORT)||"";const x=new Set,M=new Set;if(o&&(f+=`	${i}MainUv(UV);
`,t.uvTransformation=!0),r!==null&&/mainSupport/.test(r)){const w=/mainSupport *\([\w\s]*?uv\s*?\)/.test(r);g+=`	${i}MainSupport(`,g+=w?`vUv);
`:`);
`;for(const E of r.matchAll(/(?:varying\s+\w+\s+([\S\s]*?);)/g))for(const A of E[1].split(/\s*,\s*/))t.varyings.add(A),x.add(A),M.add(A);for(const E of r.matchAll(c))M.add(E[1])}for(const w of n.matchAll(c))M.add(w[1]);for(const w of e.defines.keys())M.add(w.replace(/\([\w\s,]*\)/g,""));for(const w of e.uniforms.keys())M.add(w);M.delete("while"),M.delete("for"),M.delete("if"),e.uniforms.forEach((w,E)=>t.uniforms.set(i+E.charAt(0).toUpperCase()+E.slice(1),w)),e.defines.forEach((w,E)=>t.defines.set(i+E.charAt(0).toUpperCase()+E.slice(1),w));const y=new Map([["fragment",n],["vertex",r]]);T0(i,M,t.defines),T0(i,M,y),n=y.get("fragment"),r=y.get("vertex");const _=e.blendMode;if(t.blendModes.set(_.blendFunction,_),s){e.inputColorSpace!==null&&e.inputColorSpace!==t.colorSpace&&(p+=e.inputColorSpace===yt?`color0 = LinearTosRGB(color0);
	`:`color0 = sRGBToLinear(color0);
	`),e.outputColorSpace!==Ii?t.colorSpace=e.outputColorSpace:e.inputColorSpace!==null&&(t.colorSpace=e.inputColorSpace);const w=/MainImage *\([\w\s,]*?depth[\w\s,]*?\)/;p+=`${i}MainImage(color0, UV, `,t.attributes&Zi.DEPTH&&w.test(n)&&(p+="depth, ",t.readDepth=!0),p+=`color1);
	`;const E=i+"BlendOpacity";t.uniforms.set(E,_.opacity),p+=`color0 = blend${_.blendFunction}(color0, color1, ${E});

	`,h+=`uniform float ${E};

`}if(h+=n+`
`,r!==null&&(m+=r+`
`),u.set(bt.FRAGMENT_HEAD,h),u.set(bt.FRAGMENT_MAIN_UV,f),u.set(bt.FRAGMENT_MAIN_IMAGE,p),u.set(bt.VERTEX_HEAD,m),u.set(bt.VERTEX_MAIN_SUPPORT,g),e.extensions!==null)for(const w of e.extensions)t.extensions.add(w)}}var jP=class extends $n{constructor(i,...e){super("EffectPass"),this.fullscreenMaterial=new YP(null,null,null,i),this.listener=t=>this.handleEvent(t),this.effects=[],this.setEffects(e),this.skipRendering=!1,this.minTime=1,this.maxTime=Number.POSITIVE_INFINITY,this.timeScale=1}set mainScene(i){for(const e of this.effects)e.mainScene=i}set mainCamera(i){this.fullscreenMaterial.copyCameraSettings(i);for(const e of this.effects)e.mainCamera=i}get encodeOutput(){return this.fullscreenMaterial.encodeOutput}set encodeOutput(i){this.fullscreenMaterial.encodeOutput=i}get dithering(){return this.fullscreenMaterial.dithering}set dithering(i){const e=this.fullscreenMaterial;e.dithering=i,e.needsUpdate=!0}setEffects(i){for(const e of this.effects)e.removeEventListener("change",this.listener);this.effects=i.sort((e,t)=>t.attributes-e.attributes);for(const e of this.effects)e.addEventListener("change",this.listener)}updateMaterial(){const i=new UR;let e=0;for(const o of this.effects)if(o.blendMode.blendFunction===pt.DST)i.attributes|=o.getAttributes()&Zi.DEPTH;else{if(i.attributes&o.getAttributes()&Zi.CONVOLUTION)throw new Error(`Convolution effects cannot be merged (${o.name})`);ZP("e"+e++,o,i)}let t=i.shaderParts.get(bt.FRAGMENT_HEAD),n=i.shaderParts.get(bt.FRAGMENT_MAIN_IMAGE),r=i.shaderParts.get(bt.FRAGMENT_MAIN_UV);const s=/\bblend\b/g;for(const o of i.blendModes.values())t+=o.getShaderCode().replace(s,`blend${o.blendFunction}`)+`
`;i.attributes&Zi.DEPTH?(i.readDepth&&(n=`float depth = readDepth(UV);

	`+n),this.needsDepthTexture=this.getDepthTexture()===null):this.needsDepthTexture=!1,i.colorSpace===yt&&(n+=`color0 = sRGBToLinear(color0);
	`),i.uvTransformation?(r=`vec2 transformedUv = vUv;
`+r,i.defines.set("UV","transformedUv")):i.defines.set("UV","vUv"),i.shaderParts.set(bt.FRAGMENT_HEAD,t),i.shaderParts.set(bt.FRAGMENT_MAIN_IMAGE,n),i.shaderParts.set(bt.FRAGMENT_MAIN_UV,r);for(const[o,c]of i.shaderParts)c!==null&&i.shaderParts.set(o,c.trim().replace(/^#/,`
#`));this.skipRendering=e===0,this.needsSwap=!this.skipRendering,this.fullscreenMaterial.setShaderData(i)}recompile(){this.updateMaterial()}getDepthTexture(){return this.fullscreenMaterial.depthBuffer}setDepthTexture(i,e=Ji){this.fullscreenMaterial.depthBuffer=i,this.fullscreenMaterial.depthPacking=e;for(const t of this.effects)t.setDepthTexture(i,e)}render(i,e,t,n,r){for(const s of this.effects)s.update(i,e,n);if(!this.skipRendering||this.renderToScreen){const s=this.fullscreenMaterial;s.inputBuffer=e.texture,s.time+=n*this.timeScale,i.setRenderTarget(this.renderToScreen?null:t),i.render(this.scene,this.camera)}}setSize(i,e){this.fullscreenMaterial.setSize(i,e);for(const t of this.effects)t.setSize(i,e)}initialize(i,e,t){this.renderer=i;for(const n of this.effects)n.initialize(i,e,t);this.updateMaterial(),t!==void 0&&t!==un&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}dispose(){super.dispose();for(const i of this.effects)i.removeEventListener("change",this.listener),i.dispose()}handleEvent(i){switch(i.type){case"change":this.recompile();break}}},JP=class extends $n{constructor(i,e,{renderTarget:t,resolutionScale:n=1,width:r=dn.AUTO_SIZE,height:s=dn.AUTO_SIZE,resolutionX:o=r,resolutionY:c=s}={}){super("NormalPass"),this.needsSwap=!1,this.renderPass=new Ty(i,e,new Ip);const u=this.renderPass;u.ignoreBackground=!0,u.skipShadowMapUpdate=!0;const h=u.getClearPass();h.overrideClearColor=new Pe(7829503),h.overrideClearAlpha=1,this.renderTarget=t,this.renderTarget===void 0&&(this.renderTarget=new tn(1,1,{minFilter:en,magFilter:en}),this.renderTarget.texture.name="NormalPass.Target");const f=this.resolution=new dn(this,o,c,n);f.addEventListener("change",p=>this.setSize(f.baseWidth,f.baseHeight))}set mainScene(i){this.renderPass.mainScene=i}set mainCamera(i){this.renderPass.mainCamera=i}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}getResolutionScale(){return this.resolution.scale}setResolutionScale(i){this.resolution.scale=i}render(i,e,t,n,r){const s=this.renderToScreen?null:this.renderTarget;this.renderPass.render(i,s,s)}setSize(i,e){const t=this.resolution;t.setBaseSize(i,e),this.renderTarget.setSize(t.width,t.height)}};let Ao;function KP(){var i;if(Ao!==void 0)return Ao;try{let e;const t=document.createElement("canvas");return Ao=!!(window.WebGL2RenderingContext&&(e=t.getContext("webgl2"))),e&&((i=e.getExtension("WEBGL_lose_context"))==null||i.loseContext()),Ao}catch{return Ao=!1}}const Ay=he.createContext(null),A0=i=>(i.getAttributes()&Zi.CONVOLUTION)===Zi.CONVOLUTION,QP=od.memo(he.forwardRef(({children:i,camera:e,scene:t,resolutionScale:n,enabled:r=!0,renderPriority:s=1,autoClear:o=!0,depthBuffer:c,enableNormalPass:u,stencilBuffer:h,multisampling:f=8,frameBufferType:p=Ia},m)=>{const{gl:g,scene:x,camera:M,size:y}=ju(),_=t||x,w=e||M,[E,A,N]=he.useMemo(()=>{const C=KP(),b=new LR(g,{depthBuffer:c,stencilBuffer:h,multisampling:f>0&&C?f:0,frameBufferType:p});b.addPass(new Ty(_,w));let F=null,W=null;return u&&(W=new JP(_,w),W.enabled=!1,b.addPass(W),n!==void 0&&C&&(F=new VP({normalBuffer:W.texture,resolutionScale:n}),F.enabled=!1,b.addPass(F))),[b,W,F]},[w,g,c,h,f,p,_,u,n]);he.useEffect(()=>E?.setSize(y.width,y.height),[E,y]),hl((C,b)=>{if(r){const F=g.autoClear;g.autoClear=o,h&&!o&&g.clearStencil(),E.render(b),g.autoClear=F}},r?s:0);const P=he.useRef(null),I=eR(P);he.useLayoutEffect(()=>{const C=[];if(P.current&&I.current&&E){const b=I.current.objects;for(let F=0;F<b.length;F++){const W=b[F];if(W instanceof Oa){const k=[W];if(!A0(W)){let K=null;for(;(K=b[F+1])instanceof Oa&&!A0(K);)k.push(K),F++}const j=new jP(w,...k);C.push(j)}else W instanceof $n&&C.push(W)}for(const F of C)E?.addPass(F);A&&(A.enabled=!0),N&&(N.enabled=!0)}return()=>{for(const b of C)E?.removePass(b);A&&(A.enabled=!1),N&&(N.enabled=!1)}},[E,i,w,A,N,I]),he.useEffect(()=>{const C=g.toneMapping;return g.toneMapping=Li,()=>{g.toneMapping=C}},[]);const B=he.useMemo(()=>({composer:E,normalPass:A,downSamplingPass:N,resolutionScale:n,camera:w,scene:_}),[E,A,N,n,w,_]);return he.useImperativeHandle(m,()=>E,[E]),vt.jsx(Ay.Provider,{value:B,children:vt.jsx("group",{ref:P,children:i})})}));let $P=0;const b0=new WeakMap,Xp=(i,e)=>od.forwardRef(function({blendFunction:n=e?.blendFunction,opacity:r=e?.opacity,...s},o){let c=b0.get(i);if(!c){const f=`@react-three/postprocessing/${i.name}-${$P++}`;ny({[f]:i}),b0.set(i,c=f)}const u=ju(f=>f.camera),h=od.useMemo(()=>{var f,p;return[...(f=e?.args)!=null?f:[],...(p=s.args)!=null?p:[{...e,...s}]]},[JSON.stringify(s)]);return vt.jsx(c,{camera:u,"blendMode-blendFunction":n,"blendMode-opacity-value":r,...s,ref:o,args:h})}),e2=he.forwardRef(function({blendFunction:e,worldFocusDistance:t,worldFocusRange:n,focusDistance:r,focusRange:s,focalLength:o,bokehScale:c,resolutionScale:u,resolutionX:h,resolutionY:f,width:p,height:m,target:g,depthTexture:x,...M},y){const{camera:_}=he.useContext(Ay),w=g!=null,E=he.useMemo(()=>{const A=new FP(_,{blendFunction:e,worldFocusDistance:t,worldFocusRange:n,focusDistance:r,focusRange:s,focalLength:o,bokehScale:c,resolutionScale:u,resolutionX:h,resolutionY:f,width:p,height:m});w&&(A.target=new D),x&&A.setDepthTexture(x.texture,x.packing);const N=A.maskPass;return N.maskFunction=Wp.MULTIPLY_RGB_SET_ALPHA,A},[_,e,t,n,r,s,o,c,u,h,f,p,m,w,x]);return he.useEffect(()=>()=>{E.dispose()},[E]),vt.jsx("primitive",{...M,ref:y,object:E,target:g})}),t2=Xp(RP,{blendFunction:pt.ADD}),n2=Xp(BP,{blendFunction:pt.COLOR_DODGE}),i2=Xp(WP);function nl(){return nl=Object.assign?Object.assign.bind():function(i){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)({}).hasOwnProperty.call(t,n)&&(i[n]=t[n])}return i},nl.apply(null,arguments)}const pl=new D,qp=new D,r2=new D,C0=new oe;function s2(i,e,t){const n=pl.setFromMatrixPosition(i.matrixWorld);n.project(e);const r=t.width/2,s=t.height/2;return[n.x*r+r,-(n.y*s)+s]}function a2(i,e){const t=pl.setFromMatrixPosition(i.matrixWorld),n=qp.setFromMatrixPosition(e.matrixWorld),r=t.sub(n),s=e.getWorldDirection(r2);return r.angleTo(s)>Math.PI/2}function o2(i,e,t,n){const r=pl.setFromMatrixPosition(i.matrixWorld),s=r.clone();s.project(e),C0.set(s.x,s.y),t.setFromCamera(C0,e);const o=t.intersectObjects(n,!0);if(o.length){const c=o[0].distance;return r.distanceTo(t.ray.origin)<c}return!0}function l2(i,e){if(e instanceof Is)return e.zoom;if(e instanceof $t){const t=pl.setFromMatrixPosition(i.matrixWorld),n=qp.setFromMatrixPosition(e.matrixWorld),r=e.fov*Math.PI/180,s=t.distanceTo(n);return 1/(2*Math.tan(r/2)*s)}else return 1}function c2(i,e,t){if(e instanceof $t||e instanceof Is){const n=pl.setFromMatrixPosition(i.matrixWorld),r=qp.setFromMatrixPosition(e.matrixWorld),s=n.distanceTo(r),o=(t[1]-t[0])/(e.far-e.near),c=t[1]-o*e.far;return Math.round(o*s+c)}}const $d=i=>Math.abs(i)<1e-10?0:i;function by(i,e,t=""){let n="matrix3d(";for(let r=0;r!==16;r++)n+=$d(e[r]*i.elements[r])+(r!==15?",":")");return t+n}const u2=(i=>e=>by(e,i))([1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1]),h2=(i=>(e,t)=>by(e,i(t),"translate(-50%,-50%)"))(i=>[1/i,1/i,1/i,1,-1/i,-1/i,-1/i,-1,1/i,1/i,1/i,1,1,1,1,1]);function f2(i){return i&&typeof i=="object"&&"current"in i}const d2=he.forwardRef(({children:i,eps:e=.001,style:t,className:n,prepend:r,center:s,fullscreen:o,portal:c,distanceFactor:u,sprite:h=!1,transform:f=!1,occlude:p,onOcclude:m,castShadow:g,receiveShadow:x,material:M,geometry:y,zIndexRange:_=[16777271,0],calculatePosition:w=s2,as:E="div",wrapperClass:A,pointerEvents:N="auto",...P},I)=>{const{gl:B,camera:C,scene:b,size:F,raycaster:W,events:k,viewport:j}=ju(),[K]=he.useState(()=>document.createElement(E)),le=he.useRef(),ge=he.useRef(null),H=he.useRef(0),Q=he.useRef([0,0]),Z=he.useRef(null),fe=he.useRef(null),we=c?.current||k.connected||B.domElement.parentNode,Le=he.useRef(null),te=he.useRef(!1),me=he.useMemo(()=>p&&p!=="blending"||Array.isArray(p)&&p.length&&f2(p[0]),[p]);he.useLayoutEffect(()=>{const Fe=B.domElement;p&&p==="blending"?(Fe.style.zIndex=`${Math.floor(_[0]/2)}`,Fe.style.position="absolute",Fe.style.pointerEvents="none"):(Fe.style.zIndex=null,Fe.style.position=null,Fe.style.pointerEvents=null)},[p]),he.useLayoutEffect(()=>{if(ge.current){const Fe=le.current=ES(K);if(b.updateMatrixWorld(),f)K.style.cssText="position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;";else{const V=w(ge.current,C,F);K.style.cssText=`position:absolute;top:0;left:0;transform:translate3d(${V[0]}px,${V[1]}px,0);transform-origin:0 0;`}return we&&(r?we.prepend(K):we.appendChild(K)),()=>{we&&we.removeChild(K),Fe.unmount()}}},[we,f]),he.useLayoutEffect(()=>{A&&(K.className=A)},[A]);const Ae=he.useMemo(()=>f?{position:"absolute",top:0,left:0,width:F.width,height:F.height,transformStyle:"preserve-3d",pointerEvents:"none"}:{position:"absolute",transform:s?"translate3d(-50%,-50%,0)":"none",...o&&{top:-F.height/2,left:-F.width/2,width:F.width,height:F.height},...t},[t,s,o,F,f]),ye=he.useMemo(()=>({position:"absolute",pointerEvents:N}),[N]);he.useLayoutEffect(()=>{if(te.current=!1,f){var Fe;(Fe=le.current)==null||Fe.render(he.createElement("div",{ref:Z,style:Ae},he.createElement("div",{ref:fe,style:ye},he.createElement("div",{ref:I,className:n,style:t,children:i}))))}else{var V;(V=le.current)==null||V.render(he.createElement("div",{ref:I,style:Ae,className:n,children:i}))}});const Ye=he.useRef(!0);hl(Fe=>{if(ge.current){C.updateMatrixWorld(),ge.current.updateWorldMatrix(!0,!1);const V=f?Q.current:w(ge.current,C,F);if(f||Math.abs(H.current-C.zoom)>e||Math.abs(Q.current[0]-V[0])>e||Math.abs(Q.current[1]-V[1])>e){const ce=a2(ge.current,C);let re=!1;me&&(Array.isArray(p)?re=p.map(U=>U.current):p!=="blending"&&(re=[b]));const _e=Ye.current;if(re){const U=o2(ge.current,C,W,re);Ye.current=U&&!ce}else Ye.current=!ce;_e!==Ye.current&&(m?m(!Ye.current):K.style.display=Ye.current?"block":"none");const ve=Math.floor(_[0]/2),xe=p?me?[_[0],ve]:[ve-1,0]:_;if(K.style.zIndex=`${c2(ge.current,C,xe)}`,f){const[U,R]=[F.width/2,F.height/2],Y=C.projectionMatrix.elements[5]*R,{isOrthographicCamera:se,top:ue,left:de,bottom:Xe,right:pe}=C,ke=u2(C.matrixWorldInverse),je=se?`scale(${Y})translate(${$d(-(pe+de)/2)}px,${$d((ue+Xe)/2)}px)`:`translateZ(${Y}px)`;let Se=ge.current.matrixWorld;h&&(Se=C.matrixWorldInverse.clone().transpose().copyPosition(Se).scale(ge.current.scale),Se.elements[3]=Se.elements[7]=Se.elements[11]=0,Se.elements[15]=1),K.style.width=F.width+"px",K.style.height=F.height+"px",K.style.perspective=se?"":`${Y}px`,Z.current&&fe.current&&(Z.current.style.transform=`${je}${ke}translate(${U}px,${R}px)`,fe.current.style.transform=h2(Se,1/((u||10)/400)))}else{const U=u===void 0?1:l2(ge.current,C)*u;K.style.transform=`translate3d(${V[0]}px,${V[1]}px,0) scale(${U})`}Q.current=V,H.current=C.zoom}}if(!me&&Le.current&&!te.current)if(f){if(Z.current){const V=Z.current.children[0];if(V!=null&&V.clientWidth&&V!=null&&V.clientHeight){const{isOrthographicCamera:ce}=C;if(ce||y)P.scale&&(Array.isArray(P.scale)?P.scale instanceof D?Le.current.scale.copy(P.scale.clone().divideScalar(1)):Le.current.scale.set(1/P.scale[0],1/P.scale[1],1/P.scale[2]):Le.current.scale.setScalar(1/P.scale));else{const re=(u||10)/400,_e=V.clientWidth*re,ve=V.clientHeight*re;Le.current.scale.set(_e,ve,1)}te.current=!0}}}else{const V=K.children[0];if(V!=null&&V.clientWidth&&V!=null&&V.clientHeight){const ce=1/j.factor,re=V.clientWidth*ce,_e=V.clientHeight*ce;Le.current.scale.set(re,_e,1),te.current=!0}Le.current.lookAt(Fe.camera.position)}});const tt=he.useMemo(()=>({vertexShader:f?void 0:`
          /*
            This shader is from the THREE's SpriteMaterial.
            We need to turn the backing plane into a Sprite
            (make it always face the camera) if "transfrom"
            is false.
          */
          #include <common>

          void main() {
            vec2 center = vec2(0., 1.);
            float rotation = 0.0;

            // This is somewhat arbitrary, but it seems to work well
            // Need to figure out how to derive this dynamically if it even matters
            float size = 0.03;

            vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
            vec2 scale;
            scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
            scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );

            bool isPerspective = isPerspectiveMatrix( projectionMatrix );
            if ( isPerspective ) scale *= - mvPosition.z;

            vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;
            vec2 rotatedPosition;
            rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
            rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
            mvPosition.xy += rotatedPosition;

            gl_Position = projectionMatrix * mvPosition;
          }
      `,fragmentShader:`
        void main() {
          gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
        }
      `}),[f]);return he.createElement("group",nl({},P,{ref:ge}),p&&!me&&he.createElement("mesh",{castShadow:g,receiveShadow:x,ref:Le},y||he.createElement("planeGeometry",null),M||he.createElement("shaderMaterial",{side:kn,vertexShader:tt.vertexShader,fragmentShader:tt.fragmentShader})))}),ed=i=>i===Object(i)&&!Array.isArray(i)&&typeof i!="function";function Yp(i,e){const t=ju(s=>s.gl),n=Ns(Yu,ed(i)?Object.values(i):i);return he.useLayoutEffect(()=>{e?.(n)},[e]),he.useEffect(()=>{if("initTexture"in t){let s=[];Array.isArray(n)?s=n:n instanceof Bt?s=[n]:ed(n)&&(s=Object.values(n)),s.forEach(o=>{o instanceof Bt&&t.initTexture(o)})}},[t,n]),he.useMemo(()=>{if(ed(i)){const s={};let o=0;for(const c in i)s[c]=n[o++];return s}else return n},[i,n])}Yp.preload=i=>Ns.preload(Yu,i);Yp.clear=i=>Ns.clear(Yu,i);function Cy(i,{path:e}){const[t]=Ns(Fp,[i],n=>n.setPath(e));return t}Cy.preload=(i,{path:e})=>Ns.preload(Fp,[i],t=>t.setPath(e));var p2=`#define GLSLIFY 1
vec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}float snoise(vec3 v){const vec2 C=vec2(1.0/6.0,1.0/3.0);const vec4 D=vec4(0.0,0.5,1.0,2.0);vec3 i=floor(v+dot(v,C.yyy));vec3 x0=v-i+dot(i,C.xxx);vec3 g=step(x0.yzx,x0.xyz);vec3 l=1.0-g;vec3 i1=min(g.xyz,l.zxy);vec3 i2=max(g.xyz,l.zxy);vec3 x1=x0-i1+C.xxx;vec3 x2=x0-i2+C.yyy;vec3 x3=x0-D.yyy;i=mod289(i);vec4 p=permute(permute(permute(i.z+vec4(0.0,i1.z,i2.z,1.0))+i.y+vec4(0.0,i1.y,i2.y,1.0))+i.x+vec4(0.0,i1.x,i2.x,1.0));float n_=0.142857142857;vec3 ns=n_*D.wyz-D.xzx;vec4 j=p-49.0*floor(p*ns.z*ns.z);vec4 x_=floor(j*ns.z);vec4 y_=floor(j-7.0*x_);vec4 x=x_*ns.x+ns.yyyy;vec4 y=y_*ns.x+ns.yyyy;vec4 h=1.0-abs(x)-abs(y);vec4 b0=vec4(x.xy,y.xy);vec4 b1=vec4(x.zw,y.zw);vec4 s0=floor(b0)*2.0+1.0;vec4 s1=floor(b1)*2.0+1.0;vec4 sh=-step(h,vec4(0.0));vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;vec3 p0=vec3(a0.xy,h.x);vec3 p1=vec3(a0.zw,h.y);vec3 p2=vec3(a1.xy,h.z);vec3 p3=vec3(a1.zw,h.w);vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));p0*=norm.x;p1*=norm.y;p2*=norm.z;p3*=norm.w;vec4 m=max(0.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.0);m=m*m;return 42.0*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));}`;class m2 extends Pp{constructor(e={}){super(e),this.setValues(e),this._time={value:0},this._distort={value:.4},this._radius={value:1}}onBeforeCompile(e){e.uniforms.time=this._time,e.uniforms.radius=this._radius,e.uniforms.distort=this._distort,e.vertexShader=`
      uniform float time;
      uniform float radius;
      uniform float distort;
      ${p2}
      ${e.vertexShader}
    `,e.vertexShader=e.vertexShader.replace("#include <begin_vertex>",`
        float updateTime = time / 50.0;
        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));
        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));
        `)}get time(){return this._time.value}set time(e){this._time.value=e}get distort(){return this._distort.value}set distort(e){this._distort.value=e}get radius(){return this._radius.value}set radius(e){this._radius.value=e}}const g2=he.forwardRef(({speed:i=1,...e},t)=>{const[n]=he.useState(()=>new m2);return hl(r=>n&&(n.time=r.clock.getElapsedTime()*i)),he.createElement("primitive",nl({object:n,ref:t,attach:"material"},e))});function v2(i,e){const t=i+"Geometry";return he.forwardRef(({args:n,children:r,...s},o)=>{const c=he.useRef(null);return he.useImperativeHandle(o,()=>c.current),he.useLayoutEffect(()=>void e?.(c.current)),he.createElement("mesh",nl({ref:c},s),he.createElement(t,{attach:"geometry",args:n}),r)})}const Ry=v2("icosahedron");function _2(i,{whileHover:e,onHoverStart:t,onHoverEnd:n,onPointerOver:r,onPointerOut:s},o){return i||!o||!(e||t||n)?{}:{onPointerOver:u=>{var h;(h=o.animationState)===null||h===void 0||h.setActive("whileHover",!0),r&&r(u)},onPointerOut:u=>{var h;(h=o.animationState)===null||h===void 0||h.setActive("whileHover",!1),s&&s(u)}}}function x2(i,{whileTap:e,onTapStart:t,onTap:n,onTapCancel:r,onPointerDown:s},o){const c=n||t||r||e,u=he.useRef(!1),h=he.useRef(null);if(i||!o||!c)return{};function f(){var x;(x=h.current)===null||x===void 0||x.call(h),h.current=null}function p(){var x;return f(),u.current=!1,(x=o.animationState)===null||x===void 0||x.setActive("whileTap",!1),!AS()}function m(x,M){p()&&n?.(x,M)}function g(x,M){p()&&r?.(x,M)}return{onPointerDown:wS((x,M)=>{var y;if(f(),u.current)return;u.current=!0;const _={passive:!(t||n||r||s)};h.current=TS(Ag(window,"pointerup",m,_),Ag(window,"pointercancel",g,_)),(y=o.animationState)===null||y===void 0||y.setActive("whileTap",!0),s?.(x),t?.(x,M)})}}const y2=(i,e,t,n,r,s)=>{const o=S2(e);return he.createElement(i,Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ref:t},bS(e,!1,!1)),o),{onUpdate:e.onInstanceUpdate}),_2(r,e,s)),x2(r,e,s)))};function S2(i){return he.useMemo(()=>{const e={};for(const t in i){const n=i[t];Ea(n)?e[t]=n.get():Array.isArray(n)&&n.includes(Ea)&&(e[t]=n.map(CS))}return e},[])}const Py=(i,e)=>t=>(n,r)=>{n[i]===void 0&&(n[i]=new D(e)),n[i].setComponent(t,r)},M2=(i,e)=>t=>(n,r)=>{n[i]===void 0&&(n[i]=new Kn(e));const s=n[i];s[t]=r},R0=i=>(e,t)=>{e[i]===void 0&&(e[i]=new Pe(t)),e[i].set(t)},td=Py("scale",1),nd=Py("position",0),id=M2("rotation",0),P0={x:nd(0),y:nd(1),z:nd(2),scale:(i,e)=>{i.scale===void 0&&(i.scale=new D(1)),i.scale.set(e,e,e)},scaleX:td(0),scaleY:td(1),scaleZ:td(2),rotateX:id("x"),rotateY:id("y"),rotateZ:id("z"),color:R0("color"),specular:R0("specular")};function E2(i,e,t){e in P0?P0[e](i,t[e]):(e==="opacity"&&!i.transparent&&(i.transparent=!0),i[e]=t[e])}const Zp=(i,e)=>t=>n=>{const r=n[i];return r?r[t]:e},rd=Zp("position",0),lu=Zp("scale",1),sd=Zp("rotation",0),I0={x:rd("x"),y:rd("y"),z:rd("z"),scale:lu("x"),scaleX:lu("x"),scaleY:lu("y"),scaleZ:lu("z"),rotateX:sd("x"),rotateY:sd("y"),rotateZ:sd("z")};function w2(i){if(i!==void 0)return i instanceof Pe?i.getStyle():i}function T2(i,e){return e in I0?I0[e](i):w2(i[e])||0}const A2=["x","y","z"],L0={"position-x":"x","position-y":"y","position-z":"z","rotation-x":"rotateX","rotation-y":"rotateY","rotation-z":"rotateZ","scale-x":"scaleX","scale-y":"scaleY","scale-z":"scaleZ"},Iy=(i,e)=>{const t={};let n;for(n in i){const r=i[n];if(Ea(r)||Ea(e[n])){const s=L0[n]||n;t[s]=r}else if(Array.isArray(r))for(let s=0;s<r.length;s++){const o=r[s],c=e[n],u=Array.isArray(c)?c[s]:void 0;if(Ea(o)||u!==void 0&&Ea(u)){const h=L0[`${n}-${A2[s]}`];t[h]=o}}}return t},b2=()=>({});class C2 extends RS{constructor(){super(...arguments),this.type="three"}readValueFromInstance(e,t){return T2(e,t)}getBaseTargetFromProps(){}sortInstanceNodePosition(e,t){return e.id-t.id}removeValueFromRenderState(){}measureInstanceViewportBox(){return PS()}scrapeMotionValuesFromProps(e,t){return Iy(e,t)}build(e,t){for(const n in t)e[n]=t[n]}renderInstance(e,t){for(const n in t)E2(e,n,t)}}const R2=(i,e)=>new C2(e,{}),P2=US({scrapeMotionValuesFromProps:Iy,createRenderState:b2}),I2=Object.assign({},IS);function U0(i){return LS({Component:i,preloadedFeatures:I2,useRender:y2,useVisualState:P2,createVisualElement:R2})}const ad=new Map,L2=new Proxy(U0,{get:(i,e)=>(!ad.has(e)&&ad.set(e,U0(e)),ad.get(e))});function U2({material:i}){const e=he.useRef(),[t,n]=he.useState({h:206.34,s:100,l:22}),[r,s]=he.useState(null),o=3;return hl(({clock:c,mouse:u})=>{r||s(c.getElapsedTime());const h=c.getElapsedTime()-r,f=Math.min(h/o,1),p={h:147.72,s:100,l:37};e.current.rotation.z=c.getElapsedTime(),e.current.rotation.y=ya.lerp(e.current.rotation.y,u.x*Math.PI,.1),e.current.rotation.x=ya.lerp(e.current.rotation.x,u.y*Math.PI,.1),ya.lerp(t.h,p.h,f),ya.lerp(t.s,p.s,f),ya.lerp(t.l,p.l,f),h>=o&&s(null)}),vt.jsx(L2.mesh,{initial:{},animate:{y:.4,x:[.7,.4,.7],scale:[1,1.4,1]},transition:{duration:3,ease:"easeInOut",loop:1/0,repeatDelay:0},children:vt.jsx(Ry,{ref:e,args:[1,6],material:i,position:[-1,0,0]})})}function D2({material:i}){const[e]=he.useState(()=>[]),t=[[-4,20,-12],[-10,12,-4],[-11,-12,-23],[-16,-6,-10],[12,-2,-3],[13,4,-12],[14,-2,-23],[8,10,-20]];return hl(()=>{e.forEach(n=>{n.position.x+=.02,n.position.x>19&&(n.position.x=-18),n.rotation.y+=.06,n.rotation.x+=.06,n.rotation.z+=.02})}),vt.jsxs(vt.Fragment,{children:[vt.jsx(U2,{material:i}),t.map((n,r)=>vt.jsx(Ry,{args:[1,4],position:[n[0],n[1],n[2]],material:i,ref:s=>e[r]=s},r))]})}function N2(){const i=Yp("/bump.jpg"),e=Cy(["volkihar-cube-px.jpg","volkihar-cube-nx.jpg","volkihar-cube-py.jpg","volkihar-cube-ny.jpg","volkihar-cube-pz.jpg","volkihar-cube-nz.jpg"],{path:"/cube/"}),[t,n]=he.useState();return vt.jsxs(vt.Fragment,{children:[vt.jsx(g2,{ref:n,envMap:e,bumpMap:i,color:"#010101",roughness:.1,metalness:1,bumpScale:.005,clearcoat:1,clearcoatRoughness:1,radius:.9,distort:.4}),t&&vt.jsx(D2,{material:t})]})}function W2(){return vt.jsxs(MR,{camera:{position:[0,0,3]},gl:{powerPreference:"high-performance",antialias:!1,stencil:!1,depth:!1},children:[vt.jsx("fog",{color:"#00e094",attach:"fog",near:8,far:30}),vt.jsx(he.Suspense,{fallback:vt.jsx(d2,{center:!0,children:"..."}),children:vt.jsx(N2,{})}),vt.jsxs(QP,{multisampling:0,disableNormalPass:!0,children:[vt.jsx(e2,{focusDistance:0,focalLength:.02,bokehScale:2,height:480}),vt.jsx(t2,{luminanceThreshold:0,luminanceSmoothing:.9,height:300,opacity:3}),vt.jsx(n2,{opacity:.025}),vt.jsx(i2,{eskil:!1,offset:.1,darkness:1.1})]})]})}export{W2 as SphereCanvas};
